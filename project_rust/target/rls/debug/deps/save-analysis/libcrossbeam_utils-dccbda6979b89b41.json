{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1","program":"C:\\Users\\saman\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_utils","--edition=2018","C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=dccbda6979b89b41","-C","extra-filename=-dccbda6979b89b41","--out-dir","c:\\Users\\saman\\Desktop\\ECE522-Project\\project_rust\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\saman\\Desktop\\ECE522-Project\\project_rust\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\saman\\Desktop\\ECE522-Project\\project_rust\\target\\rls\\debug\\deps\\libcfg_if-fe9552b56d377df4.rmeta","--extern","lazy_static=c:\\Users\\saman\\Desktop\\ECE522-Project\\project_rust\\target\\rls\\debug\\deps\\liblazy_static-d2a3d85c36d2e5c0.rmeta","--cap-lints","allow","--cfg","has_atomic_u8","--cfg","has_atomic_u16","--cfg","has_atomic_u32","--cfg","has_atomic_u64","--error-format=json","--sysroot","C:\\Users\\saman\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\saman\\Desktop\\ECE522-Project\\project_rust\\target\\rls\\debug\\deps\\libcrossbeam_utils-dccbda6979b89b41.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_utils","disambiguator":[13549610902095433769,4677894797868068087]},"crate_root":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src","external_crates":[{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\mod.rs","num":14,"id":{"name":"cfg_if","disambiguator":[10490533630110347277,1660893665774984996]}},{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","num":15,"id":{"name":"lazy_static","disambiguator":[4516623831510152009,17434107222073870648]}}],"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":0,"byte_end":1667,"line_start":1,"line_end":56,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\mod.rs","byte_start":2466,"byte_end":2476,"line_start":26,"line_end":26,"column_start":28,"column_end":38},"alias_span":null,"name":"AtomicCell","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\mod.rs","byte_start":2501,"byte_end":2514,"line_start":27,"line_end":27,"column_start":24,"column_end":37},"alias_span":null,"name":"AtomicConsume","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":1489,"byte_end":1500,"line_start":44,"line_end":44,"column_start":30,"column_end":41},"alias_span":null,"name":"CachePadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":1540,"byte_end":1547,"line_start":47,"line_end":47,"column_start":25,"column_end":32},"alias_span":null,"name":"Backoff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373424,"byte_end":7373430,"line_start":11,"line_end":11,"column_start":24,"column_end":30},"alias_span":null,"name":"Parker","value":"","parent":{"krate":0,"index":288}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373432,"byte_end":7373440,"line_start":11,"line_end":11,"column_start":32,"column_end":40},"alias_span":null,"name":"Unparker","value":"","parent":{"krate":0,"index":288}},{"kind":"Use","ref_id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373472,"byte_end":7373483,"line_start":12,"line_end":12,"column_start":30,"column_end":41},"alias_span":null,"name":"ShardedLock","value":"","parent":{"krate":0,"index":288}},{"kind":"Use","ref_id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373485,"byte_end":7373505,"line_start":12,"line_end":12,"column_start":43,"column_end":63},"alias_span":null,"name":"ShardedLockReadGuard","value":"","parent":{"krate":0,"index":288}},{"kind":"Use","ref_id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373507,"byte_end":7373528,"line_start":12,"line_end":12,"column_start":65,"column_end":86},"alias_span":null,"name":"ShardedLockWriteGuard","value":"","parent":{"krate":0,"index":288}},{"kind":"Use","ref_id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373557,"byte_end":7373566,"line_start":13,"line_end":13,"column_start":27,"column_end":36},"alias_span":null,"name":"WaitGroup","value":"","parent":{"krate":0,"index":288}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":0,"byte_end":1667,"line_start":1,"line_end":56,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":100},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":288},{"krate":0,"index":487}],"decl_id":null,"docs":" Miscellaneous tools for concurrent programming.","sig":null,"attributes":[{"value":"! Miscellaneous tools for concurrent programming.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## Atomics","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":56,"byte_end":70,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":71,"byte_end":74,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":75,"byte_end":135,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"! * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":136,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":226,"byte_end":229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! ## Thread synchronization","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":230,"byte_end":259,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":260,"byte_end":263,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`Parker`], a thread parking primitive.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":264,"byte_end":309,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"! * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":310,"byte_end":389,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"! * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":390,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":471,"byte_end":474,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! ## Utilities","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":475,"byte_end":491,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":492,"byte_end":495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! * [`Backoff`], for exponential backoff in spin loops.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":496,"byte_end":553,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"! * [`CachePadded`], for padding and aligning a value to the length of a cache line.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":554,"byte_end":640,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"! * [`scope`], for spawning threads that borrow local variables from the stack.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":641,"byte_end":722,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":723,"byte_end":726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! [`AtomicCell`]: atomic::AtomicCell","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":727,"byte_end":765,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"! [`AtomicConsume`]: atomic::AtomicConsume","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":766,"byte_end":810,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"! [`Parker`]: sync::Parker","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":811,"byte_end":839,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"! [`ShardedLock`]: sync::ShardedLock","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":840,"byte_end":878,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"! [`WaitGroup`]: sync::WaitGroup","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":879,"byte_end":913,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"! [`scope`]: thread::scope","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":914,"byte_end":942,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":1103,"byte_end":1174,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":1315,"byte_end":1358,"line_start":38,"line_end":38,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"atomic","qualname":"::atomic","value":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":147},{"krate":0,"index":5},{"krate":0,"index":88},{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" Atomic types.\n","sig":null,"attributes":[{"value":"! Atomic types.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\mod.rs","byte_start":1669,"byte_end":1686,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3592,"byte_end":3602,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"AtomicCell","qualname":"::atomic::atomic_cell::AtomicCell","value":"AtomicCell {  }","parent":null,"children":[{"krate":0,"index":20}],"decl_id":null,"docs":" A thread-safe mutable memory location.","sig":null,"attributes":[{"value":"/ A thread-safe mutable memory location.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":2871,"byte_end":2913,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":2914,"byte_end":2917,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`Cell`], except it can also be shared among multiple threads.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":2918,"byte_end":3011,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3012,"byte_end":3015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Operations on `AtomicCell`s use atomic instructions whenever possible, and synchronize using","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3016,"byte_end":3112,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ global locks otherwise. You can call [`AtomicCell::<T>::is_lock_free()`] to check whether","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3113,"byte_end":3206,"line_start":21,"line_end":21,"column_start":1,"column_end":94}},{"value":"/ atomic instructions or locks will be used.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3207,"byte_end":3253,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3254,"byte_end":3257,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Atomic loads use the [`Acquire`] ordering and atomic stores use the [`Release`] ordering.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3258,"byte_end":3351,"line_start":24,"line_end":24,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3352,"byte_end":3355,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: std::cell::Cell","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3356,"byte_end":3385,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/ [`AtomicCell::<T>::is_lock_free()`]: AtomicCell::is_lock_free","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3386,"byte_end":3451,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ [`Acquire`]: std::sync::atomic::Ordering::Acquire","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3452,"byte_end":3505,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ [`Release`]: std::sync::atomic::Ordering::Release","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3506,"byte_end":3559,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3560,"byte_end":3580,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4368,"byte_end":4371,"line_start":58,"line_end":58,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicCell<T>>::new","value":"pub const fn new(T) -> AtomicCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new atomic cell initialized with `val`.","sig":null,"attributes":[{"value":"/ Creates a new atomic cell initialized with `val`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4145,"byte_end":4198,"line_start":49,"line_end":49,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4203,"byte_end":4206,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4211,"byte_end":4225,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4230,"byte_end":4233,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4238,"byte_end":4245,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4250,"byte_end":4294,"line_start":54,"line_end":54,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4299,"byte_end":4302,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4307,"byte_end":4338,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4343,"byte_end":4350,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4768,"byte_end":4778,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AtomicCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the atomic and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the atomic and returns the contained value.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4482,"byte_end":4538,"line_start":64,"line_end":64,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4543,"byte_end":4546,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4551,"byte_end":4565,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4570,"byte_end":4573,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4578,"byte_end":4585,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4590,"byte_end":4634,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4639,"byte_end":4642,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4647,"byte_end":4678,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/ let v = a.into_inner();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4683,"byte_end":4710,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4715,"byte_end":4718,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, 7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4723,"byte_end":4744,"line_start":74,"line_end":74,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4749,"byte_end":4756,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6059,"byte_end":6071,"line_start":108,"line_end":108,"column_start":18,"column_end":30},"name":"is_lock_free","qualname":"<AtomicCell<T>>::is_lock_free","value":"pub const fn is_lock_free() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if operations on values of this type are lock-free.","sig":null,"attributes":[{"value":"/ Returns `true` if operations on values of this type are lock-free.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4835,"byte_end":4905,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4910,"byte_end":4913,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ If the compiler or the platform doesn't support the necessary atomic instructions,","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4918,"byte_end":5004,"line_start":82,"line_end":82,"column_start":5,"column_end":91}},{"value":"/ `AtomicCell<T>` will use global locks for every potentially concurrent atomic operation.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5009,"byte_end":5101,"line_start":83,"line_end":83,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5106,"byte_end":5109,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5114,"byte_end":5128,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5133,"byte_end":5136,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5141,"byte_end":5148,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5153,"byte_end":5197,"line_start":88,"line_end":88,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5202,"byte_end":5205,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // This type is internally represented as `AtomicUsize` so we can just use atomic","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5210,"byte_end":5295,"line_start":90,"line_end":90,"column_start":5,"column_end":90}},{"value":"/ // operations provided by it.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5300,"byte_end":5333,"line_start":91,"line_end":91,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(AtomicCell::<usize>::is_lock_free(), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5338,"byte_end":5396,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5401,"byte_end":5404,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // A wrapper struct around `isize`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5409,"byte_end":5448,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5453,"byte_end":5469,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/     bar: isize,","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5474,"byte_end":5493,"line_start":96,"line_end":96,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5498,"byte_end":5503,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ // `AtomicCell<Foo>` will be internally represented as `AtomicIsize`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5508,"byte_end":5581,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(AtomicCell::<Foo>::is_lock_free(), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5586,"byte_end":5642,"line_start":99,"line_end":99,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5647,"byte_end":5650,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Operations on zero-sized types are always lock-free.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5655,"byte_end":5714,"line_start":101,"line_end":101,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(AtomicCell::<()>::is_lock_free(), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5719,"byte_end":5774,"line_start":102,"line_end":102,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5779,"byte_end":5782,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ // Very large types cannot be represented as any of the standard atomic types, so atomic","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5787,"byte_end":5879,"line_start":104,"line_end":104,"column_start":5,"column_end":97}},{"value":"/ // operations on them will have to use global locks for synchronization.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5884,"byte_end":5960,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(AtomicCell::<[u8; 1000]>::is_lock_free(), false);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":5965,"byte_end":6029,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6034,"byte_end":6041,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6426,"byte_end":6431,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"store","qualname":"<AtomicCell<T>>::store","value":"pub fn store(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6130,"byte_end":6168,"line_start":112,"line_end":112,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6173,"byte_end":6176,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6181,"byte_end":6195,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6200,"byte_end":6203,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6208,"byte_end":6215,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6220,"byte_end":6264,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6269,"byte_end":6272,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6277,"byte_end":6308,"line_start":119,"line_end":119,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6313,"byte_end":6316,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6321,"byte_end":6349,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/ a.store(8);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6354,"byte_end":6369,"line_start":122,"line_end":122,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6374,"byte_end":6402,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6407,"byte_end":6414,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6986,"byte_end":6990,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicCell<T>>::swap","value":"pub fn swap(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell and returns the previous value.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell and returns the previous value.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6645,"byte_end":6714,"line_start":135,"line_end":135,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6719,"byte_end":6722,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6727,"byte_end":6741,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6746,"byte_end":6749,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6754,"byte_end":6761,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6766,"byte_end":6810,"line_start":140,"line_end":140,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6815,"byte_end":6818,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6823,"byte_end":6854,"line_start":142,"line_end":142,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6859,"byte_end":6862,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6867,"byte_end":6895,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.swap(8), 7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6900,"byte_end":6929,"line_start":145,"line_end":145,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6934,"byte_end":6962,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":6967,"byte_end":6974,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7397,"byte_end":7403,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AtomicCell<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying data in this atomic cell.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying data in this atomic cell.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7112,"byte_end":7181,"line_start":154,"line_end":154,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7186,"byte_end":7189,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7194,"byte_end":7208,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7213,"byte_end":7216,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7221,"byte_end":7228,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7233,"byte_end":7277,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7282,"byte_end":7285,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7290,"byte_end":7321,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7326,"byte_end":7329,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let ptr = a.as_ptr();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7334,"byte_end":7359,"line_start":163,"line_end":163,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7364,"byte_end":7371,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7376,"byte_end":7385,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7845,"byte_end":7849,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicCell<T>>::take","value":"pub fn take(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the atomic cell, leaving `Default::default()` in its place.","sig":null,"attributes":[{"value":"/ Takes the value of the atomic cell, leaving `Default::default()` in its place.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7494,"byte_end":7576,"line_start":172,"line_end":172,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7581,"byte_end":7584,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7589,"byte_end":7603,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7608,"byte_end":7611,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7616,"byte_end":7623,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7628,"byte_end":7672,"line_start":177,"line_end":177,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7677,"byte_end":7680,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7685,"byte_end":7716,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/ let five = a.take();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7721,"byte_end":7745,"line_start":180,"line_end":180,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7750,"byte_end":7753,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(five, 5);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7758,"byte_end":7782,"line_start":182,"line_end":182,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(a.into_inner(), 0);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7787,"byte_end":7821,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7826,"byte_end":7833,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8189,"byte_end":8193,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"load","qualname":"<AtomicCell<T>>::load","value":"pub fn load(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads a value from the atomic cell.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic cell.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7945,"byte_end":7984,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7989,"byte_end":7992,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7997,"byte_end":8011,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8016,"byte_end":8019,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8024,"byte_end":8031,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8036,"byte_end":8080,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8085,"byte_end":8088,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8093,"byte_end":8124,"line_start":198,"line_end":198,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8129,"byte_end":8132,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8137,"byte_end":8165,"line_start":200,"line_end":200,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8170,"byte_end":8177,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8854,"byte_end":8870,"line_start":226,"line_end":226,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<AtomicCell<T>>::compare_and_swap","value":"pub fn compare_and_swap(&Self, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8305,"byte_end":8382,"line_start":208,"line_end":208,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8387,"byte_end":8390,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previous value. If it is equal to `current`, then the value","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8395,"byte_end":8489,"line_start":210,"line_end":210,"column_start":5,"column_end":99}},{"value":"/ was updated.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8494,"byte_end":8510,"line_start":211,"line_end":211,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8515,"byte_end":8518,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8523,"byte_end":8537,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8542,"byte_end":8545,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8550,"byte_end":8557,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8562,"byte_end":8606,"line_start":216,"line_end":216,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8611,"byte_end":8614,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8619,"byte_end":8650,"line_start":218,"line_end":218,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8655,"byte_end":8658,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(2, 3), 1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8663,"byte_end":8707,"line_start":220,"line_end":220,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8712,"byte_end":8740,"line_start":221,"line_end":221,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8745,"byte_end":8748,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(1, 2), 1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8753,"byte_end":8797,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8802,"byte_end":8830,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8835,"byte_end":8842,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9652,"byte_end":9668,"line_start":251,"line_end":251,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<AtomicCell<T>>::compare_exchange","value":"pub fn compare_exchange(&Self, T, T) -> Result<T, T>","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9027,"byte_end":9104,"line_start":233,"line_end":233,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9109,"byte_end":9112,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new value was written and containing","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9117,"byte_end":9209,"line_start":235,"line_end":235,"column_start":5,"column_end":97}},{"value":"/ the previous value. On success this value is guaranteed to be equal to `current`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9214,"byte_end":9299,"line_start":236,"line_end":236,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9304,"byte_end":9307,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9312,"byte_end":9326,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9331,"byte_end":9334,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9339,"byte_end":9346,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9351,"byte_end":9395,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9400,"byte_end":9403,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9408,"byte_end":9439,"line_start":243,"line_end":243,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9444,"byte_end":9447,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(2, 3), Err(1));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9452,"byte_end":9501,"line_start":245,"line_end":245,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9506,"byte_end":9534,"line_start":246,"line_end":246,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9539,"byte_end":9542,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(1, 2), Ok(1));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9547,"byte_end":9595,"line_start":248,"line_end":248,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9600,"byte_end":9628,"line_start":249,"line_end":249,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":9633,"byte_end":9640,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19971,"byte_end":19980,"line_start":542,"line_end":542,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<AtomicCell<bool>>::fetch_and","value":"pub fn fetch_and(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"and\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"and\" to the current value and returns the previous value.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19532,"byte_end":19610,"line_start":526,"line_end":526,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19615,"byte_end":19618,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19623,"byte_end":19637,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19642,"byte_end":19645,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19650,"byte_end":19657,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19662,"byte_end":19706,"line_start":531,"line_end":531,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19711,"byte_end":19714,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19719,"byte_end":19753,"line_start":533,"line_end":533,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19758,"byte_end":19761,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(true), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19766,"byte_end":19806,"line_start":535,"line_end":535,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19811,"byte_end":19842,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19847,"byte_end":19850,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(false), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19855,"byte_end":19896,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19901,"byte_end":19933,"line_start":539,"line_end":539,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19938,"byte_end":19945,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19950,"byte_end":19959,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20572,"byte_end":20580,"line_start":563,"line_end":563,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<AtomicCell<bool>>::fetch_or","value":"pub fn fetch_or(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"or\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"or\" to the current value and returns the previous value.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20133,"byte_end":20210,"line_start":547,"line_end":547,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20215,"byte_end":20218,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20223,"byte_end":20237,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20242,"byte_end":20245,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20250,"byte_end":20257,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20262,"byte_end":20306,"line_start":552,"line_end":552,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20311,"byte_end":20314,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(false);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20319,"byte_end":20354,"line_start":554,"line_end":554,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20359,"byte_end":20362,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(false), false);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20367,"byte_end":20408,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20413,"byte_end":20445,"line_start":557,"line_end":557,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20450,"byte_end":20453,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(true), false);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20458,"byte_end":20498,"line_start":559,"line_end":559,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20503,"byte_end":20534,"line_start":560,"line_end":560,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20539,"byte_end":20546,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20551,"byte_end":20560,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21171,"byte_end":21180,"line_start":584,"line_end":584,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<AtomicCell<bool>>::fetch_xor","value":"pub fn fetch_xor(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"xor\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"xor\" to the current value and returns the previous value.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20732,"byte_end":20810,"line_start":568,"line_end":568,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20815,"byte_end":20818,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20823,"byte_end":20837,"line_start":570,"line_end":570,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20842,"byte_end":20845,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20850,"byte_end":20857,"line_start":572,"line_end":572,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20862,"byte_end":20906,"line_start":573,"line_end":573,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20911,"byte_end":20914,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20919,"byte_end":20953,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20958,"byte_end":20961,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(false), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":20966,"byte_end":21007,"line_start":577,"line_end":577,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21012,"byte_end":21043,"line_start":578,"line_end":578,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21048,"byte_end":21051,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(true), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21056,"byte_end":21096,"line_start":580,"line_end":580,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21101,"byte_end":21133,"line_start":581,"line_end":581,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21138,"byte_end":21145,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21150,"byte_end":21159,"line_start":583,"line_end":583,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":33971,"byte_end":33984,"line_start":6,"line_end":6,"column_start":11,"column_end":24},"name":"AtomicConsume","qualname":"::atomic::consume::AtomicConsume","value":"AtomicConsume","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"decl_id":null,"docs":" Trait which allows reading from primitive atomic types with \"consume\" ordering.\n","sig":null,"attributes":[{"value":"/ Trait which allows reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":33877,"byte_end":33960,"line_start":5,"line_end":5,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34037,"byte_end":34040,"line_start":8,"line_end":8,"column_start":10,"column_end":13},"name":"Val","qualname":"::atomic::consume::AtomicConsume::Val","value":"type Val;","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Type returned by `load_consume`.\n","sig":null,"attributes":[{"value":"/ Type returned by `load_consume`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":33991,"byte_end":34027,"line_start":7,"line_end":7,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34878,"byte_end":34890,"line_start":25,"line_end":25,"column_start":8,"column_end":20},"name":"load_consume","qualname":"::atomic::consume::AtomicConsume::load_consume","value":"pub fn load_consume(&Self) -> Self::Val","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Loads a value from the atomic using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34047,"byte_end":34115,"line_start":10,"line_end":10,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34120,"byte_end":34123,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34128,"byte_end":34201,"line_start":12,"line_end":12,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34206,"byte_end":34282,"line_start":13,"line_end":13,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34287,"byte_end":34358,"line_start":14,"line_end":14,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34363,"byte_end":34437,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34442,"byte_end":34465,"line_start":16,"line_end":16,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34470,"byte_end":34473,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34478,"byte_end":34553,"line_start":18,"line_end":18,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34558,"byte_end":34632,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34637,"byte_end":34671,"line_start":20,"line_end":20,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34676,"byte_end":34679,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This is currently only implemented on ARM and AArch64, where a fence","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34684,"byte_end":34756,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ can be avoided. On other architectures this will fall back to a simple","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34761,"byte_end":34835,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/ `load(Ordering::Acquire)`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":34840,"byte_end":34870,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39202,"byte_end":39213,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"CachePadded","qualname":"::cache_padded::CachePadded","value":"CachePadded {  }","parent":null,"children":[{"krate":0,"index":264}],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36327,"byte_end":36385,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36386,"byte_end":36389,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, sometimes it is desirable to make sure commonly accessed pieces of","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36390,"byte_end":36487,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ data are not placed into the same cache line. Updating an atomic value invalidates the whole","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36488,"byte_end":36584,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ cache line it belongs to, which makes the next access to the same cache line slower for other","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36585,"byte_end":36682,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ CPU cores. Use `CachePadded` to ensure updating one piece of data doesn't invalidate other","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36683,"byte_end":36777,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ cached data.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36778,"byte_end":36794,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36795,"byte_end":36798,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Size and alignment","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36799,"byte_end":36823,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36824,"byte_end":36827,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Cache lines are assumed to be N bytes long, depending on the architecture:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36828,"byte_end":36906,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36907,"byte_end":36910,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * On x86-64 and aarch64, N = 128.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36911,"byte_end":36948,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ * On all others, N = 64.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36949,"byte_end":36977,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36978,"byte_end":36981,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Note that N is just a reasonable guess and is not guaranteed to match the actual cache line","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":36982,"byte_end":37077,"line_start":19,"line_end":19,"column_start":1,"column_end":96}},{"value":"/ length of the machine the program is running on. On modern Intel architectures, spatial","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37078,"byte_end":37169,"line_start":20,"line_end":20,"column_start":1,"column_end":92}},{"value":"/ prefetcher is pulling pairs of 64-byte cache lines at a time, so we pessimistically assume that","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37170,"byte_end":37269,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/ cache lines are 128 bytes long.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37270,"byte_end":37305,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37306,"byte_end":37309,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The size of `CachePadded<T>` is the smallest multiple of N bytes large enough to accommodate","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37310,"byte_end":37406,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ a value of type `T`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37407,"byte_end":37431,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37432,"byte_end":37435,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The alignment of `CachePadded<T>` is the maximum of N bytes and the alignment of `T`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37436,"byte_end":37525,"line_start":27,"line_end":27,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37526,"byte_end":37529,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37530,"byte_end":37544,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37545,"byte_end":37548,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Alignment and padding:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37549,"byte_end":37575,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37576,"byte_end":37579,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37580,"byte_end":37587,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37588,"byte_end":37625,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37626,"byte_end":37629,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let array = [CachePadded::new(1i8), CachePadded::new(2i8)];","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37630,"byte_end":37693,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ let addr1 = &*array[0] as *const i8 as usize;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37694,"byte_end":37743,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ let addr2 = &*array[1] as *const i8 as usize;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37744,"byte_end":37793,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37794,"byte_end":37797,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ assert!(addr2 - addr1 >= 64);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37798,"byte_end":37831,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(addr1 % 64, 0);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37832,"byte_end":37862,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(addr2 % 64, 0);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37863,"byte_end":37893,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37894,"byte_end":37901,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37902,"byte_end":37905,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ When building a concurrent queue with a head and a tail index, it is wise to place them in","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":37906,"byte_end":38000,"line_start":45,"line_end":45,"column_start":1,"column_end":95}},{"value":"/ different cache lines so that concurrent threads pushing and popping elements don't invalidate","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38001,"byte_end":38099,"line_start":46,"line_end":46,"column_start":1,"column_end":99}},{"value":"/ each other's cache lines:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38100,"byte_end":38129,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38130,"byte_end":38133,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38134,"byte_end":38141,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38142,"byte_end":38179,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38180,"byte_end":38219,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38220,"byte_end":38223,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ struct Queue<T> {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38224,"byte_end":38245,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/     head: CachePadded<AtomicUsize>,","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38246,"byte_end":38285,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/     tail: CachePadded<AtomicUsize>,","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38286,"byte_end":38325,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/     buffer: *mut T,","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38326,"byte_end":38349,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38350,"byte_end":38355,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":38356,"byte_end":38363,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"repr(align(128))","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39074,"byte_end":39090,"line_start":71,"line_end":71,"column_start":66,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39595,"byte_end":39598,"line_start":93,"line_end":93,"column_start":18,"column_end":21},"name":"new","qualname":"<CachePadded<T>>::new","value":"pub const fn new(T) -> CachePadded<T>","parent":null,"children":[],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39362,"byte_end":39420,"line_start":84,"line_end":84,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39425,"byte_end":39428,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39433,"byte_end":39447,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39452,"byte_end":39455,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39460,"byte_end":39467,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39472,"byte_end":39509,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39514,"byte_end":39517,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39522,"byte_end":39565,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39570,"byte_end":39577,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39948,"byte_end":39958,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CachePadded<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value.","sig":null,"attributes":[{"value":"/ Returns the inner value.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39674,"byte_end":39702,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39707,"byte_end":39710,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39715,"byte_end":39729,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39734,"byte_end":39737,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39742,"byte_end":39749,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39754,"byte_end":39791,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39796,"byte_end":39799,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39804,"byte_end":39847,"line_start":104,"line_end":104,"column_start":5,"column_end":48}},{"value":"/ let value = padded_value.into_inner();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39852,"byte_end":39894,"line_start":105,"line_end":105,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(value, 7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39899,"byte_end":39924,"line_start":106,"line_end":106,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39929,"byte_end":39936,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42870,"byte_end":42877,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"Backoff","qualname":"::backoff::Backoff","value":"Backoff {  }","parent":null,"children":[{"krate":0,"index":134}],"decl_id":null,"docs":" Performs exponential backoff in spin loops.","sig":null,"attributes":[{"value":"/ Performs exponential backoff in spin loops.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":40671,"byte_end":40718,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":40719,"byte_end":40722,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Backing off in spin loops reduces contention and improves overall performance.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":40723,"byte_end":40805,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":40806,"byte_end":40809,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This primitive can execute *YIELD* and *PAUSE* instructions, yield the current thread to the OS","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":40810,"byte_end":40909,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ scheduler, and tell when is a good time to block the thread using a different synchronization","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":40910,"byte_end":41007,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ mechanism. Each step of the back off procedure takes roughly twice as long as the previous","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41008,"byte_end":41102,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ step.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41103,"byte_end":41112,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41113,"byte_end":41116,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41117,"byte_end":41131,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41132,"byte_end":41135,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41136,"byte_end":41172,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41173,"byte_end":41176,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41177,"byte_end":41184,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41185,"byte_end":41218,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41219,"byte_end":41258,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41259,"byte_end":41303,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41304,"byte_end":41307,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41308,"byte_end":41362,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41363,"byte_end":41400,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41401,"byte_end":41415,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41416,"byte_end":41453,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/         if a.compare_and_swap(val, val.wrapping_mul(b), SeqCst) == val {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41454,"byte_end":41530,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/             return val;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41531,"byte_end":41558,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/         }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41559,"byte_end":41572,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         backoff.spin();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41573,"byte_end":41600,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41601,"byte_end":41610,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41611,"byte_end":41616,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41617,"byte_end":41624,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41625,"byte_end":41628,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41629,"byte_end":41680,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41681,"byte_end":41684,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41685,"byte_end":41692,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41693,"byte_end":41726,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41727,"byte_end":41765,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41766,"byte_end":41810,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41811,"byte_end":41814,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41815,"byte_end":41853,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41854,"byte_end":41891,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41892,"byte_end":41927,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/         backoff.snooze();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41928,"byte_end":41957,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41958,"byte_end":41967,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41968,"byte_end":41973,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41974,"byte_end":41981,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41982,"byte_end":41985,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":41986,"byte_end":42078,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/ Note that whoever sets the atomic variable to `true` must notify the parked thread by calling","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42079,"byte_end":42176,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ [`unpark()`]:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42177,"byte_end":42194,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42195,"byte_end":42198,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42199,"byte_end":42206,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42207,"byte_end":42240,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42241,"byte_end":42279,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42280,"byte_end":42324,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42325,"byte_end":42345,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42346,"byte_end":42349,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42350,"byte_end":42392,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42393,"byte_end":42430,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42431,"byte_end":42466,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42467,"byte_end":42506,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/             thread::park();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42507,"byte_end":42538,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42539,"byte_end":42559,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/             backoff.snooze();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42560,"byte_end":42593,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42594,"byte_end":42607,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42608,"byte_end":42617,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42618,"byte_end":42623,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42624,"byte_end":42631,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42632,"byte_end":42635,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42636,"byte_end":42679,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ [`std::thread::park()`]: std::thread::park","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42680,"byte_end":42726,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/ [`Condvar`]: std::sync::Condvar","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42727,"byte_end":42762,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42763,"byte_end":42812,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ [`unpark()`]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42813,"byte_end":42858,"line_start":79,"line_end":79,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43120,"byte_end":43123,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Backoff>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Backoff`.","sig":null,"attributes":[{"value":"/ Creates a new `Backoff`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42923,"byte_end":42951,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42956,"byte_end":42959,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42964,"byte_end":42978,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42983,"byte_end":42986,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42991,"byte_end":42998,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43003,"byte_end":43036,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43041,"byte_end":43044,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43049,"byte_end":43082,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43087,"byte_end":43094,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43099,"byte_end":43108,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43405,"byte_end":43410,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"reset","qualname":"<Backoff>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Backoff`.","sig":null,"attributes":[{"value":"/ Resets the `Backoff`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43186,"byte_end":43211,"line_start":99,"line_end":99,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43216,"byte_end":43219,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43224,"byte_end":43238,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43243,"byte_end":43246,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43251,"byte_end":43258,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43263,"byte_end":43296,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43301,"byte_end":43304,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43309,"byte_end":43342,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ backoff.reset();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43347,"byte_end":43367,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43372,"byte_end":43379,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43384,"byte_end":43393,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44445,"byte_end":44449,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"spin","qualname":"<Backoff>::spin","value":"pub fn spin(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a lock-free loop.","sig":null,"attributes":[{"value":"/ Backs off in a lock-free loop.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43457,"byte_end":43491,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43496,"byte_end":43499,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to retry an operation because another thread made","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43504,"byte_end":43597,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ progress.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43602,"byte_end":43615,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43620,"byte_end":43623,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43628,"byte_end":43697,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43702,"byte_end":43705,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43710,"byte_end":43724,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43729,"byte_end":43732,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43737,"byte_end":43773,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43778,"byte_end":43781,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43786,"byte_end":43793,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43798,"byte_end":43831,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43836,"byte_end":43875,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43880,"byte_end":43924,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43929,"byte_end":43932,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43937,"byte_end":43991,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":43996,"byte_end":44033,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44038,"byte_end":44052,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44057,"byte_end":44094,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/         if a.compare_and_swap(val, val.wrapping_mul(b), SeqCst) == val {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44099,"byte_end":44175,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/             return val;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44180,"byte_end":44207,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/         }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44212,"byte_end":44225,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/         backoff.spin();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44230,"byte_end":44257,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44262,"byte_end":44271,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44276,"byte_end":44281,"line_start":139,"line_end":139,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44286,"byte_end":44289,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicUsize::new(7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44294,"byte_end":44326,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(fetch_mul(&a, 8), 7);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44331,"byte_end":44367,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.load(SeqCst), 56);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44372,"byte_end":44407,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44412,"byte_end":44419,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44424,"byte_end":44433,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46334,"byte_end":46340,"line_start":205,"line_end":205,"column_start":12,"column_end":18},"name":"snooze","qualname":"<Backoff>::snooze","value":"pub fn snooze(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a blocking loop.","sig":null,"attributes":[{"value":"/ Backs off in a blocking loop.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44679,"byte_end":44712,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44717,"byte_end":44720,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to wait for another thread to make progress.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44725,"byte_end":44813,"line_start":158,"line_end":158,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44818,"byte_end":44821,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction and the current thread","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44826,"byte_end":44917,"line_start":160,"line_end":160,"column_start":5,"column_end":96}},{"value":"/ may yield by giving up a timeslice to the OS scheduler.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44922,"byte_end":44981,"line_start":161,"line_end":161,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44986,"byte_end":44989,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ In `#[no_std]` environments, this method is equivalent to [`spin`].","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":44994,"byte_end":45065,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45070,"byte_end":45073,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ If possible, use [`is_completed`] to check when it is advised to stop using backoff and","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45078,"byte_end":45169,"line_start":165,"line_end":165,"column_start":5,"column_end":96}},{"value":"/ block the current thread using a different synchronization mechanism instead.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45174,"byte_end":45255,"line_start":166,"line_end":166,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45260,"byte_end":45263,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`spin`]: Backoff::spin","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45268,"byte_end":45295,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45300,"byte_end":45343,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45348,"byte_end":45351,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45356,"byte_end":45370,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45375,"byte_end":45378,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45383,"byte_end":45434,"line_start":173,"line_end":173,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45439,"byte_end":45442,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45447,"byte_end":45454,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45459,"byte_end":45492,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45497,"byte_end":45520,"line_start":177,"line_end":177,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45525,"byte_end":45563,"line_start":178,"line_end":178,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45568,"byte_end":45612,"line_start":179,"line_end":179,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45617,"byte_end":45637,"line_start":180,"line_end":180,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45642,"byte_end":45670,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45675,"byte_end":45678,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45683,"byte_end":45721,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45726,"byte_end":45763,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45768,"byte_end":45803,"line_start":185,"line_end":185,"column_start":5,"column_end":40}},{"value":"/         backoff.snooze();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45808,"byte_end":45837,"line_start":186,"line_end":186,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45842,"byte_end":45851,"line_start":187,"line_end":187,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45856,"byte_end":45861,"line_start":188,"line_end":188,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45866,"byte_end":45869,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45874,"byte_end":45923,"line_start":190,"line_end":190,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45928,"byte_end":45959,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45964,"byte_end":45967,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":45972,"byte_end":45999,"line_start":193,"line_end":193,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46004,"byte_end":46054,"line_start":194,"line_end":194,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46059,"byte_end":46094,"line_start":195,"line_end":195,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46099,"byte_end":46106,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46111,"byte_end":46114,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46119,"byte_end":46161,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ spin_wait(&ready);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46166,"byte_end":46188,"line_start":199,"line_end":199,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46193,"byte_end":46234,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46239,"byte_end":46246,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46251,"byte_end":46254,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46259,"byte_end":46308,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46313,"byte_end":46322,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48185,"byte_end":48197,"line_start":267,"line_end":267,"column_start":12,"column_end":24},"name":"is_completed","qualname":"<Backoff>::is_completed","value":"pub fn is_completed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if exponential backoff has completed and blocking the thread is advised.","sig":null,"attributes":[{"value":"/ Returns `true` if exponential backoff has completed and blocking the thread is advised.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46858,"byte_end":46949,"line_start":225,"line_end":225,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46954,"byte_end":46957,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46962,"byte_end":46976,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46981,"byte_end":46984,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":46989,"byte_end":47081,"line_start":229,"line_end":229,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47086,"byte_end":47089,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47094,"byte_end":47101,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47106,"byte_end":47139,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47144,"byte_end":47167,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47172,"byte_end":47210,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47215,"byte_end":47259,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47264,"byte_end":47284,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47289,"byte_end":47317,"line_start":237,"line_end":237,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47322,"byte_end":47325,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47330,"byte_end":47372,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47377,"byte_end":47414,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47419,"byte_end":47454,"line_start":241,"line_end":241,"column_start":5,"column_end":40}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47459,"byte_end":47498,"line_start":242,"line_end":242,"column_start":5,"column_end":44}},{"value":"/             thread::park();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47503,"byte_end":47534,"line_start":243,"line_end":243,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47539,"byte_end":47559,"line_start":244,"line_end":244,"column_start":5,"column_end":25}},{"value":"/             backoff.snooze();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47564,"byte_end":47597,"line_start":245,"line_end":245,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47602,"byte_end":47615,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47620,"byte_end":47629,"line_start":247,"line_end":247,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47634,"byte_end":47639,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47644,"byte_end":47647,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47652,"byte_end":47701,"line_start":250,"line_end":250,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47706,"byte_end":47737,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/ let waiter = thread::current();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47742,"byte_end":47777,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47782,"byte_end":47785,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47790,"byte_end":47817,"line_start":254,"line_end":254,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47822,"byte_end":47872,"line_start":255,"line_end":255,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47877,"byte_end":47912,"line_start":256,"line_end":256,"column_start":5,"column_end":40}},{"value":"/     waiter.unpark();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47917,"byte_end":47941,"line_start":257,"line_end":257,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47946,"byte_end":47953,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47958,"byte_end":47961,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":47966,"byte_end":48008,"line_start":260,"line_end":260,"column_start":5,"column_end":47}},{"value":"/ blocking_wait(&ready);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48013,"byte_end":48039,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48044,"byte_end":48085,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48090,"byte_end":48097,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48102,"byte_end":48105,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48110,"byte_end":48159,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48164,"byte_end":48173,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":336},{"krate":0,"index":457},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"decl_id":null,"docs":" Thread synchronization primitives.","sig":null,"attributes":[{"value":"! Thread synchronization primitives.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373103,"byte_end":7373141,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373142,"byte_end":7373145,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! * [`Parker`], a thread parking primitive.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373146,"byte_end":7373191,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"! * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373192,"byte_end":7373271,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\mod.rs","byte_start":7373272,"byte_end":7373352,"line_start":5,"line_end":5,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375266,"byte_end":7375272,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Parker","qualname":"::sync::parker::Parker","value":"Parker {  }","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":" A thread parking primitive.","sig":null,"attributes":[{"value":"/ A thread parking primitive.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7373754,"byte_end":7373785,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7373786,"byte_end":7373789,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Conceptually, each `Parker` has an associated token which is initially not present:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7373790,"byte_end":7373877,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7373878,"byte_end":7373881,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * The [`park`] method blocks the current thread unless or until the token is available, at","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7373882,"byte_end":7373976,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/   which point it automatically consumes the token. It may also return *spuriously*, without","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7373977,"byte_end":7374072,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/   consuming the token.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374073,"byte_end":7374099,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374100,"byte_end":7374103,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * The [`park_timeout`] method works the same as [`park`], but blocks for a specified maximum","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374104,"byte_end":7374200,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/   time.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374201,"byte_end":7374212,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374213,"byte_end":7374216,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The [`unpark`] method atomically makes the token available if it wasn't already. Because the","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374217,"byte_end":7374315,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/   token is initially absent, [`unpark`] followed by [`park`] will result in the second call","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374316,"byte_end":7374411,"line_start":20,"line_end":20,"column_start":1,"column_end":96}},{"value":"/   returning immediately.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374412,"byte_end":7374440,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374441,"byte_end":7374444,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In other words, each `Parker` acts a bit like a spinlock that can be locked and unlocked using","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374445,"byte_end":7374543,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ [`park`] and [`unpark`].","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374544,"byte_end":7374572,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374573,"byte_end":7374576,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374577,"byte_end":7374591,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374592,"byte_end":7374595,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374596,"byte_end":7374603,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374604,"byte_end":7374624,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374625,"byte_end":7374653,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374654,"byte_end":7374692,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374693,"byte_end":7374696,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374697,"byte_end":7374723,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374724,"byte_end":7374757,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374758,"byte_end":7374761,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Make the token available.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374762,"byte_end":7374794,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ u.unpark();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374795,"byte_end":7374810,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374811,"byte_end":7374862,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374863,"byte_end":7374876,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374877,"byte_end":7374880,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374881,"byte_end":7374908,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374909,"byte_end":7374959,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/     u.unpark();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374960,"byte_end":7374979,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374980,"byte_end":7374987,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374988,"byte_end":7374991,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Wakes up when `u.unpark()` provides the token, but may also wake up","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7374992,"byte_end":7375066,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ // spuriously before that without consuming the token.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375067,"byte_end":7375125,"line_start":47,"line_end":47,"column_start":1,"column_end":59}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375126,"byte_end":7375139,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375140,"byte_end":7375147,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375148,"byte_end":7375151,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375152,"byte_end":7375178,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375179,"byte_end":7375221,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ [`unpark`]: Unparker::unpark","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375222,"byte_end":7375254,"line_start":53,"line_end":53,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375942,"byte_end":7375945,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<Parker>::new","value":"pub fn new() -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Parker`.","sig":null,"attributes":[{"value":"/ Creates a new `Parker`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375754,"byte_end":7375781,"line_start":77,"line_end":77,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375786,"byte_end":7375789,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375794,"byte_end":7375808,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375813,"byte_end":7375816,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375821,"byte_end":7375828,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375833,"byte_end":7375871,"line_start":82,"line_end":82,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375876,"byte_end":7375879,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375884,"byte_end":7375910,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375915,"byte_end":7375922,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375927,"byte_end":7375930,"line_start":86,"line_end":86,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376543,"byte_end":7376547,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"park","qualname":"<Parker>::park","value":"pub fn park(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375995,"byte_end":7376059,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376064,"byte_end":7376067,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ A call to `park` may wake up spuriously without consuming the token, and callers should be","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376072,"byte_end":7376166,"line_start":93,"line_end":93,"column_start":5,"column_end":99}},{"value":"/ prepared for this possibility.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376171,"byte_end":7376205,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376210,"byte_end":7376213,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376218,"byte_end":7376232,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376237,"byte_end":7376240,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376245,"byte_end":7376252,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376257,"byte_end":7376295,"line_start":99,"line_end":99,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376300,"byte_end":7376303,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376308,"byte_end":7376334,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376339,"byte_end":7376372,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376377,"byte_end":7376380,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376385,"byte_end":7376417,"line_start":104,"line_end":104,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376422,"byte_end":7376437,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376442,"byte_end":7376445,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376450,"byte_end":7376501,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376506,"byte_end":7376519,"line_start":108,"line_end":108,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376524,"byte_end":7376531,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377191,"byte_end":7377203,"line_start":130,"line_end":130,"column_start":12,"column_end":24},"name":"park_timeout","qualname":"<Parker>::park_timeout","value":"pub fn park_timeout(&Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, but only for a limited time.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, but only for a limited time.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376608,"byte_end":7376701,"line_start":114,"line_end":114,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376706,"byte_end":7376709,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ A call to `park_timeout` may wake up spuriously without consuming the token, and callers","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376714,"byte_end":7376806,"line_start":116,"line_end":116,"column_start":5,"column_end":97}},{"value":"/ should be prepared for this possibility.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376811,"byte_end":7376855,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376860,"byte_end":7376863,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376868,"byte_end":7376882,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376887,"byte_end":7376890,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376895,"byte_end":7376902,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376907,"byte_end":7376935,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376940,"byte_end":7376978,"line_start":123,"line_end":123,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376983,"byte_end":7376986,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7376991,"byte_end":7377017,"line_start":125,"line_end":125,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377022,"byte_end":7377025,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377030,"byte_end":7377115,"line_start":127,"line_end":127,"column_start":5,"column_end":90}},{"value":"/ p.park_timeout(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377120,"byte_end":7377167,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377172,"byte_end":7377179,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377866,"byte_end":7377874,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"unparker","qualname":"<Parker>::unparker","value":"pub fn unparker(&Self) -> &Unparker","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an associated [`Unparker`].","sig":null,"attributes":[{"value":"/ Returns a reference to an associated [`Unparker`].","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377292,"byte_end":7377346,"line_start":134,"line_end":134,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377351,"byte_end":7377354,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The returned [`Unparker`] doesn't have to be used by reference - it can also be cloned.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377359,"byte_end":7377450,"line_start":136,"line_end":136,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377455,"byte_end":7377458,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377463,"byte_end":7377477,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377482,"byte_end":7377485,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377490,"byte_end":7377497,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377502,"byte_end":7377540,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377545,"byte_end":7377548,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377553,"byte_end":7377579,"line_start":143,"line_end":143,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377584,"byte_end":7377617,"line_start":144,"line_end":144,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377622,"byte_end":7377625,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377630,"byte_end":7377662,"line_start":146,"line_end":146,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377667,"byte_end":7377682,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377687,"byte_end":7377738,"line_start":148,"line_end":148,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377743,"byte_end":7377756,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377761,"byte_end":7377768,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377773,"byte_end":7377776,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377781,"byte_end":7377807,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377812,"byte_end":7377854,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378166,"byte_end":7378174,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Parker>::into_raw","value":"pub fn into_raw(Parker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Parker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts a `Parker` into a raw pointer.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377931,"byte_end":7377974,"line_start":158,"line_end":158,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377979,"byte_end":7377982,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7377987,"byte_end":7378001,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378006,"byte_end":7378009,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378014,"byte_end":7378021,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378026,"byte_end":7378064,"line_start":163,"line_end":163,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378069,"byte_end":7378072,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378077,"byte_end":7378103,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378108,"byte_end":7378142,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378147,"byte_end":7378154,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378670,"byte_end":7378678,"line_start":187,"line_end":187,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Parker>::from_raw","value":"pub unsafe fn from_raw(*const ()) -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into a `Parker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into a `Parker`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378257,"byte_end":7378300,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378305,"byte_end":7378308,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378313,"byte_end":7378325,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378330,"byte_end":7378333,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Parker::into_raw`].","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378338,"byte_end":7378421,"line_start":176,"line_end":176,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378426,"byte_end":7378429,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378434,"byte_end":7378448,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378453,"byte_end":7378456,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378461,"byte_end":7378468,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378473,"byte_end":7378511,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378516,"byte_end":7378519,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378524,"byte_end":7378550,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378555,"byte_end":7378589,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/ let p = unsafe { Parker::from_raw(raw) };","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378594,"byte_end":7378639,"line_start":185,"line_end":185,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378644,"byte_end":7378651,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379025,"byte_end":7379033,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"Unparker","qualname":"::sync::parker::Unparker","value":"Unparker {  }","parent":null,"children":[{"krate":0,"index":315}],"decl_id":null,"docs":" Unparks a thread parked by the associated [`Parker`].\n","sig":null,"attributes":[{"value":"/ Unparks a thread parked by the associated [`Parker`].","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378956,"byte_end":7379013,"line_start":201,"line_end":201,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379963,"byte_end":7379969,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"unpark","qualname":"<Unparker>::unpark","value":"pub fn unpark(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Atomically makes the token available if it is not already.","sig":null,"attributes":[{"value":"/ Atomically makes the token available if it is not already.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379149,"byte_end":7379211,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379216,"byte_end":7379219,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This method will wake up the thread blocked on [`park`] or [`park_timeout`], if there is","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379224,"byte_end":7379316,"line_start":212,"line_end":212,"column_start":5,"column_end":97}},{"value":"/ any.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379321,"byte_end":7379329,"line_start":213,"line_end":213,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379334,"byte_end":7379337,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379342,"byte_end":7379356,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379361,"byte_end":7379364,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379369,"byte_end":7379376,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379381,"byte_end":7379401,"line_start":218,"line_end":218,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379406,"byte_end":7379434,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379439,"byte_end":7379477,"line_start":220,"line_end":220,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379482,"byte_end":7379485,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379490,"byte_end":7379516,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379521,"byte_end":7379554,"line_start":223,"line_end":223,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379559,"byte_end":7379562,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379567,"byte_end":7379594,"line_start":225,"line_end":225,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379599,"byte_end":7379649,"line_start":226,"line_end":226,"column_start":5,"column_end":55}},{"value":"/     u.unpark();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379654,"byte_end":7379673,"line_start":227,"line_end":227,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379678,"byte_end":7379685,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379690,"byte_end":7379693,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ // Wakes up when `u.unpark()` provides the token, but may also wake up","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379698,"byte_end":7379772,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ // spuriously before that without consuming the token.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379777,"byte_end":7379835,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379840,"byte_end":7379853,"line_start":232,"line_end":232,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379858,"byte_end":7379865,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379870,"byte_end":7379873,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379878,"byte_end":7379904,"line_start":235,"line_end":235,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379909,"byte_end":7379951,"line_start":236,"line_end":236,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380308,"byte_end":7380316,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Unparker>::into_raw","value":"pub fn into_raw(Unparker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Unparker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts an `Unparker` into a raw pointer.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380018,"byte_end":7380064,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380069,"byte_end":7380072,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380077,"byte_end":7380091,"line_start":243,"line_end":243,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380096,"byte_end":7380099,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380104,"byte_end":7380111,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380116,"byte_end":7380166,"line_start":246,"line_end":246,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380171,"byte_end":7380174,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380179,"byte_end":7380205,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380210,"byte_end":7380243,"line_start":249,"line_end":249,"column_start":5,"column_end":38}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380248,"byte_end":7380284,"line_start":250,"line_end":250,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380289,"byte_end":7380296,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380886,"byte_end":7380894,"line_start":273,"line_end":273,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Unparker>::from_raw","value":"pub unsafe fn from_raw(*const ()) -> Unparker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into an `Unparker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into an `Unparker`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380406,"byte_end":7380452,"line_start":256,"line_end":256,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380457,"byte_end":7380460,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380465,"byte_end":7380477,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380482,"byte_end":7380485,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Unparker::into_raw`].","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380490,"byte_end":7380575,"line_start":260,"line_end":260,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380580,"byte_end":7380583,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380588,"byte_end":7380602,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380607,"byte_end":7380610,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380615,"byte_end":7380622,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380627,"byte_end":7380677,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380682,"byte_end":7380685,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380690,"byte_end":7380716,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380721,"byte_end":7380754,"line_start":268,"line_end":268,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380759,"byte_end":7380762,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380767,"byte_end":7380803,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/ let u = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380808,"byte_end":7380855,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7380860,"byte_end":7380867,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388411,"byte_end":7388422,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"ShardedLock","qualname":"::sync::sharded_lock::ShardedLock","value":"ShardedLock {  }","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"decl_id":null,"docs":" A sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ A sharded reader-writer lock.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7386660,"byte_end":7386693,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7386694,"byte_end":7386697,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This lock is equivalent to [`RwLock`], except read operations are faster and write operations","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7386698,"byte_end":7386795,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ are slower.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7386796,"byte_end":7386811,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7386812,"byte_end":7386815,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock` is internally made of a list of *shards*, each being a [`RwLock`] occupying a","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7386816,"byte_end":7386913,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ single cache line. Read operations will pick one of the shards depending on the current thread","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7386914,"byte_end":7387012,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and lock it. Write operations need to lock all shards in succession.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387013,"byte_end":7387085,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387086,"byte_end":7387089,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ By splitting the lock into shards, concurrent read operations will in most cases choose","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387090,"byte_end":7387181,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ different shards and thus update different cache lines, which is good for scalability. However,","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387182,"byte_end":7387281,"line_start":40,"line_end":40,"column_start":1,"column_end":100}},{"value":"/ write operations need to do more work and are therefore slower than usual.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387282,"byte_end":7387360,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387361,"byte_end":7387364,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying operating system's","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387365,"byte_end":7387450,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/ implementation, and this type does not guarantee that any particular policy will be used.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387451,"byte_end":7387544,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387545,"byte_end":7387548,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Poisoning","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387549,"byte_end":7387564,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387565,"byte_end":7387568,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock`, like [`RwLock`], will become poisoned on a panic. Note that it may only be","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387569,"byte_end":7387664,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"/ poisoned if a panic occurs while a write operation is in progress. If a panic occurs in any","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387665,"byte_end":7387760,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ read operation, the lock will not be poisoned.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387761,"byte_end":7387811,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387812,"byte_end":7387815,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387816,"byte_end":7387830,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387831,"byte_end":7387834,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387835,"byte_end":7387842,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387843,"byte_end":7387886,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387887,"byte_end":7387890,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387891,"byte_end":7387926,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387927,"byte_end":7387930,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Any number of read locks can be held at once.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387931,"byte_end":7387983,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387984,"byte_end":7387989,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7387990,"byte_end":7388028,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/     let r2 = lock.read().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388029,"byte_end":7388067,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388068,"byte_end":7388095,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388096,"byte_end":7388123,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ } // Read locks are dropped at this point.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388124,"byte_end":7388170,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388171,"byte_end":7388174,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // However, only one write lock may be held.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388175,"byte_end":7388223,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/ {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388224,"byte_end":7388229,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388230,"byte_end":7388272,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/     *w += 1;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388273,"byte_end":7388289,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388290,"byte_end":7388316,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ } // Write lock is dropped here.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388317,"byte_end":7388353,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388354,"byte_end":7388361,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388362,"byte_end":7388365,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`RwLock`]: std::sync::RwLock","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388366,"byte_end":7388399,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389051,"byte_end":7389054,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<ShardedLock<T>>::new","value":"pub fn new(T) -> ShardedLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new sharded reader-writer lock.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388839,"byte_end":7388884,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388889,"byte_end":7388892,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388897,"byte_end":7388911,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388916,"byte_end":7388919,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388924,"byte_end":7388931,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388936,"byte_end":7388979,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388984,"byte_end":7388987,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388992,"byte_end":7389027,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389032,"byte_end":7389039,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390027,"byte_end":7390037,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ShardedLock<T>>::into_inner","value":"pub fn into_inner(Self) -> LockResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this lock, returning the underlying data.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389468,"byte_end":7389522,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389527,"byte_end":7389530,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389535,"byte_end":7389547,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389552,"byte_end":7389555,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389560,"byte_end":7389655,"line_start":118,"line_end":118,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389660,"byte_end":7389681,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389686,"byte_end":7389689,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389694,"byte_end":7389708,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389713,"byte_end":7389716,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389721,"byte_end":7389728,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389733,"byte_end":7389776,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389781,"byte_end":7389784,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(String::new());","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389789,"byte_end":7389836,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/ {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389841,"byte_end":7389846,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/     let mut s = lock.write().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389851,"byte_end":7389893,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/     *s = \"modified\".to_owned();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389898,"byte_end":7389933,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389938,"byte_end":7389943,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(lock.into_inner().unwrap(), \"modified\");","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7389948,"byte_end":7390003,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390008,"byte_end":7390015,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391014,"byte_end":7391025,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<ShardedLock<T>>::is_poisoned","value":"pub fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is poisoned.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is poisoned.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390316,"byte_end":7390359,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390364,"byte_end":7390367,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If another thread can still access the lock, it may become poisoned at any time. A `false`","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390372,"byte_end":7390466,"line_start":148,"line_end":148,"column_start":5,"column_end":99}},{"value":"/ result should not be trusted without additional synchronization.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390471,"byte_end":7390539,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390544,"byte_end":7390547,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390552,"byte_end":7390566,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390571,"byte_end":7390574,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390579,"byte_end":7390586,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390591,"byte_end":7390634,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390639,"byte_end":7390662,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390667,"byte_end":7390687,"line_start":156,"line_end":156,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390692,"byte_end":7390695,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(0));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390700,"byte_end":7390745,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390750,"byte_end":7390780,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390785,"byte_end":7390788,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let _ = thread::spawn(move || {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390793,"byte_end":7390828,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/     let _lock = c_lock.write().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390833,"byte_end":7390877,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/     panic!(); // the lock gets poisoned","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390882,"byte_end":7390925,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/ }).join();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390930,"byte_end":7390944,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(lock.is_poisoned(), true);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390949,"byte_end":7390990,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390995,"byte_end":7391002,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391664,"byte_end":7391671,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ShardedLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> LockResult<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391096,"byte_end":7391151,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391156,"byte_end":7391159,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking needs to take place.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391164,"byte_end":7391248,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391253,"byte_end":7391256,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391261,"byte_end":7391273,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391278,"byte_end":7391281,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391286,"byte_end":7391381,"line_start":177,"line_end":177,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391386,"byte_end":7391407,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391412,"byte_end":7391415,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391420,"byte_end":7391434,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391439,"byte_end":7391442,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391447,"byte_end":7391454,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391459,"byte_end":7391502,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391507,"byte_end":7391510,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let mut lock = ShardedLock::new(0);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391515,"byte_end":7391554,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/ *lock.get_mut().unwrap() = 10;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391559,"byte_end":7391593,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(*lock.read().unwrap(), 10);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391598,"byte_end":7391640,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391645,"byte_end":7391652,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392791,"byte_end":7392799,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"try_read","qualname":"<ShardedLock<T>>::try_read","value":"pub fn try_read(&Self) -> TryLockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with shared read access.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391935,"byte_end":7391993,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7391998,"byte_end":7392001,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392006,"byte_end":7392099,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the shared access when it is dropped. This method does not","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392104,"byte_end":7392197,"line_start":203,"line_end":203,"column_start":5,"column_end":98}},{"value":"/ provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392202,"byte_end":7392291,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392296,"byte_end":7392336,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392341,"byte_end":7392344,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392349,"byte_end":7392361,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392366,"byte_end":7392369,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392374,"byte_end":7392469,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392474,"byte_end":7392495,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392500,"byte_end":7392503,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392508,"byte_end":7392522,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392527,"byte_end":7392530,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392535,"byte_end":7392542,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392547,"byte_end":7392590,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392595,"byte_end":7392598,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392603,"byte_end":7392638,"line_start":217,"line_end":217,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392643,"byte_end":7392646,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ match lock.try_read() {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392651,"byte_end":7392678,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/     Ok(n) => assert_eq!(*n, 1),","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392683,"byte_end":7392718,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/     Err(_) => unreachable!(),","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392723,"byte_end":7392756,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392761,"byte_end":7392767,"line_start":222,"line_end":222,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7392772,"byte_end":7392779,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7395100,"byte_end":7395104,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"read","qualname":"<ShardedLock<T>>::read","value":"pub fn read(&Self) -> LockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with shared read access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with shared read access, blocking the current thread until it can be acquired.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7393818,"byte_end":7393906,"line_start":248,"line_end":248,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7393911,"byte_end":7393914,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7393919,"byte_end":7394010,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394015,"byte_end":7394109,"line_start":251,"line_end":251,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394114,"byte_end":7394209,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394214,"byte_end":7394257,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394262,"byte_end":7394265,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the shared access when dropped.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394270,"byte_end":7394340,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394345,"byte_end":7394348,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394353,"byte_end":7394365,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394370,"byte_end":7394373,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394378,"byte_end":7394473,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394478,"byte_end":7394499,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394504,"byte_end":7394507,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394512,"byte_end":7394524,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394529,"byte_end":7394532,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394537,"byte_end":7394627,"line_start":264,"line_end":264,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394632,"byte_end":7394635,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394640,"byte_end":7394654,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394659,"byte_end":7394662,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394667,"byte_end":7394674,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394679,"byte_end":7394722,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394727,"byte_end":7394750,"line_start":270,"line_end":270,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394755,"byte_end":7394775,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394780,"byte_end":7394783,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(1));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394788,"byte_end":7394833,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394838,"byte_end":7394868,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394873,"byte_end":7394876,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394881,"byte_end":7394914,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394919,"byte_end":7394941,"line_start":277,"line_end":277,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394946,"byte_end":7394949,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394954,"byte_end":7394981,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let r = c_lock.read();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7394986,"byte_end":7395016,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/     assert!(r.is_ok());","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7395021,"byte_end":7395048,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ }).join().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7395053,"byte_end":7395076,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7395081,"byte_end":7395088,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396769,"byte_end":7396778,"line_start":328,"line_end":328,"column_start":12,"column_end":21},"name":"try_write","qualname":"<ShardedLock<T>>::try_write","value":"pub fn try_write(&Self) -> TryLockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with exclusive write access.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7395910,"byte_end":7395972,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7395977,"byte_end":7395980,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7395985,"byte_end":7396078,"line_start":306,"line_end":306,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the exclusive access when it is dropped. This method does","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396083,"byte_end":7396175,"line_start":307,"line_end":307,"column_start":5,"column_end":97}},{"value":"/ not provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396180,"byte_end":7396273,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396278,"byte_end":7396318,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396323,"byte_end":7396326,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396331,"byte_end":7396343,"line_start":311,"line_end":311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396348,"byte_end":7396351,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396356,"byte_end":7396451,"line_start":313,"line_end":313,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396456,"byte_end":7396477,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396482,"byte_end":7396485,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396490,"byte_end":7396504,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396509,"byte_end":7396512,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396517,"byte_end":7396524,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396529,"byte_end":7396572,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396577,"byte_end":7396580,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396585,"byte_end":7396620,"line_start":321,"line_end":321,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396625,"byte_end":7396628,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396633,"byte_end":7396666,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396671,"byte_end":7396693,"line_start":324,"line_end":324,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396698,"byte_end":7396701,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_err());","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396706,"byte_end":7396745,"line_start":326,"line_end":326,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7396750,"byte_end":7396757,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399566,"byte_end":7399571,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"write","qualname":"<ShardedLock<T>>::write","value":"pub fn write(&Self) -> LockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with exclusive write access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with exclusive write access, blocking the current thread until it can be acquired.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7398465,"byte_end":7398557,"line_start":378,"line_end":378,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7398562,"byte_end":7398565,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7398570,"byte_end":7398661,"line_start":380,"line_end":380,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7398666,"byte_end":7398760,"line_start":381,"line_end":381,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7398765,"byte_end":7398860,"line_start":382,"line_end":382,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7398865,"byte_end":7398908,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7398913,"byte_end":7398916,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the exclusive access when dropped.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7398921,"byte_end":7398994,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7398999,"byte_end":7399002,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399007,"byte_end":7399019,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399024,"byte_end":7399027,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399032,"byte_end":7399127,"line_start":389,"line_end":389,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399132,"byte_end":7399153,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399158,"byte_end":7399161,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399166,"byte_end":7399178,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399183,"byte_end":7399186,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399191,"byte_end":7399281,"line_start":394,"line_end":394,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399286,"byte_end":7399289,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399294,"byte_end":7399308,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399313,"byte_end":7399316,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399321,"byte_end":7399328,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399333,"byte_end":7399376,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399381,"byte_end":7399384,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399389,"byte_end":7399424,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399429,"byte_end":7399432,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399437,"byte_end":7399475,"line_start":403,"line_end":403,"column_start":5,"column_end":43}},{"value":"/ *n = 2;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399480,"byte_end":7399491,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399496,"byte_end":7399499,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_err());","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399504,"byte_end":7399542,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7399547,"byte_end":7399554,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7401905,"byte_end":7401925,"line_start":483,"line_end":483,"column_start":12,"column_end":32},"name":"ShardedLockReadGuard","qualname":"::sync::sharded_lock::ShardedLockReadGuard","value":"ShardedLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"decl_id":null,"docs":" A guard used to release the shared read access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the shared read access of a [`ShardedLock`] when dropped.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7401808,"byte_end":7401893,"line_start":482,"line_end":482,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402812,"byte_end":7402833,"line_start":514,"line_end":514,"column_start":12,"column_end":33},"name":"ShardedLockWriteGuard","qualname":"::sync::sharded_lock::ShardedLockWriteGuard","value":"ShardedLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402711,"byte_end":7402800,"line_start":513,"line_end":513,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407422,"byte_end":7407431,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"WaitGroup","qualname":"::sync::wait_group::WaitGroup","value":"WaitGroup {  }","parent":null,"children":[{"krate":0,"index":464}],"decl_id":null,"docs":" Enables threads to synchronize the beginning or end of some computation.","sig":null,"attributes":[{"value":"/ Enables threads to synchronize the beginning or end of some computation.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406210,"byte_end":7406286,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406287,"byte_end":7406290,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Wait groups vs barriers","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406291,"byte_end":7406320,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406321,"byte_end":7406324,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `WaitGroup` is very similar to [`Barrier`], but there are a few differences:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406325,"byte_end":7406405,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406406,"byte_end":7406409,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`] needs to know the number of threads at construction, while `WaitGroup` is cloned to","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406410,"byte_end":7406511,"line_start":13,"line_end":13,"column_start":1,"column_end":102}},{"value":"/   register more threads.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406512,"byte_end":7406540,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406541,"byte_end":7406544,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * A [`Barrier`] can be reused even after all threads have synchronized, while a `WaitGroup`","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406545,"byte_end":7406640,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/   synchronizes threads only once.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406641,"byte_end":7406678,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406679,"byte_end":7406682,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * All threads wait for others to reach the [`Barrier`]. With `WaitGroup`, each thread can choose","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406683,"byte_end":7406783,"line_start":19,"line_end":19,"column_start":1,"column_end":101}},{"value":"/   to either wait for other threads or to continue without blocking.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406784,"byte_end":7406855,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406856,"byte_end":7406859,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406860,"byte_end":7406874,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406875,"byte_end":7406878,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406879,"byte_end":7406886,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406887,"byte_end":7406928,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406929,"byte_end":7406949,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406950,"byte_end":7406953,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Create a new wait group.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406954,"byte_end":7406985,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7406986,"byte_end":7407016,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407017,"byte_end":7407020,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..4 {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407021,"byte_end":7407040,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/     // Create another reference to the wait group.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407041,"byte_end":7407095,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/     let wg = wg.clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407096,"byte_end":7407124,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407125,"byte_end":7407128,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     thread::spawn(move || {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407129,"byte_end":7407160,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/         // Do some work.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407161,"byte_end":7407189,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407190,"byte_end":7407193,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/         // Drop the reference to the wait group.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407194,"byte_end":7407246,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/         drop(wg);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407247,"byte_end":7407268,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407269,"byte_end":7407280,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407281,"byte_end":7407286,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407287,"byte_end":7407290,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Block until all threads have finished their work.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407291,"byte_end":7407347,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/ wg.wait();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407348,"byte_end":7407362,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407363,"byte_end":7407370,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407371,"byte_end":7407374,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Barrier`]: std::sync::Barrier","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407375,"byte_end":7407410,"line_start":47,"line_end":47,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408023,"byte_end":7408026,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<WaitGroup>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new wait group and returns the single reference to it.","sig":null,"attributes":[{"value":"/ Creates a new wait group and returns the single reference to it.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407795,"byte_end":7407863,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407868,"byte_end":7407871,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407876,"byte_end":7407890,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407895,"byte_end":7407898,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407903,"byte_end":7407910,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407915,"byte_end":7407956,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407961,"byte_end":7407964,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407969,"byte_end":7407999,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408004,"byte_end":7408011,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408626,"byte_end":7408630,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"wait","qualname":"<WaitGroup>::wait","value":"pub fn wait(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this reference and waits until all other references are dropped.","sig":null,"attributes":[{"value":"/ Drops this reference and waits until all other references are dropped.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408074,"byte_end":7408148,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408153,"byte_end":7408156,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408161,"byte_end":7408175,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408180,"byte_end":7408183,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408188,"byte_end":7408195,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408200,"byte_end":7408241,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408246,"byte_end":7408266,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408271,"byte_end":7408274,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408279,"byte_end":7408309,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408314,"byte_end":7408317,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ thread::spawn({","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408322,"byte_end":7408341,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/     let wg = wg.clone();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408346,"byte_end":7408374,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/     move || {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408379,"byte_end":7408396,"line_start":95,"line_end":95,"column_start":5,"column_end":22}},{"value":"/         // Block until both threads have reached `wait()`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408401,"byte_end":7408463,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/         wg.wait();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408468,"byte_end":7408490,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/     }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408495,"byte_end":7408504,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408509,"byte_end":7408516,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408521,"byte_end":7408524,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Block until both threads have reached `wait()`.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408529,"byte_end":7408583,"line_start":101,"line_end":101,"column_start":5,"column_end":59}},{"value":"/ wg.wait();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408588,"byte_end":7408602,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408607,"byte_end":7408614,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"thread","qualname":"::thread","value":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":727},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":731},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":510},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":524},{"krate":0,"index":559},{"krate":0,"index":564},{"krate":0,"index":526},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":547},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":552}],"decl_id":null,"docs":" Threads that can borrow variables from the stack.","sig":null,"attributes":[{"value":"! Threads that can borrow variables from the stack.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409607,"byte_end":7409660,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409661,"byte_end":7409664,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Create a scope when spawned threads need to access variables on the stack:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409665,"byte_end":7409743,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409744,"byte_end":7409747,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409748,"byte_end":7409755,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"! use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409756,"byte_end":7409788,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409789,"byte_end":7409792,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! let people = vec![","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409793,"byte_end":7409815,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"!     \"Alice\".to_string(),","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409816,"byte_end":7409844,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"!     \"Bob\".to_string(),","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409845,"byte_end":7409871,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"!     \"Carol\".to_string(),","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409872,"byte_end":7409900,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"! ];","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409901,"byte_end":7409907,"line_start":12,"line_end":12,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409908,"byte_end":7409911,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409912,"byte_end":7409935,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"!     for person in &people {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409936,"byte_end":7409967,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"!         s.spawn(move |_| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409968,"byte_end":7409998,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"!             println!(\"Hello, {}!\", person);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7409999,"byte_end":7410046,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"!         });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410047,"byte_end":7410062,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410063,"byte_end":7410072,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"! }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410073,"byte_end":7410089,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"! ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410090,"byte_end":7410097,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410098,"byte_end":7410101,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! # Why scoped threads?","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410102,"byte_end":7410127,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410128,"byte_end":7410131,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! Suppose we wanted to re-write the previous example using plain threads:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410132,"byte_end":7410207,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410208,"byte_end":7410211,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```compile_fail,E0597","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410212,"byte_end":7410237,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"! use std::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410238,"byte_end":7410258,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410259,"byte_end":7410262,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! let people = vec![","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410263,"byte_end":7410285,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"!     \"Alice\".to_string(),","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410286,"byte_end":7410314,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"!     \"Bob\".to_string(),","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410315,"byte_end":7410341,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"!     \"Carol\".to_string(),","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410342,"byte_end":7410370,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"! ];","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410371,"byte_end":7410377,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410378,"byte_end":7410381,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! let mut threads = Vec::new();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410382,"byte_end":7410415,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410416,"byte_end":7410419,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! for person in &people {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410420,"byte_end":7410447,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"!     threads.push(thread::spawn(move || {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410448,"byte_end":7410492,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"!         println!(\"Hello, {}!\", person);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410493,"byte_end":7410536,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"!     }));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410537,"byte_end":7410549,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"! }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410550,"byte_end":7410555,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410556,"byte_end":7410559,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! for thread in threads {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410560,"byte_end":7410587,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"!     thread.join().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410588,"byte_end":7410619,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"! }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410620,"byte_end":7410625,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410626,"byte_end":7410633,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410634,"byte_end":7410637,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! This doesn't work because the borrow checker complains about `people` not living long enough:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410638,"byte_end":7410735,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410736,"byte_end":7410739,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410740,"byte_end":7410751,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"! error[E0597]: `people` does not live long enough","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410752,"byte_end":7410804,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"!   --> src/main.rs:12:20","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410805,"byte_end":7410832,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"!    |","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410833,"byte_end":7410841,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"! 12 |     for person in &people {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410842,"byte_end":7410878,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"!    |                    ^^^^^^ borrowed value does not live long enough","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410879,"byte_end":7410954,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"! ...","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410955,"byte_end":7410962,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"! 21 | }","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410963,"byte_end":7410973,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"!    | - borrowed value only lives until here","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7410974,"byte_end":7411021,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"!    |","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411022,"byte_end":7411030,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"!    = note: borrowed value must be valid for the static lifetime...","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411031,"byte_end":7411101,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"! ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411102,"byte_end":7411109,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411110,"byte_end":7411113,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! The problem here is that spawned threads are not allowed to borrow variables on stack because","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411114,"byte_end":7411211,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"! the compiler cannot prove they will be joined before `people` is destroyed.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411212,"byte_end":7411291,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411292,"byte_end":7411295,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! Scoped threads are a mechanism to guarantee to the compiler that spawned threads will be joined","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411296,"byte_end":7411395,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"! before the scope ends.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411396,"byte_end":7411422,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411423,"byte_end":7411426,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! # How scoped threads work","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411427,"byte_end":7411456,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411457,"byte_end":7411460,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! If a variable is borrowed by a thread, the thread must complete before the variable is","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411461,"byte_end":7411551,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"! destroyed. Threads spawned using [`std::thread::spawn`] can only borrow variables with the","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411552,"byte_end":7411646,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"! `'static` lifetime because the borrow checker cannot be sure when the thread will complete.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411647,"byte_end":7411742,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411743,"byte_end":7411746,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! A scope creates a clear boundary between variables outside the scope and threads inside the","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411747,"byte_end":7411842,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"! scope. Whenever a scope spawns a thread, it promises to join the thread before the scope ends.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411843,"byte_end":7411941,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"! This way we guarantee to the borrow checker that scoped threads only live within the scope and","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7411942,"byte_end":7412040,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"! can safely access variables outside it.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412041,"byte_end":7412084,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412085,"byte_end":7412088,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! # Nesting scoped threads","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412089,"byte_end":7412117,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412118,"byte_end":7412121,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! Sometimes scoped threads need to spawn more threads within the same scope. This is a little","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412122,"byte_end":7412217,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"! tricky because argument `s` lives *inside* the invocation of `thread::scope()` and as such","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412218,"byte_end":7412312,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"! cannot be borrowed by scoped threads:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412313,"byte_end":7412354,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412355,"byte_end":7412358,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! ```compile_fail,E0373,E0521","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412359,"byte_end":7412390,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"! use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412391,"byte_end":7412423,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412424,"byte_end":7412427,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412428,"byte_end":7412451,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"!     s.spawn(|_| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412452,"byte_end":7412473,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"!         // Not going to compile because we're trying to borrow `s`,","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412474,"byte_end":7412545,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"!         // which lives *inside* the scope! :(","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412546,"byte_end":7412595,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"!         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412596,"byte_end":7412647,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"!     });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412648,"byte_end":7412659,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"! });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412660,"byte_end":7412667,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412668,"byte_end":7412675,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412676,"byte_end":7412679,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! Fortunately, there is a solution. Every scoped thread is passed a reference to its scope as an","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412680,"byte_end":7412778,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"! argument, which can be used for spawning nested threads:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412779,"byte_end":7412839,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412840,"byte_end":7412843,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412844,"byte_end":7412851,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"! use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412852,"byte_end":7412884,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412885,"byte_end":7412888,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412889,"byte_end":7412912,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"!     // Note the `|s|` here.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412913,"byte_end":7412944,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"!     s.spawn(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412945,"byte_end":7412966,"line_start":107,"line_end":107,"column_start":1,"column_end":22}},{"value":"!         // Yay, this works because we're using a fresh argument `s`! :)","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7412967,"byte_end":7413042,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"!         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413043,"byte_end":7413094,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"!     });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413095,"byte_end":7413106,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"! }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413107,"byte_end":7413123,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"! ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413124,"byte_end":7413131,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413132,"byte_end":7413135,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413136,"byte_end":7413182,"line_start":114,"line_end":114,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7414105,"byte_end":7414110,"line_start":150,"line_end":150,"column_start":8,"column_end":13},"name":"scope","qualname":"::thread::scope","value":"pub fn scope<'env, F, R>(F) -> thread::Result<R> where F: FnOnce(&Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scope for spawning threads.","sig":null,"attributes":[{"value":"/ Creates a new scope for spawning threads.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413454,"byte_end":7413499,"line_start":130,"line_end":130,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413500,"byte_end":7413503,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ All child threads that haven't been manually joined will be automatically joined just before","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413504,"byte_end":7413600,"line_start":132,"line_end":132,"column_start":1,"column_end":97}},{"value":"/ this function invocation ends. If all joined threads have successfully completed, `Ok` is","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413601,"byte_end":7413694,"line_start":133,"line_end":133,"column_start":1,"column_end":94}},{"value":"/ returned with the return value of `f`. If any of the joined threads has panicked, an `Err` is","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413695,"byte_end":7413792,"line_start":134,"line_end":134,"column_start":1,"column_end":98}},{"value":"/ returned containing errors from panicked threads.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413793,"byte_end":7413846,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413847,"byte_end":7413850,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413851,"byte_end":7413865,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413866,"byte_end":7413869,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413870,"byte_end":7413877,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413878,"byte_end":7413910,"line_start":140,"line_end":140,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413911,"byte_end":7413914,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let var = vec![1, 2, 3];","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413915,"byte_end":7413943,"line_start":142,"line_end":142,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413944,"byte_end":7413947,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413948,"byte_end":7413971,"line_start":144,"line_end":144,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413972,"byte_end":7413993,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/         println!(\"A child thread borrowing `var`: {:?}\", var);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7413994,"byte_end":7414060,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7414061,"byte_end":7414072,"line_start":147,"line_end":147,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7414073,"byte_end":7414089,"line_start":148,"line_end":148,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7414090,"byte_end":7414097,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7415420,"byte_end":7415425,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"Scope","qualname":"::thread::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"decl_id":null,"docs":" A scope for spawning threads.\n","sig":null,"attributes":[{"value":"/ A scope for spawning threads.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7415375,"byte_end":7415408,"line_start":194,"line_end":194,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417211,"byte_end":7417216,"line_start":247,"line_end":247,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Scope>::spawn","value":"pub fn spawn<'scope, F, T>(&'scope Self, F) -> ScopedJoinHandle where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7415790,"byte_end":7415817,"line_start":209,"line_end":209,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7415822,"byte_end":7415825,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`spawn`] function in Rust's standard library. The difference","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7415830,"byte_end":7415925,"line_start":211,"line_end":211,"column_start":5,"column_end":100}},{"value":"/ is that this thread is scoped, meaning it's guaranteed to terminate before the scope exits,","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7415930,"byte_end":7416025,"line_start":212,"line_end":212,"column_start":5,"column_end":100}},{"value":"/ allowing it to reference variables outside the scope.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416030,"byte_end":7416087,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416092,"byte_end":7416095,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416100,"byte_end":7416195,"line_start":215,"line_end":215,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416200,"byte_end":7416228,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416233,"byte_end":7416236,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The returned [handle](ScopedJoinHandle) can be used to manually","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416241,"byte_end":7416308,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/ [join](ScopedJoinHandle::join) the thread before the scope exits.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416313,"byte_end":7416382,"line_start":219,"line_end":219,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416387,"byte_end":7416390,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This will create a thread using default parameters of [`ScopedThreadBuilder`], if you want to specify the","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416395,"byte_end":7416504,"line_start":221,"line_end":221,"column_start":5,"column_end":114}},{"value":"/ stack size or the name of the thread, use this API instead.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416509,"byte_end":7416572,"line_start":222,"line_end":222,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416577,"byte_end":7416580,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ [`spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416585,"byte_end":7416618,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416623,"byte_end":7416626,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416631,"byte_end":7416643,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416648,"byte_end":7416651,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Panics if the OS fails to create a thread; use [`ScopedThreadBuilder::spawn`]","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416656,"byte_end":7416737,"line_start":228,"line_end":228,"column_start":5,"column_end":86}},{"value":"/ to recover from such errors.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416742,"byte_end":7416774,"line_start":229,"line_end":229,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416779,"byte_end":7416782,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416787,"byte_end":7416801,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416806,"byte_end":7416809,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416814,"byte_end":7416821,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416826,"byte_end":7416858,"line_start":234,"line_end":234,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416863,"byte_end":7416866,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416871,"byte_end":7416894,"line_start":236,"line_end":236,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416899,"byte_end":7416933,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"/         println!(\"A child thread is running\");","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416938,"byte_end":7416988,"line_start":238,"line_end":238,"column_start":5,"column_end":55}},{"value":"/         42","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7416993,"byte_end":7417007,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417012,"byte_end":7417023,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417028,"byte_end":7417031,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417036,"byte_end":7417087,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417092,"byte_end":7417133,"line_start":243,"line_end":243,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417138,"byte_end":7417166,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417171,"byte_end":7417187,"line_start":245,"line_end":245,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417192,"byte_end":7417199,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417841,"byte_end":7417848,"line_start":271,"line_end":271,"column_start":12,"column_end":19},"name":"builder","qualname":"<Scope>::builder","value":"pub fn builder<'scope>(&'scope Self) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a builder that can configure a thread before spawning.","sig":null,"attributes":[{"value":"/ Creates a builder that can configure a thread before spawning.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417493,"byte_end":7417559,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417564,"byte_end":7417567,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417572,"byte_end":7417586,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417591,"byte_end":7417594,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417599,"byte_end":7417606,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417611,"byte_end":7417643,"line_start":263,"line_end":263,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417648,"byte_end":7417651,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417656,"byte_end":7417679,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417684,"byte_end":7417703,"line_start":266,"line_end":266,"column_start":5,"column_end":24}},{"value":"/         .spawn(|_| println!(\"A child thread is running\"))","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417708,"byte_end":7417769,"line_start":267,"line_end":267,"column_start":5,"column_end":66}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417774,"byte_end":7417796,"line_start":268,"line_end":268,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417801,"byte_end":7417817,"line_start":269,"line_end":269,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7417822,"byte_end":7417829,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419291,"byte_end":7419310,"line_start":318,"line_end":318,"column_start":12,"column_end":31},"name":"ScopedThreadBuilder","qualname":"::thread::ScopedThreadBuilder","value":"ScopedThreadBuilder {  }","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"decl_id":null,"docs":" Configures the properties of a new thread.","sig":null,"attributes":[{"value":"/ Configures the properties of a new thread.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418163,"byte_end":7418209,"line_start":285,"line_end":285,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418210,"byte_end":7418213,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ The two configurable properties are:","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418214,"byte_end":7418254,"line_start":287,"line_end":287,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418255,"byte_end":7418258,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ - [`name`]: Specifies an [associated name for the thread][naming-threads].","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418259,"byte_end":7418337,"line_start":289,"line_end":289,"column_start":1,"column_end":79}},{"value":"/ - [`stack_size`]: Specifies the [desired stack size for the thread][stack-size].","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418338,"byte_end":7418422,"line_start":290,"line_end":290,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418423,"byte_end":7418426,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] method will take ownership of the builder and return an [`io::Result`] of the","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418427,"byte_end":7418522,"line_start":292,"line_end":292,"column_start":1,"column_end":96}},{"value":"/ thread handle with the given configuration.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418523,"byte_end":7418570,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418571,"byte_end":7418574,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ The [`Scope::spawn`] method uses a builder with default configuration and unwraps its return","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418575,"byte_end":7418671,"line_start":295,"line_end":295,"column_start":1,"column_end":97}},{"value":"/ value. You may want to use this builder when you want to recover from a failure to launch a","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418672,"byte_end":7418767,"line_start":296,"line_end":296,"column_start":1,"column_end":96}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418768,"byte_end":7418779,"line_start":297,"line_end":297,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418780,"byte_end":7418783,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418784,"byte_end":7418798,"line_start":299,"line_end":299,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418799,"byte_end":7418802,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418803,"byte_end":7418810,"line_start":301,"line_end":301,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418811,"byte_end":7418843,"line_start":302,"line_end":302,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418844,"byte_end":7418847,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418848,"byte_end":7418871,"line_start":304,"line_end":304,"column_start":1,"column_end":24}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418872,"byte_end":7418891,"line_start":305,"line_end":305,"column_start":1,"column_end":20}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418892,"byte_end":7418950,"line_start":306,"line_end":306,"column_start":1,"column_end":59}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418951,"byte_end":7418973,"line_start":307,"line_end":307,"column_start":1,"column_end":23}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418974,"byte_end":7418990,"line_start":308,"line_end":308,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418991,"byte_end":7418998,"line_start":309,"line_end":309,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418999,"byte_end":7419002,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ [`name`]: ScopedThreadBuilder::name","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419003,"byte_end":7419042,"line_start":311,"line_end":311,"column_start":1,"column_end":40}},{"value":"/ [`stack_size`]: ScopedThreadBuilder::stack_size","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419043,"byte_end":7419094,"line_start":312,"line_end":312,"column_start":1,"column_end":52}},{"value":"/ [`spawn`]: ScopedThreadBuilder::spawn","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419095,"byte_end":7419136,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419137,"byte_end":7419172,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419173,"byte_end":7419221,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419222,"byte_end":7419262,"line_start":316,"line_end":316,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420069,"byte_end":7420073,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"name","qualname":"<ScopedThreadBuilder>::name","value":"pub fn name(Self, String) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the name for the new thread.","sig":null,"attributes":[{"value":"/ Sets the name for the new thread.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419451,"byte_end":7419488,"line_start":324,"line_end":324,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419493,"byte_end":7419496,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The name must not contain null bytes (`\\0`).","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419501,"byte_end":7419549,"line_start":326,"line_end":326,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419554,"byte_end":7419557,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ For more information about named threads, see [here][naming-threads].","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419562,"byte_end":7419635,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419640,"byte_end":7419643,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419648,"byte_end":7419662,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419667,"byte_end":7419670,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419675,"byte_end":7419682,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419687,"byte_end":7419719,"line_start":333,"line_end":333,"column_start":5,"column_end":37}},{"value":"/ use std::thread::current;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419724,"byte_end":7419753,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419758,"byte_end":7419761,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419766,"byte_end":7419789,"line_start":336,"line_end":336,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419794,"byte_end":7419813,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/         .name(\"my thread\".to_string())","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419818,"byte_end":7419860,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/         .spawn(|_| assert_eq!(current().name(), Some(\"my thread\")))","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419865,"byte_end":7419936,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419941,"byte_end":7419963,"line_start":340,"line_end":340,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419968,"byte_end":7419984,"line_start":341,"line_end":341,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419989,"byte_end":7419996,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420001,"byte_end":7420004,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420009,"byte_end":7420057,"line_start":344,"line_end":344,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420778,"byte_end":7420788,"line_start":370,"line_end":370,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<ScopedThreadBuilder>::stack_size","value":"pub fn stack_size(Self, usize) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the stack for the new thread.","sig":null,"attributes":[{"value":"/ Sets the size of the stack for the new thread.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420209,"byte_end":7420259,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420264,"byte_end":7420267,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ The stack size is measured in bytes.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420272,"byte_end":7420312,"line_start":352,"line_end":352,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420317,"byte_end":7420320,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ For more information about the stack size for threads, see [here][stack-size].","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420325,"byte_end":7420407,"line_start":354,"line_end":354,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420412,"byte_end":7420415,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420420,"byte_end":7420434,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420439,"byte_end":7420442,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420447,"byte_end":7420454,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420459,"byte_end":7420491,"line_start":359,"line_end":359,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420496,"byte_end":7420499,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420504,"byte_end":7420527,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420532,"byte_end":7420551,"line_start":362,"line_end":362,"column_start":5,"column_end":24}},{"value":"/         .stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420556,"byte_end":7420590,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420595,"byte_end":7420653,"line_start":364,"line_end":364,"column_start":5,"column_end":63}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420658,"byte_end":7420680,"line_start":365,"line_end":365,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420685,"byte_end":7420701,"line_start":366,"line_end":366,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420706,"byte_end":7420713,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420718,"byte_end":7420721,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420726,"byte_end":7420766,"line_start":369,"line_end":369,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7422064,"byte_end":7422069,"line_start":412,"line_end":412,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ScopedThreadBuilder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<ScopedJoinHandle> where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread with this configuration.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread with this configuration.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420929,"byte_end":7420980,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420985,"byte_end":7420988,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7420993,"byte_end":7421088,"line_start":377,"line_end":377,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421093,"byte_end":7421121,"line_start":378,"line_end":378,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421126,"byte_end":7421129,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to manually join the thread before the scope exits.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421134,"byte_end":7421221,"line_start":380,"line_end":380,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421226,"byte_end":7421229,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421234,"byte_end":7421246,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421251,"byte_end":7421254,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`Scope::spawn`] method, this method yields an","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421259,"byte_end":7421320,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`io::Result`] to capture any failure to create the thread at","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421325,"byte_end":7421390,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/ the OS level.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421395,"byte_end":7421412,"line_start":386,"line_end":386,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421417,"byte_end":7421420,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421425,"byte_end":7421460,"line_start":388,"line_end":388,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421465,"byte_end":7421468,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421473,"byte_end":7421485,"line_start":390,"line_end":390,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421490,"byte_end":7421493,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Panics if a thread name was set and it contained null bytes.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421498,"byte_end":7421562,"line_start":392,"line_end":392,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421567,"byte_end":7421570,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421575,"byte_end":7421589,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421594,"byte_end":7421597,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421602,"byte_end":7421609,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421614,"byte_end":7421646,"line_start":397,"line_end":397,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421651,"byte_end":7421654,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421659,"byte_end":7421682,"line_start":399,"line_end":399,"column_start":5,"column_end":28}},{"value":"/     let handle = s.builder()","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421687,"byte_end":7421719,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/         .spawn(|_| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421724,"byte_end":7421748,"line_start":401,"line_end":401,"column_start":5,"column_end":29}},{"value":"/             println!(\"A child thread is running\");","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421753,"byte_end":7421807,"line_start":402,"line_end":402,"column_start":5,"column_end":59}},{"value":"/             42","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421812,"byte_end":7421830,"line_start":403,"line_end":403,"column_start":5,"column_end":23}},{"value":"/         })","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421835,"byte_end":7421849,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421854,"byte_end":7421876,"line_start":405,"line_end":405,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421881,"byte_end":7421884,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421889,"byte_end":7421940,"line_start":407,"line_end":407,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421945,"byte_end":7421986,"line_start":408,"line_end":408,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7421991,"byte_end":7422019,"line_start":409,"line_end":409,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7422024,"byte_end":7422040,"line_start":410,"line_end":410,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7422045,"byte_end":7422052,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424362,"byte_end":7424378,"line_start":478,"line_end":478,"column_start":12,"column_end":28},"name":"ScopedJoinHandle","qualname":"::thread::ScopedJoinHandle","value":"ScopedJoinHandle {  }","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546}],"decl_id":null,"docs":" A handle that can be used to join its scoped thread.","sig":null,"attributes":[{"value":"/ A handle that can be used to join its scoped thread.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424181,"byte_end":7424237,"line_start":474,"line_end":474,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424238,"byte_end":7424241,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`Scope::spawn`] method and the","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424242,"byte_end":7424307,"line_start":476,"line_end":476,"column_start":1,"column_end":66}},{"value":"/ [`ScopedThreadBuilder::spawn`] method.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424308,"byte_end":7424350,"line_start":477,"line_end":477,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425686,"byte_end":7425690,"line_start":520,"line_end":520,"column_start":12,"column_end":16},"name":"join","qualname":"<ScopedJoinHandle>::join","value":"pub fn join(Self) -> thread::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits for the thread to finish and returns its result.","sig":null,"attributes":[{"value":"/ Waits for the thread to finish and returns its result.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424774,"byte_end":7424832,"line_start":493,"line_end":493,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424837,"byte_end":7424840,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ If the child thread panics, an error is returned.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424845,"byte_end":7424898,"line_start":495,"line_end":495,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424903,"byte_end":7424906,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424911,"byte_end":7424923,"line_start":497,"line_end":497,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424928,"byte_end":7424931,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function may panic on some platforms if a thread attempts to join itself or otherwise","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424936,"byte_end":7425030,"line_start":499,"line_end":499,"column_start":5,"column_end":99}},{"value":"/ may create a deadlock with joining threads.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425035,"byte_end":7425082,"line_start":500,"line_end":500,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425087,"byte_end":7425090,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425095,"byte_end":7425109,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425114,"byte_end":7425117,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425122,"byte_end":7425129,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425134,"byte_end":7425166,"line_start":505,"line_end":505,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425171,"byte_end":7425174,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425179,"byte_end":7425202,"line_start":507,"line_end":507,"column_start":5,"column_end":28}},{"value":"/     let handle1 = s.spawn(|_| println!(\"I'm a happy thread :)\"));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425207,"byte_end":7425276,"line_start":508,"line_end":508,"column_start":5,"column_end":74}},{"value":"/     let handle2 = s.spawn(|_| panic!(\"I'm a sad thread :(\"));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425281,"byte_end":7425346,"line_start":509,"line_end":509,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425351,"byte_end":7425354,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     // Join the first thread and verify that it succeeded.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425359,"byte_end":7425421,"line_start":511,"line_end":511,"column_start":5,"column_end":67}},{"value":"/     let res = handle1.join();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425426,"byte_end":7425459,"line_start":512,"line_end":512,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_ok());","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425464,"byte_end":7425493,"line_start":513,"line_end":513,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425498,"byte_end":7425501,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/     // Join the second thread and verify that it panicked.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425506,"byte_end":7425568,"line_start":515,"line_end":515,"column_start":5,"column_end":67}},{"value":"/     let res = handle2.join();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425573,"byte_end":7425606,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_err());","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425611,"byte_end":7425641,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425646,"byte_end":7425662,"line_start":518,"line_end":518,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7425667,"byte_end":7425674,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426499,"byte_end":7426505,"line_start":543,"line_end":543,"column_start":12,"column_end":18},"name":"thread","qualname":"<ScopedJoinHandle>::thread","value":"pub fn thread(&Self) -> &thread::Thread","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying thread.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying thread.","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426138,"byte_end":7426184,"line_start":531,"line_end":531,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426189,"byte_end":7426192,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426197,"byte_end":7426211,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426216,"byte_end":7426219,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426224,"byte_end":7426231,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426236,"byte_end":7426268,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426273,"byte_end":7426276,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426281,"byte_end":7426304,"line_start":538,"line_end":538,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| println!(\"A child thread is running\"));","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426309,"byte_end":7426381,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/     println!(\"The child thread ID: {:?}\", handle.thread().id());","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426386,"byte_end":7426454,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426459,"byte_end":7426475,"line_start":541,"line_end":541,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7426480,"byte_end":7426487,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\seq_lock.rs","byte_start":7370524,"byte_end":7370531,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\seq_lock.rs","byte_start":7372141,"byte_end":7372158,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\seq_lock.rs","byte_start":7372476,"byte_end":7372493,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3920,"byte_end":3930,"line_start":40,"line_end":40,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3967,"byte_end":3977,"line_start":41,"line_end":41,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4032,"byte_end":4042,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4099,"byte_end":4109,"line_start":46,"line_end":46,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4125,"byte_end":4135,"line_start":48,"line_end":48,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7092,"byte_end":7102,"line_start":153,"line_end":153,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7474,"byte_end":7484,"line_start":171,"line_end":171,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7925,"byte_end":7935,"line_start":190,"line_end":190,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8285,"byte_end":8295,"line_start":207,"line_end":207,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19509,"byte_end":19519,"line_start":525,"line_end":525,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21360,"byte_end":21370,"line_start":590,"line_end":590,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21479,"byte_end":21489,"line_start":596,"line_end":596,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21628,"byte_end":21638,"line_start":603,"line_end":603,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":26368,"byte_end":26378,"line_start":762,"line_end":762,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":36215,"byte_end":36224,"line_start":79,"line_end":79,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39266,"byte_end":39277,"line_start":80,"line_end":80,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39314,"byte_end":39325,"line_start":81,"line_end":81,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39341,"byte_end":39352,"line_start":83,"line_end":83,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":40018,"byte_end":40029,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":40135,"byte_end":40146,"line_start":121,"line_end":121,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":40260,"byte_end":40271,"line_start":127,"line_end":127,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":40470,"byte_end":40481,"line_start":135,"line_end":135,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42909,"byte_end":42916,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48282,"byte_end":48289,"line_start":272,"line_end":272,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48533,"byte_end":48540,"line_start":281,"line_end":281,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375360,"byte_end":7375366,"line_start":59,"line_end":59,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375388,"byte_end":7375394,"line_start":61,"line_end":61,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375741,"byte_end":7375747,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378844,"byte_end":7378850,"line_start":195,"line_end":195,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379083,"byte_end":7379091,"line_start":206,"line_end":206,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379116,"byte_end":7379124,"line_start":207,"line_end":207,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379134,"byte_end":7379142,"line_start":209,"line_end":209,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7381038,"byte_end":7381046,"line_start":280,"line_end":280,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7381169,"byte_end":7381177,"line_start":286,"line_end":286,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7381455,"byte_end":7381460,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388625,"byte_end":7388636,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388689,"byte_end":7388700,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388739,"byte_end":7388750,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388791,"byte_end":7388802,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388818,"byte_end":7388829,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390295,"byte_end":7390306,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7400669,"byte_end":7400680,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7401218,"byte_end":7401235,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7401598,"byte_end":7401609,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7401726,"byte_end":7401737,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402102,"byte_end":7402122,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402160,"byte_end":7402180,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402327,"byte_end":7402347,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402585,"byte_end":7402605,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402974,"byte_end":7402995,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7403032,"byte_end":7403053,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7403437,"byte_end":7403458,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7403697,"byte_end":7403718,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7403850,"byte_end":7403871,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7404012,"byte_end":7404033,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7405331,"byte_end":7405343,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407573,"byte_end":7407582,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407779,"byte_end":7407788,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408949,"byte_end":7408958,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7409167,"byte_end":7409176,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7409392,"byte_end":7409401,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7415747,"byte_end":7415752,"line_start":206,"line_end":206,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7415772,"byte_end":7415777,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418049,"byte_end":7418054,"line_start":279,"line_end":279,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419411,"byte_end":7419430,"line_start":323,"line_end":323,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424102,"byte_end":7424118,"line_start":471,"line_end":471,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424153,"byte_end":7424169,"line_start":472,"line_end":472,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424744,"byte_end":7424760,"line_start":492,"line_end":492,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7427326,"byte_end":7427342,"line_start":566,"line_end":566,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7427775,"byte_end":7427791,"line_start":576,"line_end":576,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7427946,"byte_end":7427962,"line_start":584,"line_end":584,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":1433,"byte_end":1439,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":1630,"byte_end":1634,"line_start":53,"line_end":53,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":288}},{"kind":"Mod","span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\lib.rs","byte_start":1652,"byte_end":1658,"line_start":54,"line_end":54,"column_start":17,"column_end":23},"ref_id":{"krate":0,"index":487}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\seq_lock.rs","byte_start":7370524,"byte_end":7370531,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\seq_lock.rs","byte_start":7372141,"byte_end":7372158,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\seq_lock.rs","byte_start":7372476,"byte_end":7372493,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3920,"byte_end":3930,"line_start":40,"line_end":40,"column_start":31,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":3967,"byte_end":3977,"line_start":41,"line_end":41,"column_start":31,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4032,"byte_end":4042,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":18},"to":{"krate":1,"index":3760}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4099,"byte_end":4109,"line_start":46,"line_end":46,"column_start":27,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":18},"to":{"krate":1,"index":3761}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":4125,"byte_end":4135,"line_start":48,"line_end":48,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7092,"byte_end":7102,"line_start":153,"line_end":153,"column_start":17,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7474,"byte_end":7484,"line_start":171,"line_end":171,"column_start":18,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":7925,"byte_end":7935,"line_start":190,"line_end":190,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":8285,"byte_end":8295,"line_start":207,"line_end":207,"column_start":20,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":19509,"byte_end":19519,"line_start":525,"line_end":525,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21360,"byte_end":21370,"line_start":590,"line_end":590,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21479,"byte_end":21489,"line_start":596,"line_end":596,"column_start":21,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":21628,"byte_end":21638,"line_start":603,"line_end":603,"column_start":43,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\atomic_cell.rs","byte_start":26368,"byte_end":26378,"line_start":762,"line_end":762,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":70},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\atomic\\consume.rs","byte_start":36215,"byte_end":36224,"line_start":79,"line_end":79,"column_start":49,"column_end":58},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":5869},"to":{"krate":0,"index":90}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39266,"byte_end":39277,"line_start":80,"line_end":80,"column_start":31,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39314,"byte_end":39325,"line_start":81,"line_end":81,"column_start":31,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":39341,"byte_end":39352,"line_start":83,"line_end":83,"column_start":9,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":40018,"byte_end":40029,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":40135,"byte_end":40146,"line_start":121,"line_end":121,"column_start":22,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":2111}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":40260,"byte_end":40271,"line_start":127,"line_end":127,"column_start":36,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\cache_padded.rs","byte_start":40470,"byte_end":40481,"line_start":135,"line_end":135,"column_start":21,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":262},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":42909,"byte_end":42916,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48282,"byte_end":48289,"line_start":272,"line_end":272,"column_start":21,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\backoff.rs","byte_start":48533,"byte_end":48540,"line_start":281,"line_end":281,"column_start":18,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375360,"byte_end":7375366,"line_start":59,"line_end":59,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375388,"byte_end":7375394,"line_start":61,"line_end":61,"column_start":18,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7375741,"byte_end":7375747,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7378844,"byte_end":7378850,"line_start":195,"line_end":195,"column_start":21,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379083,"byte_end":7379091,"line_start":206,"line_end":206,"column_start":22,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379116,"byte_end":7379124,"line_start":207,"line_end":207,"column_start":22,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7379134,"byte_end":7379142,"line_start":209,"line_end":209,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7381038,"byte_end":7381046,"line_start":280,"line_end":280,"column_start":21,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7381169,"byte_end":7381177,"line_start":286,"line_end":286,"column_start":16,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\parker.rs","byte_start":7381455,"byte_end":7381460,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388625,"byte_end":7388636,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388689,"byte_end":7388700,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388739,"byte_end":7388750,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":3760}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388791,"byte_end":7388802,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":367},"to":{"krate":1,"index":3761}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7388818,"byte_end":7388829,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7390295,"byte_end":7390306,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7400669,"byte_end":7400680,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7401218,"byte_end":7401235,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7401598,"byte_end":7401609,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7401726,"byte_end":7401737,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402102,"byte_end":7402122,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402160,"byte_end":7402180,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402327,"byte_end":7402347,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402585,"byte_end":7402605,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7402974,"byte_end":7402995,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7403032,"byte_end":7403053,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7403437,"byte_end":7403458,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7403697,"byte_end":7403718,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7403850,"byte_end":7403871,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":2098}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7404012,"byte_end":7404033,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":2111}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\sharded_lock.rs","byte_start":7405331,"byte_end":7405343,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407573,"byte_end":7407582,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":463},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7407779,"byte_end":7407788,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7408949,"byte_end":7408958,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":463},"to":{"krate":2,"index":2122}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7409167,"byte_end":7409176,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":463},"to":{"krate":2,"index":1625}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\sync\\wait_group.rs","byte_start":7409392,"byte_end":7409401,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":463},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7415747,"byte_end":7415752,"line_start":206,"line_end":206,"column_start":22,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7415772,"byte_end":7415777,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7418049,"byte_end":7418054,"line_start":279,"line_end":279,"column_start":21,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7419411,"byte_end":7419430,"line_start":323,"line_end":323,"column_start":20,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424102,"byte_end":7424118,"line_start":471,"line_end":471,"column_start":25,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":540},"to":{"krate":2,"index":1927}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424153,"byte_end":7424169,"line_start":472,"line_end":472,"column_start":25,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":540},"to":{"krate":2,"index":1939}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7424744,"byte_end":7424760,"line_start":492,"line_end":492,"column_start":9,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7427326,"byte_end":7427342,"line_start":566,"line_end":566,"column_start":33,"column_end":49},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":540},"to":{"krate":1,"index":8679}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7427775,"byte_end":7427791,"line_start":576,"line_end":576,"column_start":35,"column_end":51},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":540},"to":{"krate":1,"index":8683}},{"span":{"file_name":"C:\\Users\\saman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.1\\src\\thread.rs","byte_start":7427946,"byte_end":7427962,"line_start":584,"line_end":584,"column_start":24,"column_end":40},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":540},"to":{"krate":2,"index":6210}}]}