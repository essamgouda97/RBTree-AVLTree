{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3","program":"/home/essamgouda97/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","criterion","--edition=2018","/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=81787b390591bd47","-C","extra-filename=-81787b390591bd47","--out-dir","/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps","-L","dependency=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps","--extern","atty=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libatty-e0c9c1a73b8f243e.rmeta","--extern","cast=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libcast-70d832c418294655.rmeta","--extern","clap=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libclap-4516d48325eb08a6.rmeta","--extern","criterion_plot=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libcriterion_plot-40fbb4aa55e5bc1c.rmeta","--extern","csv=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libcsv-a74df2d983ef21c9.rmeta","--extern","itertools=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libitertools-7ba88513fafb207a.rmeta","--extern","lazy_static=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/liblazy_static-57a7edc7f441d44c.rmeta","--extern","num_traits=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libnum_traits-6d4db584e4740faf.rmeta","--extern","oorandom=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/liboorandom-2e39c64ef8e5b57d.rmeta","--extern","plotters=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libplotters-d340fdcd7e3346b8.rmeta","--extern","rayon=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/librayon-16ba870afd3ac7cf.rmeta","--extern","regex=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libregex-18708eef59b484cd.rmeta","--extern","serde=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libserde-b55976580f1ac2ab.rmeta","--extern","serde_cbor=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libserde_cbor-5afa6d5db1dd12e1.rmeta","--extern","serde_derive=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libserde_derive-d8794750c200ecfb.so","--extern","serde_json=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libserde_json-6208ba2b70135fd9.rmeta","--extern","tinytemplate=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libtinytemplate-201c228cfd4ba9a8.rmeta","--extern","walkdir=/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libwalkdir-72ead3ebf3ce29a8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/essamgouda97/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/essamgouda97/Desktop/ECE522/Project/ECE522-Project/project_rust/target/rls/debug/deps/libcriterion-81787b390591bd47.rmeta"},"prelude":{"crate_id":{"name":"criterion","disambiguator":[11063459876718343284,11047524273221485927]},"crate_root":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src","external_crates":[{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18437716656233032650,2349106724991734091]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16851962707842592855,4932765248485690217]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3049591816127030880,10952373373500329976]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11587085401131637304,2097967498245787009]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[697141649018154369,16548652339936893370]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15777040323210795675,4562741973928336648]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[15931681355194650171,7679759071890480571]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16378405889910241769,9643272937548158260]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8261542656080474758,5147161130074218296]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1712641478249352838,12464696676097716113]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3715598662871405823,1939556143240013170]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4641845549064414815,7418938888650694907]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18127448783747998133,9149995038350923488]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[8742225116956546677,8424782546207546390]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[4429584372382556774,11934523189258823667]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":16,"id":{"name":"serde_derive","disambiguator":[13558880451515958506,9858925731216070855]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":17,"id":{"name":"clap","disambiguator":[600650470966930272,14013858719296521887]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[3913220441560649978,12679321023898702919]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":19,"id":{"name":"textwrap","disambiguator":[1469993608440346305,6739942990964152316]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":20,"id":{"name":"unicode_width","disambiguator":[12086774743395168322,11384932933671368190]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":21,"id":{"name":"regex","disambiguator":[16102898963259288093,10640720331549605930]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":22,"id":{"name":"regex_syntax","disambiguator":[17913143138245938310,11822375006066672656]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","num":23,"id":{"name":"csv","disambiguator":[16820759380449066848,9121103691231599871]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":24,"id":{"name":"serde","disambiguator":[11833951556593963016,14482378626829062399]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","num":25,"id":{"name":"bstr","disambiguator":[4832324725760530545,4512492273657544669]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","num":26,"id":{"name":"memchr","disambiguator":[4730453745899216273,1955493413078600908]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","num":27,"id":{"name":"regex_automata","disambiguator":[9885803599070262261,17067719995714671151]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","num":28,"id":{"name":"byteorder","disambiguator":[15331711236368298548,13127992808166812597]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","num":29,"id":{"name":"csv_core","disambiguator":[17223361212335677624,5425944753968204653]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","num":30,"id":{"name":"itoa","disambiguator":[8400552349425539898,2881390274549275053]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","num":31,"id":{"name":"ryu","disambiguator":[13063915734674489864,8779175525678613778]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/error.rs","num":32,"id":{"name":"serde_json","disambiguator":[4057294382224919859,11010205853767345260]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/fs.rs","num":33,"id":{"name":"walkdir","disambiguator":[17026274855630726466,12242917252633435775]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/fs.rs","num":34,"id":{"name":"same_file","disambiguator":[2911746382940934458,14379899517930470559]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","num":35,"id":{"name":"criterion_plot","disambiguator":[7629758312243778894,14638082085332595920]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","num":36,"id":{"name":"cast","disambiguator":[15908362736117578253,5813186935406286407]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/gnuplot_backend/summary.rs","num":37,"id":{"name":"itertools","disambiguator":[7866559092369303280,12828417406716076607]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","num":38,"id":{"name":"either","disambiguator":[8710691821623407101,11934486686046920191]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","num":39,"id":{"name":"tinytemplate","disambiguator":[17078877752462036460,1122520721562021998]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/plotters_backend/mod.rs","num":40,"id":{"name":"plotters","disambiguator":[7665226929086027429,18296504098753907640]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/float.rs","num":41,"id":{"name":"num_traits","disambiguator":[9157591702946529725,10312786440297814471]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":42,"id":{"name":"rayon","disambiguator":[11944951460180305869,478511521219396985]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":43,"id":{"name":"rayon_core","disambiguator":[12303249718796351589,3130297178280294383]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":44,"id":{"name":"crossbeam_channel","disambiguator":[16041480430528839842,2756143184707437766]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":45,"id":{"name":"cfg_if","disambiguator":[10487014861562282928,9077454618309915830]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":46,"id":{"name":"crossbeam_utils","disambiguator":[6809119362634214978,10687305092522844551]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":47,"id":{"name":"crossbeam_deque","disambiguator":[14060947120585717191,4038382720275757629]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":48,"id":{"name":"crossbeam_epoch","disambiguator":[12807845683292911085,1553041943716718459]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":49,"id":{"name":"const_fn","disambiguator":[14348720588478269305,10430591372545478692]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":50,"id":{"name":"scopeguard","disambiguator":[11094522125063972432,8514709811731402222]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":51,"id":{"name":"memoffset","disambiguator":[2190597865362114076,8756076306054266612]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":52,"id":{"name":"num_cpus","disambiguator":[2521975354390997854,14480882189818909687]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","num":53,"id":{"name":"libc","disambiguator":[4458480106135072753,7496631339199250715]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/rand_util.rs","num":54,"id":{"name":"oorandom","disambiguator":[16455276631121940368,3124127992634384020]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","num":55,"id":{"name":"serde_cbor","disambiguator":[9715996336941891222,12717834054013716265]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","num":56,"id":{"name":"half","disambiguator":[2684725065937703140,423142635465215359]}},{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","num":57,"id":{"name":"atty","disambiguator":[6911893370675172516,5704594719935120977]}}],"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":0,"byte_end":71190,"line_start":1,"line_end":1899,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":2591,"byte_end":2600,"line_start":99,"line_end":99,"column_start":28,"column_end":37},"alias_span":null,"name":"Benchmark","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":133},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":2602,"byte_end":2621,"line_start":99,"line_end":99,"column_start":39,"column_end":58},"alias_span":null,"name":"BenchmarkDefinition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":2623,"byte_end":2645,"line_start":99,"line_end":99,"column_start":60,"column_end":82},"alias_span":null,"name":"ParameterizedBenchmark","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":2681,"byte_end":2695,"line_start":100,"line_end":100,"column_start":34,"column_end":48},"alias_span":null,"name":"BenchmarkGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2007},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":2697,"byte_end":2708,"line_start":100,"line_end":100,"column_start":50,"column_end":61},"alias_span":null,"name":"BenchmarkId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":0,"byte_end":71190,"line_start":1,"line_end":1899,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":12},{"krate":0,"index":79},{"krate":0,"index":171},{"krate":0,"index":250},{"krate":0,"index":298},{"krate":0,"index":322},{"krate":0,"index":339},{"krate":0,"index":375},{"krate":0,"index":382},{"krate":0,"index":422},{"krate":0,"index":527},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":580},{"krate":0,"index":1103},{"krate":0,"index":1113},{"krate":0,"index":1264},{"krate":0,"index":1307},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":4166},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":4172},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":4200},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":4206},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":4212},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":4214},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":4218},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":3108},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3116},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3127},{"krate":0,"index":3130},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3138},{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3149},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1809},{"krate":0,"index":3152},{"krate":0,"index":3180},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3172},{"krate":0,"index":3169},{"krate":0,"index":3167},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1824},{"krate":0,"index":3182},{"krate":0,"index":3190},{"krate":0,"index":3188},{"krate":0,"index":3187},{"krate":0,"index":3192},{"krate":0,"index":3200},{"krate":0,"index":3198},{"krate":0,"index":3197},{"krate":0,"index":3202},{"krate":0,"index":3214},{"krate":0,"index":3212},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1924},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":3216},{"krate":0,"index":3274},{"krate":0,"index":3272},{"krate":0,"index":3266},{"krate":0,"index":3227},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3276},{"krate":0,"index":3284},{"krate":0,"index":3282},{"krate":0,"index":3281},{"krate":0,"index":3286},{"krate":0,"index":3290},{"krate":0,"index":3288},{"krate":0,"index":1944},{"krate":0,"index":1946},{"krate":0,"index":3292},{"krate":0,"index":3302},{"krate":0,"index":3300},{"krate":0,"index":3299},{"krate":0,"index":1948},{"krate":0,"index":3304},{"krate":0,"index":3357},{"krate":0,"index":3355},{"krate":0,"index":3354},{"krate":0,"index":3348},{"krate":0,"index":3309},{"krate":0,"index":1950},{"krate":0,"index":3359},{"krate":0,"index":3414},{"krate":0,"index":3408},{"krate":0,"index":3363},{"krate":0,"index":1956}],"decl_id":null,"docs":" A statistics-driven micro-benchmarking library written in Rust.","sig":null,"attributes":[{"value":"! A statistics-driven micro-benchmarking library written in Rust.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":0,"byte_end":67,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":68,"byte_end":71,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate is a microbenchmarking library which aims to provide strong","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":72,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! statistical confidence in detecting and estimating the size of performance","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":147,"byte_end":225,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! improvements and regressions, while also being easy to use.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":226,"byte_end":289,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":290,"byte_end":293,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! See","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":294,"byte_end":301,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"! [the user guide](https://bheisler.github.io/criterion.rs/book/index.html)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":302,"byte_end":379,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"! for examples as well as details on the measurement and analysis process,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":380,"byte_end":456,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"! and the output.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":457,"byte_end":476,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":477,"byte_end":480,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! ## Features:","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":481,"byte_end":497,"line_start":12,"line_end":12,"column_start":1,"column_end":17}},{"value":"! * Collects detailed statistics, providing strong confidence that changes","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":498,"byte_end":574,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"!   to performance are real, not measurement noise","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":575,"byte_end":627,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"! * Produces detailed charts, providing thorough understanding of your code's","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":628,"byte_end":707,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   performance behavior.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":708,"byte_end":735,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"warn(missing_docs)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":737,"byte_end":759,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"warn(bare_trait_objects)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":760,"byte_end":788,"line_start":19,"line_end":19,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":121},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":90947,"byte_end":90969,"line_start":81,"line_end":81,"column_start":12,"column_end":34},"name":"ParameterizedBenchmark","qualname":"::benchmark::ParameterizedBenchmark","value":"ParameterizedBenchmark {  }","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Structure representing a benchmark (or group of benchmarks)\n which take one parameter.\n","sig":null,"attributes":[{"value":"/ Structure representing a benchmark (or group of benchmarks)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":90827,"byte_end":90890,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/ which take one parameter.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":90891,"byte_end":90920,"line_start":79,"line_end":79,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":128},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":91283,"byte_end":91292,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"Benchmark","qualname":"::benchmark::Benchmark","value":"Benchmark {  }","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"decl_id":null,"docs":" Structure representing a benchmark (or group of benchmarks)\n which takes no parameters.\n","sig":null,"attributes":[{"value":"/ Structure representing a benchmark (or group of benchmarks)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":91162,"byte_end":91225,"line_start":88,"line_end":88,"column_start":1,"column_end":64}},{"value":"/ which takes no parameters.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":91226,"byte_end":91256,"line_start":89,"line_end":89,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":133},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":91578,"byte_end":91597,"line_start":100,"line_end":100,"column_start":11,"column_end":30},"name":"BenchmarkDefinition","qualname":"::benchmark::BenchmarkDefinition","value":"BenchmarkDefinition<M: Measurement = WallTime>: Sized","parent":null,"children":[{"krate":0,"index":135}],"decl_id":null,"docs":" Common trait for `Benchmark` and `ParameterizedBenchmark`. Not intended to be\n used outside of Criterion.rs.\n","sig":null,"attributes":[{"value":"/ Common trait for `Benchmark` and `ParameterizedBenchmark`. Not intended to be","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":91437,"byte_end":91518,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/ used outside of Criterion.rs.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":91519,"byte_end":91552,"line_start":98,"line_end":98,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":91660,"byte_end":91663,"line_start":102,"line_end":102,"column_start":8,"column_end":11},"name":"run","qualname":"::benchmark::BenchmarkDefinition::run","value":"pub fn run(Self, &str, &mut Criterion<M>)","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98453,"byte_end":98456,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"new","qualname":"<Benchmark<M>>::new","value":"pub fn new<S, F>(S, F) -> Benchmark<M> where S: Into<String>,\nF: FnMut(&mut Bencher<, M>) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new benchmark group and adds the given function to it.","sig":null,"attributes":[{"value":"/ Create a new benchmark group and adds the given function to it.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":97859,"byte_end":97926,"line_start":256,"line_end":256,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":97931,"byte_end":97934,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":97939,"byte_end":97952,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":97957,"byte_end":97960,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":97965,"byte_end":97976,"line_start":260,"line_end":260,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":97981,"byte_end":98023,"line_start":261,"line_end":261,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98028,"byte_end":98051,"line_start":262,"line_end":262,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98056,"byte_end":98059,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98064,"byte_end":98097,"line_start":264,"line_end":264,"column_start":5,"column_end":38}},{"value":"/     // One-time setup goes here","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98102,"byte_end":98137,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     c.bench(","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98142,"byte_end":98158,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         \"my_group\",","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98163,"byte_end":98186,"line_start":267,"line_end":267,"column_start":5,"column_end":28}},{"value":"/         Benchmark::new(\"my_function\", |b| b.iter(|| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98191,"byte_end":98248,"line_start":268,"line_end":268,"column_start":5,"column_end":62}},{"value":"/             // Code to benchmark goes here","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98253,"byte_end":98299,"line_start":269,"line_end":269,"column_start":5,"column_end":51}},{"value":"/         })),","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98304,"byte_end":98320,"line_start":270,"line_end":270,"column_start":5,"column_end":21}},{"value":"/     );","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98325,"byte_end":98335,"line_start":271,"line_end":271,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98340,"byte_end":98345,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98350,"byte_end":98353,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98358,"byte_end":98395,"line_start":274,"line_end":274,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98400,"byte_end":98429,"line_start":275,"line_end":275,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98434,"byte_end":98441,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98822,"byte_end":98835,"line_start":291,"line_end":291,"column_start":12,"column_end":25},"name":"with_function","qualname":"<Benchmark<M>>::with_function","value":"pub fn with_function<S, F>(Self, S, F) -> Benchmark<M> where S: Into<String>,\nF: FnMut(&mut Bencher<, M>) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a function to the benchmark group.\n","sig":null,"attributes":[{"value":"/ Add a function to the benchmark group.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":98768,"byte_end":98810,"line_start":290,"line_end":290,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":99286,"byte_end":99296,"line_start":306,"line_end":306,"column_start":12,"column_end":22},"name":"throughput","qualname":"<Benchmark<M>>::throughput","value":"pub fn throughput(Self, Throughput) -> Benchmark<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the input size for this benchmark group. Used for reporting the\n throughput.\n","sig":null,"attributes":[{"value":"/ Set the input size for this benchmark group. Used for reporting the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":99183,"byte_end":99254,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ throughput.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":99259,"byte_end":99274,"line_start":305,"line_end":305,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":103020,"byte_end":103023,"line_start":431,"line_end":431,"column_start":12,"column_end":15},"name":"new","qualname":"<ParameterizedBenchmark<T, M>>::new","value":"pub fn new<S, F, I>(S, F, I) -> ParameterizedBenchmark<T, M> where\nS: Into<String>, F: FnMut(&mut Bencher<, M>, &T) -> () + 'static,\nI: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new parameterized benchmark group and adds the given function\n to it.\n The function under test must follow the setup - bench - teardown pattern:","sig":null,"attributes":[{"value":"/ Create a new parameterized benchmark group and adds the given function","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102132,"byte_end":102206,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ to it.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102211,"byte_end":102221,"line_start":403,"line_end":403,"column_start":5,"column_end":15}},{"value":"/ The function under test must follow the setup - bench - teardown pattern:","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102226,"byte_end":102303,"line_start":404,"line_end":404,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102308,"byte_end":102311,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102316,"byte_end":102329,"line_start":406,"line_end":406,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102334,"byte_end":102337,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102342,"byte_end":102353,"line_start":408,"line_end":408,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102358,"byte_end":102400,"line_start":409,"line_end":409,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102405,"byte_end":102428,"line_start":410,"line_end":410,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102433,"byte_end":102436,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102441,"byte_end":102474,"line_start":412,"line_end":412,"column_start":5,"column_end":38}},{"value":"/     let parameters = vec![1u64, 2u64, 3u64];","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102479,"byte_end":102527,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102532,"byte_end":102535,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/     // One-time setup goes here","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102540,"byte_end":102575,"line_start":415,"line_end":415,"column_start":5,"column_end":40}},{"value":"/     c.bench(","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102580,"byte_end":102596,"line_start":416,"line_end":416,"column_start":5,"column_end":21}},{"value":"/         \"my_group\",","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102601,"byte_end":102624,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/         ParameterizedBenchmark::new(","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102629,"byte_end":102669,"line_start":418,"line_end":418,"column_start":5,"column_end":45}},{"value":"/             \"my_function\",","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102674,"byte_end":102704,"line_start":419,"line_end":419,"column_start":5,"column_end":35}},{"value":"/             |b, param| b.iter(|| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102709,"byte_end":102747,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/                 // Code to benchmark using param goes here","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102752,"byte_end":102814,"line_start":421,"line_end":421,"column_start":5,"column_end":67}},{"value":"/             }),","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102819,"byte_end":102838,"line_start":422,"line_end":422,"column_start":5,"column_end":24}},{"value":"/             parameters","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102843,"byte_end":102869,"line_start":423,"line_end":423,"column_start":5,"column_end":31}},{"value":"/         )","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102874,"byte_end":102887,"line_start":424,"line_end":424,"column_start":5,"column_end":18}},{"value":"/     );","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102892,"byte_end":102902,"line_start":425,"line_end":425,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102907,"byte_end":102912,"line_start":426,"line_end":426,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102917,"byte_end":102920,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102925,"byte_end":102962,"line_start":428,"line_end":428,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":102967,"byte_end":102996,"line_start":429,"line_end":429,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":103001,"byte_end":103008,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":103529,"byte_end":103542,"line_start":447,"line_end":447,"column_start":12,"column_end":25},"name":"with_function","qualname":"<ParameterizedBenchmark<T, M>>::with_function","value":"pub fn with_function<S, F>(Self, S, F) -> ParameterizedBenchmark<T, M> where\nS: Into<String>, F: FnMut(&mut Bencher<, M>, &T) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a function to the benchmark group.\n","sig":null,"attributes":[{"value":"/ Add a function to the benchmark group.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":103475,"byte_end":103517,"line_start":446,"line_end":446,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":103976,"byte_end":103986,"line_start":461,"line_end":461,"column_start":12,"column_end":22},"name":"throughput","qualname":"<ParameterizedBenchmark<T, M>>::throughput","value":"pub fn throughput<F>(Self, F) -> ParameterizedBenchmark<T, M> where F: Fn(&T)\n-> Throughput + 'static","parent":null,"children":[],"decl_id":null,"docs":" Use the given function to calculate the input size for a given input.\n","sig":null,"attributes":[{"value":"/ Use the given function to calculate the input size for a given input.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":103891,"byte_end":103964,"line_start":460,"line_end":460,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":190},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111766,"byte_end":111780,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"BenchmarkGroup","qualname":"::benchmark_group::BenchmarkGroup","value":"BenchmarkGroup {  }","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":" Structure used to group together a set of related benchmarks, along with custom configuration\n settings for groups of benchmarks. All benchmarks performed using a benchmark group will be\n grouped together in the final report.","sig":null,"attributes":[{"value":"/ Structure used to group together a set of related benchmarks, along with custom configuration","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109043,"byte_end":109140,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ settings for groups of benchmarks. All benchmarks performed using a benchmark group will be","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109141,"byte_end":109236,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ grouped together in the final report.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109237,"byte_end":109278,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109279,"byte_end":109282,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109283,"byte_end":109298,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109299,"byte_end":109302,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109303,"byte_end":109316,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109317,"byte_end":109357,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ use self::criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109358,"byte_end":109385,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109386,"byte_end":109414,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109415,"byte_end":109418,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn bench_simple(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109419,"byte_end":109459,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/     let mut group = c.benchmark_group(\"My Group\");","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109460,"byte_end":109514,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109515,"byte_end":109518,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     // Now we can perform benchmarks with this group","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109519,"byte_end":109575,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/     group.bench_function(\"Bench 1\", |b| b.iter(|| 1 ));","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109576,"byte_end":109635,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/     group.bench_function(\"Bench 2\", |b| b.iter(|| 2 ));","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109636,"byte_end":109695,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/    ","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109696,"byte_end":109703,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/     // It's recommended to call group.finish() explicitly at the end, but if you don't it will","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109704,"byte_end":109802,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/     // be called automatically when the group is dropped.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109803,"byte_end":109864,"line_start":30,"line_end":30,"column_start":1,"column_end":62}},{"value":"/     group.finish();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109865,"byte_end":109888,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109889,"byte_end":109894,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109895,"byte_end":109898,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ fn bench_nested(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109899,"byte_end":109939,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/     let mut group = c.benchmark_group(\"My Second Group\");","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":109940,"byte_end":110001,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/     // We can override the configuration on a per-group level","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110002,"byte_end":110067,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/     group.measurement_time(Duration::from_secs(1));","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110068,"byte_end":110123,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110124,"byte_end":110127,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/     // We can also use loops to define multiple benchmarks, even over multiple dimensions.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110128,"byte_end":110222,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/     for x in 0..3 {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110223,"byte_end":110246,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/         for y in 0..3 {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110247,"byte_end":110274,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/             let point = (x, y);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110275,"byte_end":110310,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/             let parameter_string = format!(\"{} * {}\", x, y);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110311,"byte_end":110375,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/             group.bench_with_input(BenchmarkId::new(\"Multiply\", parameter_string), &point,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110376,"byte_end":110470,"line_start":44,"line_end":44,"column_start":1,"column_end":95}},{"value":"/                 |b, (p_x, p_y)| b.iter(|| p_x * p_y));","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110471,"byte_end":110529,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110530,"byte_end":110543,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110544,"byte_end":110553,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/    ","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110554,"byte_end":110561,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/     group.finish();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110562,"byte_end":110585,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110586,"byte_end":110591,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110592,"byte_end":110595,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ fn bench_throughput(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110596,"byte_end":110640,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     let mut group = c.benchmark_group(\"Summation\");","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110641,"byte_end":110696,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/     ","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110697,"byte_end":110705,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/     for size in [1024, 2048, 4096].iter() {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110706,"byte_end":110753,"line_start":55,"line_end":55,"column_start":1,"column_end":48}},{"value":"/         // Generate input of an appropriate size...","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110754,"byte_end":110809,"line_start":56,"line_end":56,"column_start":1,"column_end":56}},{"value":"/         let input = vec![1u64, *size];","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110810,"byte_end":110852,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110853,"byte_end":110856,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/         // We can use the throughput function to tell Criterion.rs how large the input is","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110857,"byte_end":110950,"line_start":59,"line_end":59,"column_start":1,"column_end":94}},{"value":"/         // so it can calculate the overall throughput of the function. If we wanted, we could","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":110951,"byte_end":111048,"line_start":60,"line_end":60,"column_start":1,"column_end":98}},{"value":"/         // even change the benchmark configuration for different inputs (eg. to reduce the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111049,"byte_end":111143,"line_start":61,"line_end":61,"column_start":1,"column_end":95}},{"value":"/         // number of samples for extremely large and slow inputs) or even different functions.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111144,"byte_end":111242,"line_start":62,"line_end":62,"column_start":1,"column_end":99}},{"value":"/         group.throughput(Throughput::Elements(*size as u64));","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111243,"byte_end":111308,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111309,"byte_end":111312,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/         group.bench_with_input(BenchmarkId::new(\"sum\", *size), &input,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111313,"byte_end":111387,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/             |b, i| b.iter(|| i.iter().sum::<u64>()));","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111388,"byte_end":111445,"line_start":66,"line_end":66,"column_start":1,"column_end":58}},{"value":"/         group.bench_with_input(BenchmarkId::new(\"fold\", *size), &input,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111446,"byte_end":111521,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/             |b, i| b.iter(|| i.iter().fold(0u64, |a, b| a + b)));","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111522,"byte_end":111591,"line_start":68,"line_end":68,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111592,"byte_end":111601,"line_start":69,"line_end":69,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111602,"byte_end":111605,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     group.finish();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111606,"byte_end":111629,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111630,"byte_end":111635,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111636,"byte_end":111639,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ criterion_group!(benches, bench_simple, bench_nested, bench_throughput);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111640,"byte_end":111716,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111717,"byte_end":111746,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":111747,"byte_end":111754,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112363,"byte_end":112374,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<BenchmarkGroup>::sample_size","value":"pub fn sample_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the size of the sample for this benchmark","sig":null,"attributes":[{"value":"/ Changes the size of the sample for this benchmark","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112061,"byte_end":112114,"line_start":86,"line_end":86,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112119,"byte_end":112122,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ A bigger sample should yield more accurate results if paired with a sufficiently large","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112127,"byte_end":112217,"line_start":88,"line_end":88,"column_start":5,"column_end":95}},{"value":"/ measurement time.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112222,"byte_end":112243,"line_start":89,"line_end":89,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112248,"byte_end":112251,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Sample size must be at least 10.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112256,"byte_end":112292,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112297,"byte_end":112300,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112305,"byte_end":112317,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112322,"byte_end":112325,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Panics if n < 10.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112330,"byte_end":112351,"line_start":95,"line_end":95,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112650,"byte_end":112662,"line_start":108,"line_end":108,"column_start":12,"column_end":24},"name":"warm_up_time","qualname":"<BenchmarkGroup>::warm_up_time","value":"pub fn warm_up_time(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the warm up time for this benchmark","sig":null,"attributes":[{"value":"/ Changes the warm up time for this benchmark","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112513,"byte_end":112560,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112565,"byte_end":112568,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112573,"byte_end":112585,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112590,"byte_end":112593,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112598,"byte_end":112638,"line_start":107,"line_end":107,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113452,"byte_end":113468,"line_start":126,"line_end":126,"column_start":12,"column_end":28},"name":"measurement_time","qualname":"<BenchmarkGroup>::measurement_time","value":"pub fn measurement_time(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the target measurement time for this benchmark group.","sig":null,"attributes":[{"value":"/ Changes the target measurement time for this benchmark group.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112820,"byte_end":112885,"line_start":115,"line_end":115,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112890,"byte_end":112893,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Criterion will attempt to spent approximately this amount of time measuring each","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112898,"byte_end":112982,"line_start":117,"line_end":117,"column_start":5,"column_end":89}},{"value":"/ benchmark on a best-effort basis. If it is not possible to perform the measurement in","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112987,"byte_end":113076,"line_start":118,"line_end":118,"column_start":5,"column_end":94}},{"value":"/ the requested time (eg. because each iteration of the benchmark is long) then Criterion","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113081,"byte_end":113172,"line_start":119,"line_end":119,"column_start":5,"column_end":96}},{"value":"/ will spend as long as is needed to collect the desired number of samples. With a longer","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113177,"byte_end":113268,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/ time, the measurement will become more resilient to interference from other programs.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113273,"byte_end":113362,"line_start":121,"line_end":121,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113367,"byte_end":113370,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113375,"byte_end":113387,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113392,"byte_end":113395,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113400,"byte_end":113440,"line_start":125,"line_end":125,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114106,"byte_end":114116,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"nresamples","qualname":"<BenchmarkGroup>::nresamples","value":"pub fn nresamples(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of resamples for this benchmark group","sig":null,"attributes":[{"value":"/ Changes the number of resamples for this benchmark group","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113630,"byte_end":113690,"line_start":133,"line_end":133,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113695,"byte_end":113698,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Number of resamples to use for the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113703,"byte_end":113741,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/ [bootstrap](http://en.wikipedia.org/wiki/Bootstrapping_(statistics)#Case_resampling)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113746,"byte_end":113834,"line_start":136,"line_end":136,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113839,"byte_end":113842,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ A larger number of resamples reduces the random sampling errors which are inherent to the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113847,"byte_end":113940,"line_start":138,"line_end":138,"column_start":5,"column_end":98}},{"value":"/ bootstrap method, but also increases the analysis time.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":113945,"byte_end":114004,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114009,"byte_end":114012,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114017,"byte_end":114029,"line_start":141,"line_end":141,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114034,"byte_end":114037,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Panics if the number of resamples is set to zero","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114042,"byte_end":114094,"line_start":143,"line_end":143,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115106,"byte_end":115121,"line_start":166,"line_end":166,"column_start":12,"column_end":27},"name":"noise_threshold","qualname":"<BenchmarkGroup>::noise_threshold","value":"pub fn noise_threshold(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the noise threshold for benchmarks in this group. The noise threshold\n is used to filter out small changes in performance from one run to the next, even if they\n are statistically significant. Sometimes benchmarking the same code twice will result in\n small but statistically significant differences solely because of noise. This provides a way\n to filter out some of these false positives at the cost of making it harder to detect small\n changes to the true performance of the benchmark.","sig":null,"attributes":[{"value":"/ Changes the noise threshold for benchmarks in this group. The noise threshold","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114376,"byte_end":114457,"line_start":154,"line_end":154,"column_start":5,"column_end":86}},{"value":"/ is used to filter out small changes in performance from one run to the next, even if they","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114462,"byte_end":114555,"line_start":155,"line_end":155,"column_start":5,"column_end":98}},{"value":"/ are statistically significant. Sometimes benchmarking the same code twice will result in","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114560,"byte_end":114652,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ small but statistically significant differences solely because of noise. This provides a way","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114657,"byte_end":114753,"line_start":157,"line_end":157,"column_start":5,"column_end":101}},{"value":"/ to filter out some of these false positives at the cost of making it harder to detect small","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114758,"byte_end":114853,"line_start":158,"line_end":158,"column_start":5,"column_end":100}},{"value":"/ changes to the true performance of the benchmark.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114858,"byte_end":114911,"line_start":159,"line_end":159,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114916,"byte_end":114919,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The default is 0.01, meaning that changes smaller than 1% will be ignored.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":114924,"byte_end":115002,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115007,"byte_end":115010,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115015,"byte_end":115027,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115032,"byte_end":115035,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Panics if the threshold is set to a negative value","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115040,"byte_end":115094,"line_start":165,"line_end":165,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115777,"byte_end":115793,"line_start":181,"line_end":181,"column_start":12,"column_end":28},"name":"confidence_level","qualname":"<BenchmarkGroup>::confidence_level","value":"pub fn confidence_level(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the confidence level for benchmarks in this group. The confidence\n level is the desired probability that the true runtime lies within the estimated\n [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is\n 0.95, meaning that the confidence interval should capture the true value 95% of the time.","sig":null,"attributes":[{"value":"/ Changes the confidence level for benchmarks in this group. The confidence","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115287,"byte_end":115364,"line_start":173,"line_end":173,"column_start":5,"column_end":82}},{"value":"/ level is the desired probability that the true runtime lies within the estimated","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115369,"byte_end":115453,"line_start":174,"line_end":174,"column_start":5,"column_end":89}},{"value":"/ [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115458,"byte_end":115550,"line_start":175,"line_end":175,"column_start":5,"column_end":97}},{"value":"/ 0.95, meaning that the confidence interval should capture the true value 95% of the time.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115555,"byte_end":115648,"line_start":176,"line_end":176,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115653,"byte_end":115656,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115661,"byte_end":115673,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115678,"byte_end":115681,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Panics if the confidence level is set to a value outside the `(0, 1)` range","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":115686,"byte_end":115765,"line_start":180,"line_end":180,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117363,"byte_end":117381,"line_start":211,"line_end":211,"column_start":12,"column_end":30},"name":"significance_level","qualname":"<BenchmarkGroup>::significance_level","value":"pub fn significance_level(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the [significance level](https://en.wikipedia.org/wiki/Statistical_significance)\n for benchmarks in this group. This is used to perform a\n [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if\n the measurements from this run are different from the measured performance of the last run.\n The significance level is the desired probability that two measurements of identical code\n will be considered 'different' due to noise in the measurements. The default value is 0.05,\n meaning that approximately 5% of identical benchmarks will register as different due to\n noise.","sig":null,"attributes":[{"value":"/ Changes the [significance level](https://en.wikipedia.org/wiki/Statistical_significance)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116078,"byte_end":116170,"line_start":191,"line_end":191,"column_start":5,"column_end":97}},{"value":"/ for benchmarks in this group. This is used to perform a","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116175,"byte_end":116234,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/ [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116239,"byte_end":116332,"line_start":193,"line_end":193,"column_start":5,"column_end":98}},{"value":"/ the measurements from this run are different from the measured performance of the last run.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116337,"byte_end":116432,"line_start":194,"line_end":194,"column_start":5,"column_end":100}},{"value":"/ The significance level is the desired probability that two measurements of identical code","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116437,"byte_end":116530,"line_start":195,"line_end":195,"column_start":5,"column_end":98}},{"value":"/ will be considered 'different' due to noise in the measurements. The default value is 0.05,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116535,"byte_end":116630,"line_start":196,"line_end":196,"column_start":5,"column_end":100}},{"value":"/ meaning that approximately 5% of identical benchmarks will register as different due to","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116635,"byte_end":116726,"line_start":197,"line_end":197,"column_start":5,"column_end":96}},{"value":"/ noise.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116731,"byte_end":116741,"line_start":198,"line_end":198,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116746,"byte_end":116749,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This presents a trade-off. By setting the significance level closer to 0.0, you can increase","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116754,"byte_end":116850,"line_start":200,"line_end":200,"column_start":5,"column_end":101}},{"value":"/ the statistical robustness against noise, but it also weaken's Criterion.rs' ability to","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116855,"byte_end":116946,"line_start":201,"line_end":201,"column_start":5,"column_end":96}},{"value":"/ detect small but real changes in the performance. By setting the significance level","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":116951,"byte_end":117038,"line_start":202,"line_end":202,"column_start":5,"column_end":92}},{"value":"/ closer to 1.0, Criterion.rs will be more able to detect small true changes, but will also","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117043,"byte_end":117136,"line_start":203,"line_end":203,"column_start":5,"column_end":98}},{"value":"/ report more spurious differences.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117141,"byte_end":117178,"line_start":204,"line_end":204,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117183,"byte_end":117186,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ See also the noise threshold setting.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117191,"byte_end":117232,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117237,"byte_end":117240,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117245,"byte_end":117257,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117262,"byte_end":117265,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Panics if the significance level is set to a value outside the `(0, 1)` range","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117270,"byte_end":117351,"line_start":210,"line_end":210,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117612,"byte_end":117623,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"plot_config","qualname":"<BenchmarkGroup>::plot_config","value":"pub fn plot_config(&mut Self, PlotConfiguration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the plot configuration for this benchmark group.\n","sig":null,"attributes":[{"value":"/ Changes the plot configuration for this benchmark group.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117540,"byte_end":117600,"line_start":218,"line_end":218,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117862,"byte_end":117872,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"throughput","qualname":"<BenchmarkGroup>::throughput","value":"pub fn throughput(&mut Self, Throughput) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the input size for this benchmark group. Used for reporting the\n throughput.\n","sig":null,"attributes":[{"value":"/ Set the input size for this benchmark group. Used for reporting the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117759,"byte_end":117830,"line_start":224,"line_end":224,"column_start":5,"column_end":76}},{"value":"/ throughput.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117835,"byte_end":117850,"line_start":225,"line_end":225,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":118054,"byte_end":118067,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"sampling_mode","qualname":"<BenchmarkGroup>::sampling_mode","value":"pub fn sampling_mode(&mut Self, SamplingMode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the sampling mode for this benchmark group.\n","sig":null,"attributes":[{"value":"/ Set the sampling mode for this benchmark group.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":117991,"byte_end":118042,"line_start":231,"line_end":231,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":118631,"byte_end":118645,"line_start":249,"line_end":249,"column_start":12,"column_end":26},"name":"bench_function","qualname":"<BenchmarkGroup>::bench_function","value":"pub fn bench_function<ID: IntoBenchmarkId, F>(&mut Self, ID, F) -> &mut Self\nwhere F: FnMut(&mut Bencher<, M>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmark the given parameterless function inside this benchmark group.\n","sig":null,"attributes":[{"value":"/ Benchmark the given parameterless function inside this benchmark group.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":118544,"byte_end":118619,"line_start":248,"line_end":248,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":118944,"byte_end":118960,"line_start":258,"line_end":258,"column_start":12,"column_end":28},"name":"bench_with_input","qualname":"<BenchmarkGroup>::bench_with_input","value":"pub fn bench_with_input<ID: IntoBenchmarkId, F,\n                        I: ?Sized>(&mut Self, ID, &I, F) -> &mut Self where\nF: FnMut(&mut Bencher<, M>, &I) -> (), I","parent":null,"children":[],"decl_id":null,"docs":" Benchmark the given parameterized function inside this benchmark group.\n","sig":null,"attributes":[{"value":"/ Benchmark the given parameterized function inside this benchmark group.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":118857,"byte_end":118932,"line_start":257,"line_end":257,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":122477,"byte_end":122483,"line_start":363,"line_end":363,"column_start":12,"column_end":18},"name":"finish","qualname":"<BenchmarkGroup>::finish","value":"pub fn finish(Self)","parent":null,"children":[],"decl_id":null,"docs":" Consume the benchmark group and generate the summary reports for the group.","sig":null,"attributes":[{"value":"/ Consume the benchmark group and generate the summary reports for the group.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":122256,"byte_end":122335,"line_start":359,"line_end":359,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":122340,"byte_end":122343,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ It is recommended to call this explicitly, but if you forget it will be called when the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":122348,"byte_end":122439,"line_start":361,"line_end":361,"column_start":5,"column_end":96}},{"value":"/ group is dropped.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":122444,"byte_end":122465,"line_start":362,"line_end":362,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2007},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":123853,"byte_end":123864,"line_start":402,"line_end":402,"column_start":12,"column_end":23},"name":"BenchmarkId","qualname":"::benchmark_group::BenchmarkId","value":"BenchmarkId {  }","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2009}],"decl_id":null,"docs":" Simple structure representing an ID for a benchmark. The ID must be unique within a benchmark\n group.\n","sig":null,"attributes":[{"value":"/ Simple structure representing an ID for a benchmark. The ID must be unique within a benchmark","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":123695,"byte_end":123792,"line_start":399,"line_end":399,"column_start":1,"column_end":98}},{"value":"/ group.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":123793,"byte_end":123803,"line_start":400,"line_end":400,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125414,"byte_end":125417,"line_start":436,"line_end":436,"column_start":12,"column_end":15},"name":"new","qualname":"<BenchmarkId>::new","value":"pub fn new<S: Into<String>, P: ::std::fmt::Display>(S, P) -> BenchmarkId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new benchmark ID from a string function name and a parameter value.","sig":null,"attributes":[{"value":"/ Construct a new benchmark ID from a string function name and a parameter value.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":123980,"byte_end":124063,"line_start":407,"line_end":407,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124068,"byte_end":124071,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Note that the parameter value need not be the same as the parameter passed to your","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124076,"byte_end":124162,"line_start":409,"line_end":409,"column_start":5,"column_end":91}},{"value":"/ actual benchmark. For instance, you might have a benchmark that takes a 1MB string as","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124167,"byte_end":124256,"line_start":410,"line_end":410,"column_start":5,"column_end":94}},{"value":"/ input. It would be impractical to embed the whole string in the benchmark ID, so instead","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124261,"byte_end":124353,"line_start":411,"line_end":411,"column_start":5,"column_end":97}},{"value":"/ your parameter value might be a descriptive string like \"1MB Alphanumeric\".","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124358,"byte_end":124437,"line_start":412,"line_end":412,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124442,"byte_end":124445,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124450,"byte_end":124464,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124469,"byte_end":124476,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # use criterion::{BenchmarkId, Criterion};","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124481,"byte_end":124527,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ // A basic benchmark ID is typically constructed from a constant string and a simple","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124532,"byte_end":124620,"line_start":417,"line_end":417,"column_start":5,"column_end":93}},{"value":"/ // parameter","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124625,"byte_end":124641,"line_start":418,"line_end":418,"column_start":5,"column_end":21}},{"value":"/ let basic_id = BenchmarkId::new(\"my_id\", 5);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124646,"byte_end":124694,"line_start":419,"line_end":419,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124699,"byte_end":124702,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ // The function name can be a string","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124707,"byte_end":124747,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/ let function_name = \"test_string\".to_string();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124752,"byte_end":124802,"line_start":422,"line_end":422,"column_start":5,"column_end":55}},{"value":"/ let string_id = BenchmarkId::new(function_name, 12);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124807,"byte_end":124863,"line_start":423,"line_end":423,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124868,"byte_end":124871,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ // Benchmark IDs are passed to benchmark groups:","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124876,"byte_end":124928,"line_start":425,"line_end":425,"column_start":5,"column_end":57}},{"value":"/ let mut criterion = Criterion::default();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124933,"byte_end":124978,"line_start":426,"line_end":426,"column_start":5,"column_end":50}},{"value":"/ let mut group = criterion.benchmark_group(\"My Group\");","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":124983,"byte_end":125041,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/ // Generate a very large input","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125046,"byte_end":125080,"line_start":428,"line_end":428,"column_start":5,"column_end":39}},{"value":"/ let input : String = ::std::iter::repeat(\"X\").take(1024 * 1024).collect();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125085,"byte_end":125163,"line_start":429,"line_end":429,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125168,"byte_end":125171,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Note that we don't have to use the input as the parameter in the ID","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125176,"byte_end":125250,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ group.bench_with_input(BenchmarkId::new(\"Test long string\", \"1MB X's\"), &input, |b, i| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125255,"byte_end":125347,"line_start":432,"line_end":432,"column_start":5,"column_end":97}},{"value":"/     b.iter(|| i.len())","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125352,"byte_end":125378,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125383,"byte_end":125390,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125395,"byte_end":125402,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125846,"byte_end":125860,"line_start":448,"line_end":448,"column_start":12,"column_end":26},"name":"from_parameter","qualname":"<BenchmarkId>::from_parameter","value":"pub fn from_parameter<P: ::std::fmt::Display>(P) -> BenchmarkId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new benchmark ID from just a parameter value. Use this when benchmarking a\n single function with a variety of different inputs.\n","sig":null,"attributes":[{"value":"/ Construct a new benchmark ID from just a parameter value. Use this when benchmarking a","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125684,"byte_end":125774,"line_start":446,"line_end":446,"column_start":5,"column_end":95}},{"value":"/ single function with a variety of different inputs.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":125779,"byte_end":125834,"line_start":447,"line_end":447,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":239},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126446,"byte_end":126452,"line_start":471,"line_end":471,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::benchmark_group::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":243},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126640,"byte_end":126655,"line_start":477,"line_end":477,"column_start":11,"column_end":26},"name":"IntoBenchmarkId","qualname":"::benchmark_group::IntoBenchmarkId","value":"IntoBenchmarkId: private::Sealed","parent":null,"children":[{"krate":0,"index":244}],"decl_id":null,"docs":" Sealed trait which allows users to automatically convert strings to benchmark IDs.\n","sig":null,"attributes":[{"value":"/ Sealed trait which allows users to automatically convert strings to benchmark IDs.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126543,"byte_end":126629,"line_start":476,"line_end":476,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126682,"byte_end":126699,"line_start":478,"line_end":478,"column_start":8,"column_end":25},"name":"into_benchmark_id","qualname":"::benchmark_group::IntoBenchmarkId::into_benchmark_id","value":"pub fn into_benchmark_id(Self) -> BenchmarkId","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":538},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"measurement","qualname":"::measurement","value":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":551},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":569},{"krate":0,"index":571}],"decl_id":null,"docs":" This module defines a set of traits that can be used to plug different measurements (eg.\n Unix's Processor Time, CPU or GPU performance counters, etc.) into Criterion.rs. It also\n includes the [WallTime](struct.WallTime.html) struct which defines the default wall-clock time\n measurement.\n","sig":null,"attributes":[{"value":"! This module defines a set of traits that can be used to plug different measurements (eg.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":187488,"byte_end":187580,"line_start":1,"line_end":1,"column_start":1,"column_end":93}},{"value":"! Unix's Processor Time, CPU or GPU performance counters, etc.) into Criterion.rs. It also","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":187581,"byte_end":187673,"line_start":2,"line_end":2,"column_start":1,"column_end":93}},{"value":"! includes the [WallTime](struct.WallTime.html) struct which defines the default wall-clock time","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":187674,"byte_end":187772,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"! measurement.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":187773,"byte_end":187789,"line_start":4,"line_end":4,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":545},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188714,"byte_end":188728,"line_start":21,"line_end":21,"column_start":11,"column_end":25},"name":"ValueFormatter","qualname":"::measurement::ValueFormatter","value":"ValueFormatter","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"decl_id":null,"docs":" Trait providing functions to format measured values to string so that they can be displayed on\n the command line or in the reports. The functions of this trait take measured values in f64\n form; implementors can assume that the values are of the same scale as those produced by the\n associated [MeasuredValue](trait.MeasuredValue.html) (eg. if your measurement produces values in\n nanoseconds, the values passed to the formatter will be in nanoseconds).","sig":null,"attributes":[{"value":"/ Trait providing functions to format measured values to string so that they can be displayed on","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":187901,"byte_end":187999,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ the command line or in the reports. The functions of this trait take measured values in f64","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188000,"byte_end":188095,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ form; implementors can assume that the values are of the same scale as those produced by the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188096,"byte_end":188192,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ associated [MeasuredValue](trait.MeasuredValue.html) (eg. if your measurement produces values in","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188193,"byte_end":188293,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ nanoseconds, the values passed to the formatter will be in nanoseconds).","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188294,"byte_end":188370,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188371,"byte_end":188374,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Implementors are encouraged to format the values in a way that is intuitive for humans and","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188375,"byte_end":188469,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ uses the SI prefix system. For example, the format used by [WallTime](struct.Walltime.html)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188470,"byte_end":188565,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ can display the value in units ranging from picoseconds to seconds depending on the magnitude","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188566,"byte_end":188663,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ of the elapsed time in nanoseconds.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188664,"byte_end":188703,"line_start":20,"line_end":20,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188814,"byte_end":188826,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"format_value","qualname":"::measurement::ValueFormatter::format_value","value":"pub fn format_value(&Self, f64) -> String","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Format the value (with appropriate unit) and return it as a string.\n","sig":null,"attributes":[{"value":"/ Format the value (with appropriate unit) and return it as a string.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":188735,"byte_end":188806,"line_start":22,"line_end":22,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":189206,"byte_end":189223,"line_start":31,"line_end":31,"column_start":8,"column_end":25},"name":"format_throughput","qualname":"::measurement::ValueFormatter::format_throughput","value":"pub fn format_throughput(&Self, &Throughput, f64) -> String","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Format the value as a throughput measurement. The value represents the measurement value;\n the implementor will have to calculate bytes per second, iterations per cycle, etc.\n","sig":null,"attributes":[{"value":"/ Format the value as a throughput measurement. The value represents the measurement value;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":189013,"byte_end":189106,"line_start":29,"line_end":29,"column_start":5,"column_end":98}},{"value":"/ the implementor will have to calculate bytes per second, iterations per cycle, etc.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":189111,"byte_end":189198,"line_start":30,"line_end":30,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":189926,"byte_end":189938,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"scale_values","qualname":"::measurement::ValueFormatter::scale_values","value":"pub fn scale_values(&Self, f64, &mut [f64]) -> &'static str","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Scale the given values to some appropriate unit and return the unit string.","sig":null,"attributes":[{"value":"/ Scale the given values to some appropriate unit and return the unit string.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":189452,"byte_end":189531,"line_start":37,"line_end":37,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":189536,"byte_end":189539,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The given typical value should be used to choose the unit. This function may be called","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":189544,"byte_end":189634,"line_start":39,"line_end":39,"column_start":5,"column_end":95}},{"value":"/ multiple times with different datasets; the typical value will remain the same to ensure","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":189639,"byte_end":189731,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ that the units remain consistent within a graph. The typical value will not be NaN.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":189736,"byte_end":189823,"line_start":41,"line_end":41,"column_start":5,"column_end":92}},{"value":"/ Values will not contain NaN as input, and the transformed values must not contain NaN.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":189828,"byte_end":189918,"line_start":42,"line_end":42,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190574,"byte_end":190591,"line_start":52,"line_end":52,"column_start":8,"column_end":25},"name":"scale_throughputs","qualname":"::measurement::ValueFormatter::scale_throughputs","value":"pub fn scale_throughputs(&Self, f64, &Throughput, &mut [f64]) -> &'static str","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Convert the given measured values into throughput numbers based on the given throughput\n value, scale them to some appropriate unit, and return the unit string.","sig":null,"attributes":[{"value":"/ Convert the given measured values into throughput numbers based on the given throughput","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190008,"byte_end":190099,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ value, scale them to some appropriate unit, and return the unit string.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190104,"byte_end":190179,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190184,"byte_end":190187,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The given typical value should be used to choose the unit. This function may be called","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190192,"byte_end":190282,"line_start":48,"line_end":48,"column_start":5,"column_end":95}},{"value":"/ multiple times with different datasets; the typical value will remain the same to ensure","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190287,"byte_end":190379,"line_start":49,"line_end":49,"column_start":5,"column_end":97}},{"value":"/ that the units remain consistent within a graph. The typical value will not be NaN.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190384,"byte_end":190471,"line_start":50,"line_end":50,"column_start":5,"column_end":92}},{"value":"/ Values will not contain NaN as input, and the transformed values must not contain NaN.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190476,"byte_end":190566,"line_start":51,"line_end":51,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191045,"byte_end":191063,"line_start":64,"line_end":64,"column_start":8,"column_end":26},"name":"scale_for_machines","qualname":"::measurement::ValueFormatter::scale_for_machines","value":"pub fn scale_for_machines(&Self, &mut [f64]) -> &'static str","parent":{"krate":0,"index":545},"children":[],"decl_id":null,"docs":" Scale the values and return a unit string designed for machines.","sig":null,"attributes":[{"value":"/ Scale the values and return a unit string designed for machines.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190725,"byte_end":190793,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190798,"byte_end":190801,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ For example, this is used for the CSV file output. Implementations should modify the given","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190806,"byte_end":190900,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ values slice to apply the desired scaling (if any) and return a string representing the unit","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":190905,"byte_end":191001,"line_start":62,"line_end":62,"column_start":5,"column_end":101}},{"value":"/ the modified values are in.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191006,"byte_end":191037,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":551},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191660,"byte_end":191671,"line_start":76,"line_end":76,"column_start":11,"column_end":22},"name":"Measurement","qualname":"::measurement::Measurement","value":"Measurement","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"decl_id":null,"docs":" Trait for all types which define something Criterion.rs can measure. The only measurement\n currently provided is [WallTime](struct.WallTime.html), but third party crates or benchmarks\n may define more.","sig":null,"attributes":[{"value":"/ Trait for all types which define something Criterion.rs can measure. The only measurement","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191111,"byte_end":191204,"line_start":67,"line_end":67,"column_start":1,"column_end":94}},{"value":"/ currently provided is [WallTime](struct.WallTime.html), but third party crates or benchmarks","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191205,"byte_end":191301,"line_start":68,"line_end":68,"column_start":1,"column_end":97}},{"value":"/ may define more.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191302,"byte_end":191322,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191323,"byte_end":191326,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This trait defines two core methods, `start` and `end`. `start` is called at the beginning of","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191327,"byte_end":191424,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ a measurement to produce some intermediate value (for example, the wall-clock time at the start","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191425,"byte_end":191524,"line_start":72,"line_end":72,"column_start":1,"column_end":100}},{"value":"/ of that set of iterations) and `end` is called at the end of the measurement with the value","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191525,"byte_end":191620,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ returned by `start`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191621,"byte_end":191645,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191646,"byte_end":191649,"line_start":75,"line_end":75,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":552},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191910,"byte_end":191922,"line_start":80,"line_end":80,"column_start":10,"column_end":22},"name":"Intermediate","qualname":"::measurement::Measurement::Intermediate","value":"type Intermediate;","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" This type represents an intermediate value for the measurements. It will be produced by the\n start function and passed to the end function. An example might be the wall-clock time as\n of the `start` call.\n","sig":null,"attributes":[{"value":"/ This type represents an intermediate value for the measurements. It will be produced by the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191678,"byte_end":191773,"line_start":77,"line_end":77,"column_start":5,"column_end":100}},{"value":"/ start function and passed to the end function. An example might be the wall-clock time as","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191778,"byte_end":191871,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ of the `start` call.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191876,"byte_end":191900,"line_start":79,"line_end":79,"column_start":5,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":553},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192068,"byte_end":192073,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"name":"Value","qualname":"::measurement::Measurement::Value","value":"type Value;","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" This type is the measured value. An example might be the elapsed wall-clock time between the\n `start` and `end` calls.\n","sig":null,"attributes":[{"value":"/ This type is the measured value. An example might be the elapsed wall-clock time between the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":191929,"byte_end":192025,"line_start":82,"line_end":82,"column_start":5,"column_end":101}},{"value":"/ `start` and `end` calls.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192030,"byte_end":192058,"line_start":83,"line_end":83,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192151,"byte_end":192156,"line_start":87,"line_end":87,"column_start":8,"column_end":13},"name":"start","qualname":"::measurement::Measurement::start","value":"pub fn start(&Self) -> Self::Intermediate","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Criterion.rs will call this before iterating the benchmark.\n","sig":null,"attributes":[{"value":"/ Criterion.rs will call this before iterating the benchmark.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192080,"byte_end":192143,"line_start":86,"line_end":86,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192288,"byte_end":192291,"line_start":90,"line_end":90,"column_start":8,"column_end":11},"name":"end","qualname":"::measurement::Measurement::end","value":"pub fn end(&Self, Self::Intermediate) -> Self::Value","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Criterion.rs will call this after iterating the benchmark to get the measured value.\n","sig":null,"attributes":[{"value":"/ Criterion.rs will call this after iterating the benchmark to get the measured value.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192192,"byte_end":192280,"line_start":89,"line_end":89,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192548,"byte_end":192551,"line_start":94,"line_end":94,"column_start":8,"column_end":11},"name":"add","qualname":"::measurement::Measurement::add","value":"pub fn add(&Self, &Self::Value, &Self::Value) -> Self::Value","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Combine two values. Criterion.rs sometimes needs to perform measurements in multiple batches\n of iterations, so the value from one batch must be added to the sum of the previous batches.\n","sig":null,"attributes":[{"value":"/ Combine two values. Criterion.rs sometimes needs to perform measurements in multiple batches","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192343,"byte_end":192439,"line_start":92,"line_end":92,"column_start":5,"column_end":101}},{"value":"/ of iterations, so the value from one batch must be added to the sum of the previous batches.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192444,"byte_end":192540,"line_start":93,"line_end":93,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192705,"byte_end":192709,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"zero","qualname":"::measurement::Measurement::zero","value":"pub fn zero(&Self) -> Self::Value","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Return a \"zero\" value for the Value type which can be added to another value.\n","sig":null,"attributes":[{"value":"/ Return a \"zero\" value for the Value type which can be added to another value.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192616,"byte_end":192697,"line_start":96,"line_end":96,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192832,"byte_end":192838,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::measurement::Measurement::to_f64","value":"pub fn to_f64(&Self, &Self::Value) -> f64","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Converts the measured value to f64 so that it can be used in statistical analysis.\n","sig":null,"attributes":[{"value":"/ Converts the measured value to f64 so that it can be used in statistical analysis.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192738,"byte_end":192824,"line_start":99,"line_end":99,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192968,"byte_end":192977,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"formatter","qualname":"::measurement::Measurement::formatter","value":"pub fn formatter(&Self) -> &ValueFormatter","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Return a trait-object reference to the value formatter for this measurement.\n","sig":null,"attributes":[{"value":"/ Return a trait-object reference to the value formatter for this measurement.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":192880,"byte_end":192960,"line_start":102,"line_end":102,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":569},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":195685,"byte_end":195693,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"WallTime","qualname":"::measurement::WallTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" `WallTime` is the default measurement in Criterion.rs. It measures the elapsed time from the\n beginning of a series of iterations to the end.\n","sig":null,"attributes":[{"value":"/ `WallTime` is the default measurement in Criterion.rs. It measures the elapsed time from the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":195525,"byte_end":195621,"line_start":187,"line_end":187,"column_start":1,"column_end":97}},{"value":"/ beginning of a series of iterations to the end.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":195622,"byte_end":195673,"line_start":188,"line_end":188,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1103},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"profiler","qualname":"::profiler","value":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1110}],"decl_id":null,"docs":" This module provides an extension trait which allows in-process profilers\n to be hooked into the `--profile-time` argument at compile-time. Users of\n out-of-process profilers such as perf don't need to do anything special.\n","sig":null,"attributes":[{"value":"! This module provides an extension trait which allows in-process profilers","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":300876,"byte_end":300953,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! to be hooked into the `--profile-time` argument at compile-time. Users of","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":300954,"byte_end":301031,"line_start":2,"line_end":2,"column_start":1,"column_end":78}},{"value":"! out-of-process profilers such as perf don't need to do anything special.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301032,"byte_end":301108,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1105},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301285,"byte_end":301293,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Profiler","qualname":"::profiler::Profiler","value":"Profiler","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107}],"decl_id":null,"docs":" Extension trait for external crates to implement which provides start/stop\n hooks when profiling (but not when benchmarking) functions.\n","sig":null,"attributes":[{"value":"/ Extension trait for external crates to implement which provides start/stop","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301132,"byte_end":301210,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ hooks when profiling (but not when benchmarking) functions.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301211,"byte_end":301274,"line_start":8,"line_end":8,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301516,"byte_end":301531,"line_start":13,"line_end":13,"column_start":8,"column_end":23},"name":"start_profiling","qualname":"::profiler::Profiler::start_profiling","value":"pub fn start_profiling(&mut Self, &str, &Path)","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" This function is called when Criterion.rs starts profiling a particular\n benchmark. It provides the stringified benchmark ID and\n a path to a directory where the profiler can store its data.\n","sig":null,"attributes":[{"value":"/ This function is called when Criterion.rs starts profiling a particular","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301300,"byte_end":301375,"line_start":10,"line_end":10,"column_start":5,"column_end":80}},{"value":"/ benchmark. It provides the stringified benchmark ID and","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301380,"byte_end":301439,"line_start":11,"line_end":11,"column_start":5,"column_end":64}},{"value":"/ a path to a directory where the profiler can store its data.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301444,"byte_end":301508,"line_start":12,"line_end":12,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301798,"byte_end":301812,"line_start":18,"line_end":18,"column_start":8,"column_end":22},"name":"stop_profiling","qualname":"::profiler::Profiler::stop_profiling","value":"pub fn stop_profiling(&mut Self, &str, &Path)","parent":{"krate":0,"index":1105},"children":[],"decl_id":null,"docs":" This function is called after Criterion.rs stops profiling a particular\n benchmark. The benchmark ID and directory are the same as in the call\n to `start`, provided for convenience.\n","sig":null,"attributes":[{"value":"/ This function is called after Criterion.rs stops profiling a particular","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301591,"byte_end":301666,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ benchmark. The benchmark ID and directory are the same as in the call","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301671,"byte_end":301744,"line_start":16,"line_end":16,"column_start":5,"column_end":78}},{"value":"/ to `start`, provided for convenience.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301749,"byte_end":301790,"line_start":17,"line_end":17,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1108},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":302107,"byte_end":302123,"line_start":24,"line_end":24,"column_start":12,"column_end":28},"name":"ExternalProfiler","qualname":"::profiler::ExternalProfiler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy profiler implementation, representing cases where the profiler is\n an external process (eg. perftools, etc.) which do not require start/stop\n hooks. This implementation does nothing and is used as the default.\n","sig":null,"attributes":[{"value":"/ Dummy profiler implementation, representing cases where the profiler is","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301870,"byte_end":301945,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ an external process (eg. perftools, etc.) which do not require start/stop","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":301946,"byte_end":302023,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ hooks. This implementation does nothing and is used as the default.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":302024,"byte_end":302095,"line_start":23,"line_end":23,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":1397},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349462,"byte_end":349467,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Tuple","qualname":"::stats::tuple::Tuple","value":"Tuple: Sized","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399}],"decl_id":null,"docs":" Any tuple: `(A, B, ..)`\n","sig":null,"attributes":[{"value":"/ Any tuple: `(A, B, ..)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349424,"byte_end":349451,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1398},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349546,"byte_end":349559,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"Distributions","qualname":"::stats::tuple::Tuple::Distributions","value":"type Distributions: TupledDistributions<Item = Self>;","parent":{"krate":0,"index":1397},"children":[],"decl_id":null,"docs":" A tuple of distributions associated with this tuple\n","sig":null,"attributes":[{"value":"/ A tuple of distributions associated with this tuple","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349481,"byte_end":349536,"line_start":7,"line_end":7,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1399},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349659,"byte_end":349666,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Builder","qualname":"::stats::tuple::Tuple::Builder","value":"type Builder: TupledDistributionsBuilder<Item = Self>;","parent":{"krate":0,"index":1397},"children":[],"decl_id":null,"docs":" A tuple of vectors associated with this tuple\n","sig":null,"attributes":[{"value":"/ A tuple of vectors associated with this tuple","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349600,"byte_end":349649,"line_start":10,"line_end":10,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1400},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349793,"byte_end":349812,"line_start":15,"line_end":15,"column_start":11,"column_end":30},"name":"TupledDistributions","qualname":"::stats::tuple::TupledDistributions","value":"TupledDistributions: Sized","parent":null,"children":[{"krate":0,"index":1401}],"decl_id":null,"docs":" A tuple of distributions: `(Distribution<A>, Distribution<B>, ..)`\n","sig":null,"attributes":[{"value":"/ A tuple of distributions: `(Distribution<A>, Distribution<B>, ..)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349712,"byte_end":349782,"line_start":14,"line_end":14,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1401},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349905,"byte_end":349909,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"name":"Item","qualname":"::stats::tuple::TupledDistributions::Item","value":"type Item: Tuple<Distributions = Self>;","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":" A tuple that can be pushed/inserted into the tupled distributions\n","sig":null,"attributes":[{"value":"/ A tuple that can be pushed/inserted into the tupled distributions","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349826,"byte_end":349895,"line_start":16,"line_end":16,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1402},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350002,"byte_end":350028,"line_start":21,"line_end":21,"column_start":11,"column_end":37},"name":"TupledDistributionsBuilder","qualname":"::stats::tuple::TupledDistributionsBuilder","value":"TupledDistributionsBuilder: Sized","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407}],"decl_id":null,"docs":" A tuple of vecs used to build distributions.\n","sig":null,"attributes":[{"value":"/ A tuple of vecs used to build distributions.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349943,"byte_end":349991,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1403},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350121,"byte_end":350125,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::stats::tuple::TupledDistributionsBuilder::Item","value":"type Item: Tuple<Builder = Self>;","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":" A tuple that can be pushed/inserted into the tupled distributions\n","sig":null,"attributes":[{"value":"/ A tuple that can be pushed/inserted into the tupled distributions","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350042,"byte_end":350111,"line_start":22,"line_end":22,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350194,"byte_end":350197,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"new","qualname":"::stats::tuple::TupledDistributionsBuilder::new","value":"pub fn new(usize) -> Self","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":" Creates a new tuple of vecs\n","sig":null,"attributes":[{"value":"/ Creates a new tuple of vecs","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350155,"byte_end":350186,"line_start":25,"line_end":25,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350275,"byte_end":350279,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"push","qualname":"::stats::tuple::TupledDistributionsBuilder::push","value":"pub fn push(&mut Self, Self::Item)","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":" Push one element into each of the vecs\n","sig":null,"attributes":[{"value":"/ Push one element into each of the vecs","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350225,"byte_end":350267,"line_start":28,"line_end":28,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350407,"byte_end":350413,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"extend","qualname":"::stats::tuple::TupledDistributionsBuilder::extend","value":"pub fn extend(&mut Self, &mut Self)","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":" Append one tuple of vecs to this one, leaving the vecs in the other tuple empty\n","sig":null,"attributes":[{"value":"/ Append one tuple of vecs to this one, leaving the vecs in the other tuple empty","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350316,"byte_end":350399,"line_start":31,"line_end":31,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350519,"byte_end":350527,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"complete","qualname":"::stats::tuple::TupledDistributionsBuilder::complete","value":"pub fn complete(Self) -> <Self::Item as Tuple>::Distributions","parent":{"krate":0,"index":1402},"children":[],"decl_id":null,"docs":" Convert the tuple of vectors into a tuple of distributions\n","sig":null,"attributes":[{"value":"/ Convert the tuple of vectors into a tuple of distributions","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350449,"byte_end":350511,"line_start":34,"line_end":34,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1489},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":363995,"byte_end":364006,"line_start":5,"line_end":5,"column_start":12,"column_end":23},"name":"Percentiles","qualname":"::stats::univariate::percentiles::Percentiles","value":"","parent":null,"children":[],"decl_id":null,"docs":" A \"view\" into the percentiles of a sample\n","sig":null,"attributes":[{"value":"/ A \"view\" into the percentiles of a sample","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":363938,"byte_end":363983,"line_start":4,"line_end":4,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365125,"byte_end":365127,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"at","qualname":"<Percentiles<A>>::at","value":"pub fn at(&Self, A) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the percentile at `p`%","sig":null,"attributes":[{"value":"/ Returns the percentile at `p`%","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":364985,"byte_end":365019,"line_start":40,"line_end":40,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365024,"byte_end":365027,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365032,"byte_end":365044,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365049,"byte_end":365052,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Panics if `p` is outside the closed `[0, 100]` range","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365057,"byte_end":365113,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365384,"byte_end":365387,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"iqr","qualname":"<Percentiles<A>>::iqr","value":"pub fn iqr(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the interquartile range\n","sig":null,"attributes":[{"value":"/ Returns the interquartile range","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365337,"byte_end":365372,"line_start":55,"line_end":55,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365610,"byte_end":365616,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"median","qualname":"<Percentiles<A>>::median","value":"pub fn median(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the 50th percentile\n","sig":null,"attributes":[{"value":"/ Returns the 50th percentile","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365567,"byte_end":365598,"line_start":65,"line_end":65,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365751,"byte_end":365760,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"quartiles","qualname":"<Percentiles<A>>::quartiles","value":"pub fn quartiles(&Self) -> (A, A, A)","parent":null,"children":[],"decl_id":null,"docs":" Returns the 25th, 50th and 75th percentiles\n","sig":null,"attributes":[{"value":"/ Returns the 25th, 50th and 75th percentiles","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":365692,"byte_end":365739,"line_start":70,"line_end":70,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1529},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369668,"byte_end":369674,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Sample","qualname":"::stats::univariate::sample::Sample","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of data points drawn from a population","sig":null,"attributes":[{"value":"/ A collection of data points drawn from a population","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369492,"byte_end":369547,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369548,"byte_end":369551,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Invariants:","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369552,"byte_end":369567,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369568,"byte_end":369571,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - The sample contains at least 2 data points","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369572,"byte_end":369620,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/ - The sample contains no `NaN`s","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369621,"byte_end":369656,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370060,"byte_end":370063,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Sample<A>>::new","value":"pub fn new(&[A]) -> &Sample<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sample from an existing slice","sig":null,"attributes":[{"value":"/ Creates a new sample from an existing slice","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369808,"byte_end":369855,"line_start":22,"line_end":22,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369860,"byte_end":369863,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369868,"byte_end":369880,"line_start":24,"line_end":24,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369885,"byte_end":369888,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Panics if `slice` contains any `NaN` or if `slice` has less than two elements","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369893,"byte_end":369974,"line_start":26,"line_end":26,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370310,"byte_end":370313,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"max","qualname":"<Sample<A>>::max","value":"pub fn max(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the biggest element in the sample","sig":null,"attributes":[{"value":"/ Returns the biggest element in the sample","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370217,"byte_end":370262,"line_start":34,"line_end":34,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370267,"byte_end":370270,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370275,"byte_end":370298,"line_start":36,"line_end":36,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370707,"byte_end":370711,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"mean","qualname":"<Sample<A>>::mean","value":"pub fn mean(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the arithmetic average of the sample","sig":null,"attributes":[{"value":"/ Returns the arithmetic average of the sample","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370611,"byte_end":370659,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370664,"byte_end":370667,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370672,"byte_end":370695,"line_start":49,"line_end":49,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":371010,"byte_end":371024,"line_start":62,"line_end":62,"column_start":12,"column_end":26},"name":"median_abs_dev","qualname":"<Sample<A>>::median_abs_dev","value":"pub fn median_abs_dev(&Self, Option<A>) -> A where usize: cast::From<A, Output\n= Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the median absolute deviation","sig":null,"attributes":[{"value":"/ Returns the median absolute deviation","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370798,"byte_end":370839,"line_start":56,"line_end":56,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370844,"byte_end":370847,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The `median` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370852,"byte_end":370932,"line_start":58,"line_end":58,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370937,"byte_end":370940,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370945,"byte_end":370968,"line_start":60,"line_end":60,"column_start":5,"column_end":28}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":370973,"byte_end":370998,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":371766,"byte_end":371784,"line_start":81,"line_end":81,"column_start":12,"column_end":30},"name":"median_abs_dev_pct","qualname":"<Sample<A>>::median_abs_dev_pct","value":"pub fn median_abs_dev_pct(&Self) -> A where usize: cast::From<A, Output =\nResult<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the median absolute deviation as a percentage of the median","sig":null,"attributes":[{"value":"/ Returns the median absolute deviation as a percentage of the median","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":371617,"byte_end":371688,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":371693,"byte_end":371696,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":371701,"byte_end":371724,"line_start":79,"line_end":79,"column_start":5,"column_end":28}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":371729,"byte_end":371754,"line_start":80,"line_end":80,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372152,"byte_end":372155,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"min","qualname":"<Sample<A>>::min","value":"pub fn min(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest element in the sample","sig":null,"attributes":[{"value":"/ Returns the smallest element in the sample","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372058,"byte_end":372104,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372109,"byte_end":372112,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372117,"byte_end":372140,"line_start":94,"line_end":94,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372699,"byte_end":372710,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"percentiles","qualname":"<Sample<A>>::percentiles","value":"pub fn percentiles(&Self) -> Percentiles<A> where usize: cast::From<A, Output\n= Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a \"view\" into the percentiles of the sample","sig":null,"attributes":[{"value":"/ Returns a \"view\" into the percentiles of the sample","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372453,"byte_end":372508,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372513,"byte_end":372516,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This \"view\" makes consecutive computations of percentiles much faster (`O(1)`)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372521,"byte_end":372603,"line_start":107,"line_end":107,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372608,"byte_end":372611,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(N log N) where N = length`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372616,"byte_end":372657,"line_start":109,"line_end":109,"column_start":5,"column_end":46}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":372662,"byte_end":372687,"line_start":110,"line_end":110,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373603,"byte_end":373610,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"std_dev","qualname":"<Sample<A>>::std_dev","value":"pub fn std_dev(&Self, Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the standard deviation of the sample","sig":null,"attributes":[{"value":"/ Returns the standard deviation of the sample","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373416,"byte_end":373464,"line_start":136,"line_end":136,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373469,"byte_end":373472,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ The `mean` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373477,"byte_end":373555,"line_start":138,"line_end":138,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373560,"byte_end":373563,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373568,"byte_end":373591,"line_start":140,"line_end":140,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373793,"byte_end":373804,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"std_dev_pct","qualname":"<Sample<A>>::std_dev_pct","value":"pub fn std_dev_pct(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the standard deviation as a percentage of the mean","sig":null,"attributes":[{"value":"/ Returns the standard deviation as a percentage of the mean","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373683,"byte_end":373745,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373750,"byte_end":373753,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373758,"byte_end":373781,"line_start":147,"line_end":147,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374077,"byte_end":374080,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"sum","qualname":"<Sample<A>>::sum","value":"pub fn sum(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the sum of all the elements of the sample","sig":null,"attributes":[{"value":"/ Returns the sum of all the elements of the sample","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":373976,"byte_end":374029,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374034,"byte_end":374037,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374042,"byte_end":374065,"line_start":158,"line_end":158,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374235,"byte_end":374236,"line_start":166,"line_end":166,"column_start":12,"column_end":13},"name":"t","qualname":"<Sample<A>>::t","value":"pub fn t(&Self, &Sample<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the t score between these two samples","sig":null,"attributes":[{"value":"/ Returns the t score between these two samples","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374138,"byte_end":374187,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374192,"byte_end":374195,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374200,"byte_end":374223,"line_start":165,"line_end":165,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374775,"byte_end":374778,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"var","qualname":"<Sample<A>>::var","value":"pub fn var(&Self, Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the variance of the sample","sig":null,"attributes":[{"value":"/ Returns the variance of the sample","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374598,"byte_end":374636,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374641,"byte_end":374644,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The `mean` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374649,"byte_end":374727,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374732,"byte_end":374735,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":374740,"byte_end":374763,"line_start":181,"line_end":181,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":375364,"byte_end":375373,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"bootstrap","qualname":"<Sample<A>>::bootstrap","value":"pub fn bootstrap<T, S>(&Self, usize, S) -> T::Distributions where\nS: Fn(&Sample<A>) -> T + Sync, T: Tuple + Send, T::Distributions: Send,\nT::Builder: Send","parent":null,"children":[],"decl_id":null,"docs":" Returns the bootstrap distributions of the parameters estimated by the 1-sample statistic","sig":null,"attributes":[{"value":"/ Returns the bootstrap distributions of the parameters estimated by the 1-sample statistic","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":375160,"byte_end":375253,"line_start":197,"line_end":197,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":375258,"byte_end":375261,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ - Multi-threaded","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":375266,"byte_end":375286,"line_start":199,"line_end":199,"column_start":5,"column_end":25}},{"value":"/ - Time: `O(nresamples)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":375291,"byte_end":375318,"line_start":200,"line_end":200,"column_start":5,"column_end":32}},{"value":"/ - Memory: `O(nresamples)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":375323,"byte_end":375352,"line_start":201,"line_end":201,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3085},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386363,"byte_end":386376,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"LabeledSample","qualname":"::stats::univariate::outliers::tukey::LabeledSample","value":"LabeledSample {  }","parent":null,"children":[{"krate":0,"index":3088},{"krate":0,"index":3089}],"decl_id":null,"docs":" A classified/labeled sample.","sig":null,"attributes":[{"value":"/ A classified/labeled sample.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":385979,"byte_end":386011,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386012,"byte_end":386015,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The labeled data can be accessed using the indexing operator. The order of the data points is","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386016,"byte_end":386113,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ retained.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386114,"byte_end":386127,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386128,"byte_end":386131,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ NOTE: Due to limitations in the indexing traits, only the label is returned. Once the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386132,"byte_end":386221,"line_start":54,"line_end":54,"column_start":1,"column_end":90}},{"value":"/ `IndexGet` trait lands in stdlib, the indexing operation will return a `(data_point, label)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386222,"byte_end":386318,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ pair.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386319,"byte_end":386328,"line_start":56,"line_end":56,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386688,"byte_end":386693,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"count","qualname":"<LabeledSample>::count","value":"pub fn count(&Self) -> (usize, usize, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of data points per label","sig":null,"attributes":[{"value":"/ Returns the number of data points per label","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386521,"byte_end":386568,"line_start":70,"line_end":70,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386573,"byte_end":386576,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386581,"byte_end":386604,"line_start":72,"line_end":72,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":387409,"byte_end":387415,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"fences","qualname":"<LabeledSample>::fences","value":"pub fn fences(&Self) -> (A, A, A, A)","parent":null,"children":[],"decl_id":null,"docs":" Returns the fences used to classify the outliers\n","sig":null,"attributes":[{"value":"/ Returns the fences used to classify the outliers","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":387345,"byte_end":387397,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":387529,"byte_end":387533,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"iter","qualname":"<LabeledSample>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labeled data\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the labeled data","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":387472,"byte_end":387517,"line_start":105,"line_end":105,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1663},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":388912,"byte_end":388916,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stats::univariate::outliers::tukey::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1667}],"decl_id":null,"docs":" Iterator over the labeled data\n","sig":null,"attributes":[{"value":"/ Iterator over the labeled data","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":388866,"byte_end":388900,"line_start":169,"line_end":169,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1676},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389848,"byte_end":389856,"line_start":213,"line_end":213,"column_start":5,"column_end":13},"name":"HighMild","qualname":"::stats::univariate::outliers::tukey::Label::HighMild","value":"Label::HighMild","parent":{"krate":0,"index":1675},"children":[],"decl_id":null,"docs":" A \"mild\" outlier in the \"high\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"mild\" outlier in the \"high\" spectrum","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389800,"byte_end":389843,"line_start":212,"line_end":212,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1678},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389912,"byte_end":389922,"line_start":215,"line_end":215,"column_start":5,"column_end":15},"name":"HighSevere","qualname":"::stats::univariate::outliers::tukey::Label::HighSevere","value":"Label::HighSevere","parent":{"krate":0,"index":1675},"children":[],"decl_id":null,"docs":" A \"severe\" outlier in the \"high\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"severe\" outlier in the \"high\" spectrum","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389862,"byte_end":389907,"line_start":214,"line_end":214,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1680},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389975,"byte_end":389982,"line_start":217,"line_end":217,"column_start":5,"column_end":12},"name":"LowMild","qualname":"::stats::univariate::outliers::tukey::Label::LowMild","value":"Label::LowMild","parent":{"krate":0,"index":1675},"children":[],"decl_id":null,"docs":" A \"mild\" outlier in the \"low\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"mild\" outlier in the \"low\" spectrum","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389928,"byte_end":389970,"line_start":216,"line_end":216,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1682},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390037,"byte_end":390046,"line_start":219,"line_end":219,"column_start":5,"column_end":14},"name":"LowSevere","qualname":"::stats::univariate::outliers::tukey::Label::LowSevere","value":"Label::LowSevere","parent":{"krate":0,"index":1675},"children":[],"decl_id":null,"docs":" A \"severe\" outlier in the \"low\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"severe\" outlier in the \"low\" spectrum","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389988,"byte_end":390032,"line_start":218,"line_end":218,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1684},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390080,"byte_end":390092,"line_start":221,"line_end":221,"column_start":5,"column_end":17},"name":"NotAnOutlier","qualname":"::stats::univariate::outliers::tukey::Label::NotAnOutlier","value":"Label::NotAnOutlier","parent":{"krate":0,"index":1675},"children":[],"decl_id":null,"docs":" A normal data point\n","sig":null,"attributes":[{"value":"/ A normal data point","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390052,"byte_end":390075,"line_start":220,"line_end":220,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":1675},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389788,"byte_end":389793,"line_start":211,"line_end":211,"column_start":10,"column_end":15},"name":"Label","qualname":"::stats::univariate::outliers::tukey::Label","value":"pub enum Label {\n\n    /// A \"mild\" outlier in the \"high\" spectrum\n    HighMild,\n\n    /// A \"severe\" outlier in the \"high\" spectrum\n    HighSevere,\n\n    /// A \"mild\" outlier in the \"low\" spectrum\n    LowMild,\n\n    /// A \"severe\" outlier in the \"low\" spectrum\n    LowSevere,\n\n    /// A normal data point\n    NotAnOutlier,\n}","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1682},{"krate":0,"index":1684}],"decl_id":null,"docs":" Labels used to classify outliers\n","sig":null,"attributes":[{"value":"/ Labels used to classify outliers","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389742,"byte_end":389778,"line_start":210,"line_end":210,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390184,"byte_end":390191,"line_start":226,"line_end":226,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Label>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point has an \"unusually\" high value\n","sig":null,"attributes":[{"value":"/ Checks if the data point has an \"unusually\" high value","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390114,"byte_end":390172,"line_start":225,"line_end":225,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390390,"byte_end":390397,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"is_mild","qualname":"<Label>::is_mild","value":"pub fn is_mild(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as a \"mild\" outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as a \"mild\" outlier","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390319,"byte_end":390378,"line_start":233,"line_end":233,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390591,"byte_end":390597,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"is_low","qualname":"<Label>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point has an \"unusually\" low value\n","sig":null,"attributes":[{"value":"/ Checks if the data point has an \"unusually\" low value","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390522,"byte_end":390579,"line_start":241,"line_end":241,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390788,"byte_end":390798,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"is_outlier","qualname":"<Label>::is_outlier","value":"pub fn is_outlier(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as an outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as an outlier","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390723,"byte_end":390776,"line_start":249,"line_end":249,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390990,"byte_end":390999,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"is_severe","qualname":"<Label>::is_severe","value":"pub fn is_severe(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as a \"severe\" outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as a \"severe\" outlier","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390917,"byte_end":390978,"line_start":257,"line_end":257,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1715},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/float.rs","byte_start":391956,"byte_end":391961,"line_start":9,"line_end":9,"column_start":11,"column_end":16},"name":"Float","qualname":"::stats::float::Float","value":"Float: float::Float + From<usize, Output = Self> + From<f32, Output = Self> + Sync +\nSend","parent":null,"children":[],"decl_id":null,"docs":" This is an extension of `num_traits::float::Float` that adds safe\n casting and Sync + Send. Once `num_traits` has these features this\n can be removed.\n","sig":null,"attributes":[{"value":"/ This is an extension of `num_traits::float::Float` that adds safe","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/float.rs","byte_start":391785,"byte_end":391854,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ casting and Sync + Send. Once `num_traits` has these features this","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/float.rs","byte_start":391855,"byte_end":391925,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ can be removed.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/float.rs","byte_start":391926,"byte_end":391945,"line_start":8,"line_end":8,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3101},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":337720,"byte_end":337732,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"Distribution","qualname":"::stats::Distribution","value":"","parent":null,"children":[],"decl_id":null,"docs":" The bootstrap distribution of some parameter\n","sig":null,"attributes":[{"value":"/ The bootstrap distribution of some parameter","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":337643,"byte_end":337691,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":337857,"byte_end":337861,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"from","qualname":"<Distribution<A>>::from","value":"pub fn from(Box<[A]>) -> Distribution<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a distribution from the given values\n","sig":null,"attributes":[{"value":"/ Create a distribution from the given values","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":337798,"byte_end":337845,"line_start":32,"line_end":32,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":338139,"byte_end":338158,"line_start":42,"line_end":42,"column_start":12,"column_end":31},"name":"confidence_interval","qualname":"<Distribution<A>>::confidence_interval","value":"pub fn confidence_interval(&Self, A) -> (A, A) where usize: cast::From<A,\nOutput = Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the confidence interval of the population parameter using percentiles","sig":null,"attributes":[{"value":"/ Computes the confidence interval of the population parameter using percentiles","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":337941,"byte_end":338023,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":338028,"byte_end":338031,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":338036,"byte_end":338048,"line_start":39,"line_end":39,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":338053,"byte_end":338056,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Panics if the `confidence_level` is not in the `(0, 1)` range.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":338061,"byte_end":338127,"line_start":41,"line_end":41,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":338821,"byte_end":338828,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"p_value","qualname":"<Distribution<A>>::p_value","value":"pub fn p_value(&Self, A, &Tails) -> A","parent":null,"children":[],"decl_id":null,"docs":" Computes the \"likelihood\" of seeing the value `t` or \"more extreme\" values in the\n distribution.\n","sig":null,"attributes":[{"value":"/ Computes the \"likelihood\" of seeing the value `t` or \"more extreme\" values in the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":338702,"byte_end":338787,"line_start":61,"line_end":61,"column_start":5,"column_end":90}},{"value":"/ distribution.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":338792,"byte_end":338809,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1743},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":339444,"byte_end":339447,"line_start":91,"line_end":91,"column_start":5,"column_end":8},"name":"One","qualname":"::stats::Tails::One","value":"Tails::One","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" One tailed test\n","sig":null,"attributes":[{"value":"/ One tailed test","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":339420,"byte_end":339439,"line_start":90,"line_end":90,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1745},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":339477,"byte_end":339480,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"Two","qualname":"::stats::Tails::Two","value":"Tails::Two","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Two tailed test\n","sig":null,"attributes":[{"value":"/ Two tailed test","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":339453,"byte_end":339472,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1742},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":339408,"byte_end":339413,"line_start":89,"line_end":89,"column_start":10,"column_end":15},"name":"Tails","qualname":"::stats::Tails","value":"pub enum Tails {\n\n    /// One tailed test\n    One,\n\n    /// Two tailed test\n    Two,\n}","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1745}],"decl_id":null,"docs":" Number of tails for significance testing\n","sig":null,"attributes":[{"value":"/ Number of tails for significance testing","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":339354,"byte_end":339398,"line_start":88,"line_end":88,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1802},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4544,"byte_end":4553,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"black_box","qualname":"::black_box","value":"pub fn black_box<T>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A function that is opaque to the optimizer, used to prevent the compiler from\n optimizing away computations in a benchmark.","sig":null,"attributes":[{"value":"/ A function that is opaque to the optimizer, used to prevent the compiler from","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4230,"byte_end":4311,"line_start":145,"line_end":145,"column_start":1,"column_end":82}},{"value":"/ optimizing away computations in a benchmark.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4312,"byte_end":4360,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4361,"byte_end":4364,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This variant is stable-compatible, but it may cause some performance overhead","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4365,"byte_end":4446,"line_start":148,"line_end":148,"column_start":1,"column_end":82}},{"value":"/ or fail to prevent code from being eliminated.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4447,"byte_end":4497,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"cfg(not(feature = \"real_blackbox\"))","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4498,"byte_end":4536,"line_start":150,"line_end":150,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4903,"byte_end":4906,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"Fun","qualname":"::Fun","value":"Fun {  }","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1808}],"decl_id":null,"docs":" Representing a function to benchmark together with a name of that function.\n Used together with `bench_functions` to represent one out of multiple functions\n under benchmark.\n","sig":null,"attributes":[{"value":"/ Representing a function to benchmark together with a name of that function.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4692,"byte_end":4771,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ Used together with `bench_functions` to represent one out of multiple functions","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4772,"byte_end":4855,"line_start":160,"line_end":160,"column_start":1,"column_end":84}},{"value":"/ under benchmark.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":4856,"byte_end":4876,"line_start":161,"line_end":161,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5157,"byte_end":5160,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<Fun<I, M>>::new","value":"pub fn new<F>(&str, F) -> Fun<I, M> where F: FnMut(&mut Bencher<, M>, &I) ->\n() + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Fun` given a name and a closure\n","sig":null,"attributes":[{"value":"/ Create a new `Fun` given a name and a closure","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5096,"byte_end":5145,"line_start":172,"line_end":172,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3153},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7678,"byte_end":7688,"line_start":219,"line_end":219,"column_start":5,"column_end":15},"name":"SmallInput","qualname":"::BatchSize::SmallInput","value":"BatchSize::SmallInput","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" `SmallInput` indicates that the input to the benchmark routine (the value returned from\n the setup routine) is small enough that millions of values can be safely held in memory.\n Always prefer `SmallInput` unless the benchmark is using too much memory.","sig":null,"attributes":[{"value":"/ `SmallInput` indicates that the input to the benchmark routine (the value returned from","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7203,"byte_end":7294,"line_start":213,"line_end":213,"column_start":5,"column_end":96}},{"value":"/ the setup routine) is small enough that millions of values can be safely held in memory.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7299,"byte_end":7391,"line_start":214,"line_end":214,"column_start":5,"column_end":97}},{"value":"/ Always prefer `SmallInput` unless the benchmark is using too much memory.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7396,"byte_end":7473,"line_start":215,"line_end":215,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7478,"byte_end":7481,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `SmallInput` is on the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7486,"byte_end":7580,"line_start":217,"line_end":217,"column_start":5,"column_end":99}},{"value":"/ order of 500 picoseconds. This is presented as a rough guide; your results may vary.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7585,"byte_end":7673,"line_start":218,"line_end":218,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3155},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8105,"byte_end":8115,"line_start":227,"line_end":227,"column_start":5,"column_end":15},"name":"LargeInput","qualname":"::BatchSize::LargeInput","value":"BatchSize::LargeInput","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" `LargeInput` indicates that the input to the benchmark routine or the value returned from\n that routine is large. This will reduce the memory usage but increase the measurement\n overhead.","sig":null,"attributes":[{"value":"/ `LargeInput` indicates that the input to the benchmark routine or the value returned from","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7695,"byte_end":7788,"line_start":221,"line_end":221,"column_start":5,"column_end":98}},{"value":"/ that routine is large. This will reduce the memory usage but increase the measurement","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7793,"byte_end":7882,"line_start":222,"line_end":222,"column_start":5,"column_end":94}},{"value":"/ overhead.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7887,"byte_end":7900,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7905,"byte_end":7908,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `LargeInput` is on the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7913,"byte_end":8007,"line_start":225,"line_end":225,"column_start":5,"column_end":99}},{"value":"/ order of 750 picoseconds. This is presented as a rough guide; your results may vary.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8012,"byte_end":8100,"line_start":226,"line_end":226,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3157},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8681,"byte_end":8693,"line_start":237,"line_end":237,"column_start":5,"column_end":17},"name":"PerIteration","qualname":"::BatchSize::PerIteration","value":"BatchSize::PerIteration","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" `PerIteration` indicates that the input to the benchmark routine or the value returned from\n that routine is extremely large or holds some limited resource, such that holding many values\n in memory at once is infeasible. This provides the worst measurement overhead, but the\n lowest memory usage.","sig":null,"attributes":[{"value":"/ `PerIteration` indicates that the input to the benchmark routine or the value returned from","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8122,"byte_end":8217,"line_start":229,"line_end":229,"column_start":5,"column_end":100}},{"value":"/ that routine is extremely large or holds some limited resource, such that holding many values","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8222,"byte_end":8319,"line_start":230,"line_end":230,"column_start":5,"column_end":102}},{"value":"/ in memory at once is infeasible. This provides the worst measurement overhead, but the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8324,"byte_end":8414,"line_start":231,"line_end":231,"column_start":5,"column_end":95}},{"value":"/ lowest memory usage.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8419,"byte_end":8443,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8448,"byte_end":8451,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `PerIteration` is on the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8456,"byte_end":8552,"line_start":234,"line_end":234,"column_start":5,"column_end":101}},{"value":"/ order of 350 nanoseconds or 350,000 picoseconds. This is presented as a rough guide; your","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8557,"byte_end":8650,"line_start":235,"line_end":235,"column_start":5,"column_end":98}},{"value":"/ results may vary.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8655,"byte_end":8676,"line_start":236,"line_end":236,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3159},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9158,"byte_end":9168,"line_start":244,"line_end":244,"column_start":5,"column_end":15},"name":"NumBatches","qualname":"::BatchSize::NumBatches","value":"BatchSize::NumBatches(u64)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" `NumBatches` will attempt to divide the iterations up into a given number of batches.\n A larger number of batches (and thus smaller batches) will reduce memory usage but increase\n measurement overhead. This allows the user to choose their own tradeoff between memory usage\n and measurement overhead, but care must be taken in tuning the number of batches. Most\n benchmarks should use `SmallInput` or `LargeInput` instead.\n","sig":null,"attributes":[{"value":"/ `NumBatches` will attempt to divide the iterations up into a given number of batches.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8700,"byte_end":8789,"line_start":239,"line_end":239,"column_start":5,"column_end":94}},{"value":"/ A larger number of batches (and thus smaller batches) will reduce memory usage but increase","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8794,"byte_end":8889,"line_start":240,"line_end":240,"column_start":5,"column_end":100}},{"value":"/ measurement overhead. This allows the user to choose their own tradeoff between memory usage","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8894,"byte_end":8990,"line_start":241,"line_end":241,"column_start":5,"column_end":101}},{"value":"/ and measurement overhead, but care must be taken in tuning the number of batches. Most","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":8995,"byte_end":9085,"line_start":242,"line_end":242,"column_start":5,"column_end":95}},{"value":"/ benchmarks should use `SmallInput` or `LargeInput` instead.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9090,"byte_end":9153,"line_start":243,"line_end":243,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3162},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9597,"byte_end":9610,"line_start":251,"line_end":251,"column_start":5,"column_end":18},"name":"NumIterations","qualname":"::BatchSize::NumIterations","value":"BatchSize::NumIterations(u64)","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":" `NumIterations` fixes the batch size to a constant number, specified by the user. This\n allows the user to choose their own tradeoff between overhead and memory usage, but care must\n be taken in tuning the batch size. In general, the measurement overhead of NumIterations\n will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or\n `LargeInput` instead.\n","sig":null,"attributes":[{"value":"/ `NumIterations` fixes the batch size to a constant number, specified by the user. This","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9180,"byte_end":9270,"line_start":246,"line_end":246,"column_start":5,"column_end":95}},{"value":"/ allows the user to choose their own tradeoff between overhead and memory usage, but care must","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9275,"byte_end":9372,"line_start":247,"line_end":247,"column_start":5,"column_end":102}},{"value":"/ be taken in tuning the batch size. In general, the measurement overhead of NumIterations","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9377,"byte_end":9469,"line_start":248,"line_end":248,"column_start":5,"column_end":97}},{"value":"/ will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9474,"byte_end":9562,"line_start":249,"line_end":249,"column_start":5,"column_end":93}},{"value":"/ `LargeInput` instead.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9567,"byte_end":9592,"line_start":250,"line_end":250,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3165},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9641,"byte_end":9656,"line_start":254,"line_end":254,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::BatchSize::__NonExhaustive","value":"BatchSize::__NonExhaustive","parent":{"krate":0,"index":3152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3152},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7187,"byte_end":7196,"line_start":212,"line_end":212,"column_start":10,"column_end":19},"name":"BatchSize","qualname":"::BatchSize","value":"pub enum BatchSize {\n\n    /// `SmallInput` indicates that the input to the benchmark routine (the value returned from\n    /// the setup routine) is small enough that millions of values can be safely held in memory.\n    /// Always prefer `SmallInput` unless the benchmark is using too much memory.\n    ///\n    /// In testing, the maximum measurement overhead from benchmarking with `SmallInput` is on the\n    /// order of 500 picoseconds. This is presented as a rough guide; your results may vary.\n    SmallInput,\n\n    /// `LargeInput` indicates that the input to the benchmark routine or the value returned from\n    /// that routine is large. This will reduce the memory usage but increase the measurement\n    /// overhead.\n    ///\n    /// In testing, the maximum measurement overhead from benchmarking with `LargeInput` is on the\n    /// order of 750 picoseconds. This is presented as a rough guide; your results may vary.\n    LargeInput,\n\n    /// `PerIteration` indicates that the input to the benchmark routine or the value returned from\n    /// that routine is extremely large or holds some limited resource, such that holding many values\n    /// in memory at once is infeasible. This provides the worst measurement overhead, but the\n    /// lowest memory usage.\n    ///\n    /// In testing, the maximum measurement overhead from benchmarking with `PerIteration` is on the\n    /// order of 350 nanoseconds or 350,000 picoseconds. This is presented as a rough guide; your\n    /// results may vary.\n    PerIteration,\n\n    /// `NumBatches` will attempt to divide the iterations up into a given number of batches.\n    /// A larger number of batches (and thus smaller batches) will reduce memory usage but increase\n    /// measurement overhead. This allows the user to choose their own tradeoff between memory usage\n    /// and measurement overhead, but care must be taken in tuning the number of batches. Most\n    /// benchmarks should use `SmallInput` or `LargeInput` instead.\n    NumBatches(u64),\n\n    /// `NumIterations` fixes the batch size to a constant number, specified by the user. This\n    /// allows the user to choose their own tradeoff between overhead and memory usage, but care must\n    /// be taken in tuning the batch size. In general, the measurement overhead of NumIterations\n    /// will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or\n    /// `LargeInput` instead.\n    NumIterations(u64),\n\n    #[doc(hidden)]\n    __NonExhaustive,\n}","parent":null,"children":[{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3162},{"krate":0,"index":3165}],"decl_id":null,"docs":" Argument to [`Bencher::iter_batched`](struct.Bencher.html#method.iter_batched) and\n [`Bencher::iter_batched_ref`](struct.Bencher.html#method.iter_batched_ref) which controls the\n batch size.","sig":null,"attributes":[{"value":"/ Argument to [`Bencher::iter_batched`](struct.Bencher.html#method.iter_batched) and","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5495,"byte_end":5581,"line_start":189,"line_end":189,"column_start":1,"column_end":87}},{"value":"/ [`Bencher::iter_batched_ref`](struct.Bencher.html#method.iter_batched_ref) which controls the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5582,"byte_end":5679,"line_start":190,"line_end":190,"column_start":1,"column_end":98}},{"value":"/ batch size.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5680,"byte_end":5695,"line_start":191,"line_end":191,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5696,"byte_end":5699,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, almost all benchmarks should use `SmallInput`. If the input or the result","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5700,"byte_end":5797,"line_start":193,"line_end":193,"column_start":1,"column_end":98}},{"value":"/ of the benchmark routine is large enough that `SmallInput` causes out-of-memory errors,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5798,"byte_end":5889,"line_start":194,"line_end":194,"column_start":1,"column_end":92}},{"value":"/ `LargeInput` can be used to reduce memory usage at the cost of increasing the measurement","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5890,"byte_end":5983,"line_start":195,"line_end":195,"column_start":1,"column_end":94}},{"value":"/ overhead. If the input or the result is extremely large (or if it holds some","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5984,"byte_end":6064,"line_start":196,"line_end":196,"column_start":1,"column_end":81}},{"value":"/ limited external resource like a file handle), `PerIteration` will set the number of iterations","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6065,"byte_end":6164,"line_start":197,"line_end":197,"column_start":1,"column_end":100}},{"value":"/ per batch to exactly one. `PerIteration` can increase the measurement overhead substantially","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6165,"byte_end":6261,"line_start":198,"line_end":198,"column_start":1,"column_end":97}},{"value":"/ and should be avoided wherever possible.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6262,"byte_end":6306,"line_start":199,"line_end":199,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6307,"byte_end":6310,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Each value lists an estimate of the measurement overhead. This is intended as a rough guide","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6311,"byte_end":6406,"line_start":201,"line_end":201,"column_start":1,"column_end":96}},{"value":"/ to assist in choosing an option, it should not be relied upon. In particular, it is not valid","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6407,"byte_end":6504,"line_start":202,"line_end":202,"column_start":1,"column_end":98}},{"value":"/ to subtract the listed overhead from the measurement and assume that the result represents the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6505,"byte_end":6603,"line_start":203,"line_end":203,"column_start":1,"column_end":99}},{"value":"/ true runtime of a function. The actual measurement overhead for your specific benchmark depends","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6604,"byte_end":6703,"line_start":204,"line_end":204,"column_start":1,"column_end":100}},{"value":"/ on the details of the function you're benchmarking and the hardware and operating","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6704,"byte_end":6789,"line_start":205,"line_end":205,"column_start":1,"column_end":86}},{"value":"/ system running the benchmark.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6790,"byte_end":6823,"line_start":206,"line_end":206,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6824,"byte_end":6827,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ With that said, if the runtime of your function is small relative to the measurement overhead","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6828,"byte_end":6925,"line_start":208,"line_end":208,"column_start":1,"column_end":98}},{"value":"/ it will be difficult to take accurate measurements. In this situation, the best option is to use","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":6926,"byte_end":7026,"line_start":209,"line_end":209,"column_start":1,"column_end":101}},{"value":"/ [`Bencher::iter`](struct.Bencher.html#method.iter) which has next-to-zero measurement overhead.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":7027,"byte_end":7126,"line_start":210,"line_end":210,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":1816},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":11682,"byte_end":11689,"line_start":291,"line_end":291,"column_start":12,"column_end":19},"name":"Bencher","qualname":"::Bencher","value":"Bencher {  }","parent":null,"children":[{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823}],"decl_id":null,"docs":" Timer struct used to iterate a benchmarked function and measure the runtime.","sig":null,"attributes":[{"value":"/ Timer struct used to iterate a benchmarked function and measure the runtime.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":10556,"byte_end":10636,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":10637,"byte_end":10640,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ This struct provides different timing loops as methods. Each timing loop provides a different","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":10641,"byte_end":10738,"line_start":277,"line_end":277,"column_start":1,"column_end":98}},{"value":"/ way to time a routine and each has advantages and disadvantages.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":10739,"byte_end":10807,"line_start":278,"line_end":278,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":10808,"byte_end":10811,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ * If you want to do the iteration and measurement yourself (eg. passing the iteration count","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":10812,"byte_end":10907,"line_start":280,"line_end":280,"column_start":1,"column_end":96}},{"value":"/   to a separate process), use `iter_custom`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":10908,"byte_end":10956,"line_start":281,"line_end":281,"column_start":1,"column_end":49}},{"value":"/ * If your routine requires no per-iteration setup and returns a value with an expensive `drop`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":10957,"byte_end":11055,"line_start":282,"line_end":282,"column_start":1,"column_end":99}},{"value":"/   method, use `iter_with_large_drop`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":11056,"byte_end":11097,"line_start":283,"line_end":283,"column_start":1,"column_end":42}},{"value":"/ * If your routine requires some per-iteration setup that shouldn't be timed, use `iter_batched`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":11098,"byte_end":11197,"line_start":284,"line_end":284,"column_start":1,"column_end":100}},{"value":"/   or `iter_batched_ref`. See [`BatchSize`](enum.BatchSize.html) for a discussion of batch sizes.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":11198,"byte_end":11298,"line_start":285,"line_end":285,"column_start":1,"column_end":101}},{"value":"/   If the setup value implements `Drop` and you don't want to include the `drop` time in the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":11299,"byte_end":11394,"line_start":286,"line_end":286,"column_start":1,"column_end":96}},{"value":"/   measurement, use `iter_batched_ref`, otherwise use `iter_batched`. These methods are also","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":11395,"byte_end":11490,"line_start":287,"line_end":287,"column_start":1,"column_end":96}},{"value":"/   suitable for benchmarking routines which return a value with an expensive `drop` method,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":11491,"byte_end":11585,"line_start":288,"line_end":288,"column_start":1,"column_end":95}},{"value":"/   but are more complex than `iter_with_large_drop`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":11586,"byte_end":11641,"line_start":289,"line_end":289,"column_start":1,"column_end":56}},{"value":"/ * Otherwise, use `iter`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":11642,"byte_end":11670,"line_start":290,"line_end":290,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13229,"byte_end":13233,"line_start":336,"line_end":336,"column_start":12,"column_end":16},"name":"iter","qualname":"<Bencher>::iter","value":"pub fn iter<O, R>(&mut Self, R) where R: FnMut() -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by executing it many times and timing the total elapsed time.","sig":null,"attributes":[{"value":"/ Times a `routine` by executing it many times and timing the total elapsed time.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12136,"byte_end":12219,"line_start":299,"line_end":299,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12224,"byte_end":12227,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Prefer this timing loop when `routine` returns a value that doesn't have a destructor.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12232,"byte_end":12322,"line_start":301,"line_end":301,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12327,"byte_end":12330,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12335,"byte_end":12353,"line_start":303,"line_end":303,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12358,"byte_end":12361,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Note that the `Bencher` also times the time required to destroy the output of `routine()`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12366,"byte_end":12460,"line_start":305,"line_end":305,"column_start":5,"column_end":99}},{"value":"/ Therefore prefer this timing loop when the runtime of `mem::drop(O)` is negligible compared","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12465,"byte_end":12560,"line_start":306,"line_end":306,"column_start":5,"column_end":100}},{"value":"/ to the runtime of the `routine`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12565,"byte_end":12601,"line_start":307,"line_end":307,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12606,"byte_end":12609,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12614,"byte_end":12625,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/ elapsed = Instant::now + iters * (routine + mem::drop(O) + Range::next)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12630,"byte_end":12705,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12710,"byte_end":12717,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12722,"byte_end":12725,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12730,"byte_end":12743,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12748,"byte_end":12751,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12756,"byte_end":12767,"line_start":315,"line_end":315,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12772,"byte_end":12812,"line_start":316,"line_end":316,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12817,"byte_end":12820,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12825,"byte_end":12846,"line_start":318,"line_end":318,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12851,"byte_end":12854,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ // The function to benchmark","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12859,"byte_end":12891,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/ fn foo() {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12896,"byte_end":12910,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/     // ...","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12915,"byte_end":12929,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12934,"byte_end":12939,"line_start":323,"line_end":323,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12944,"byte_end":12947,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12952,"byte_end":12985,"line_start":325,"line_end":325,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"iter\", move |b| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12990,"byte_end":13033,"line_start":326,"line_end":326,"column_start":5,"column_end":48}},{"value":"/         b.iter(|| foo())","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13038,"byte_end":13066,"line_start":327,"line_end":327,"column_start":5,"column_end":33}},{"value":"/     });","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13071,"byte_end":13082,"line_start":328,"line_end":328,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13087,"byte_end":13092,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13097,"byte_end":13100,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13105,"byte_end":13142,"line_start":331,"line_end":331,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13147,"byte_end":13176,"line_start":332,"line_end":332,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13181,"byte_end":13188,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13193,"byte_end":13196,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13201,"byte_end":13217,"line_start":335,"line_end":335,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14824,"byte_end":14835,"line_start":387,"line_end":387,"column_start":12,"column_end":23},"name":"iter_custom","qualname":"<Bencher>::iter_custom","value":"pub fn iter_custom<R>(&mut Self, R) where R: FnMut(u64) -> M::Value","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by executing it many times and relying on `routine` to measure its own execution time.","sig":null,"attributes":[{"value":"/ Times a `routine` by executing it many times and relying on `routine` to measure its own execution time.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13613,"byte_end":13721,"line_start":350,"line_end":350,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13726,"byte_end":13729,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Prefer this timing loop in cases where `routine` has to do its own measurements to","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13734,"byte_end":13820,"line_start":352,"line_end":352,"column_start":5,"column_end":91}},{"value":"/ get accurate timing information (for example in multi-threaded scenarios where you spawn","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13825,"byte_end":13917,"line_start":353,"line_end":353,"column_start":5,"column_end":97}},{"value":"/ and coordinate with multiple threads).","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13922,"byte_end":13964,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13969,"byte_end":13972,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":13977,"byte_end":13995,"line_start":356,"line_end":356,"column_start":5,"column_end":23}},{"value":"/ Custom, the timing model is whatever is returned as the Duration from `routine`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14000,"byte_end":14084,"line_start":357,"line_end":357,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14089,"byte_end":14092,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14097,"byte_end":14110,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14115,"byte_end":14126,"line_start":360,"line_end":360,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14131,"byte_end":14171,"line_start":361,"line_end":361,"column_start":5,"column_end":45}},{"value":"/ use criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14176,"byte_end":14197,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/ use criterion::black_box;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14202,"byte_end":14231,"line_start":363,"line_end":363,"column_start":5,"column_end":34}},{"value":"/ use std::time::Instant;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14236,"byte_end":14263,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14268,"byte_end":14271,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ fn foo() {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14276,"byte_end":14290,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/     // ...","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14295,"byte_end":14309,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14314,"byte_end":14319,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14324,"byte_end":14327,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14332,"byte_end":14365,"line_start":370,"line_end":370,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"iter\", move |b| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14370,"byte_end":14413,"line_start":371,"line_end":371,"column_start":5,"column_end":48}},{"value":"/         b.iter_custom(|iters| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14418,"byte_end":14453,"line_start":372,"line_end":372,"column_start":5,"column_end":40}},{"value":"/             let start = Instant::now();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14458,"byte_end":14501,"line_start":373,"line_end":373,"column_start":5,"column_end":48}},{"value":"/             for _i in 0..iters {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14506,"byte_end":14542,"line_start":374,"line_end":374,"column_start":5,"column_end":41}},{"value":"/                 black_box(foo());","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14547,"byte_end":14584,"line_start":375,"line_end":375,"column_start":5,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14589,"byte_end":14606,"line_start":376,"line_end":376,"column_start":5,"column_end":22}},{"value":"/             start.elapsed()","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14611,"byte_end":14642,"line_start":377,"line_end":377,"column_start":5,"column_end":36}},{"value":"/         })","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14647,"byte_end":14661,"line_start":378,"line_end":378,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14666,"byte_end":14677,"line_start":379,"line_end":379,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14682,"byte_end":14687,"line_start":380,"line_end":380,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14692,"byte_end":14695,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14700,"byte_end":14737,"line_start":382,"line_end":382,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14742,"byte_end":14771,"line_start":383,"line_end":383,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14776,"byte_end":14783,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14788,"byte_end":14791,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":14796,"byte_end":14812,"line_start":386,"line_end":386,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15117,"byte_end":15132,"line_start":398,"line_end":398,"column_start":12,"column_end":27},"name":"iter_with_setup","qualname":"<Bencher>::iter_with_setup","value":"pub fn iter_with_setup<I, O, S, R>(&mut Self, S, R) where S: FnMut() -> I,\nR: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16409,"byte_end":16429,"line_start":441,"line_end":441,"column_start":12,"column_end":32},"name":"iter_with_large_drop","qualname":"<Bencher>::iter_with_large_drop","value":"pub fn iter_with_large_drop<O, R>(&mut Self, R) where R: FnMut() -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by collecting its output on each iteration. This avoids timing the\n destructor of the value returned by `routine`.","sig":null,"attributes":[{"value":"/ Times a `routine` by collecting its output on each iteration. This avoids timing the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15324,"byte_end":15412,"line_start":406,"line_end":406,"column_start":5,"column_end":93}},{"value":"/ destructor of the value returned by `routine`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15417,"byte_end":15467,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15472,"byte_end":15475,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ WARNING: This requires `O(iters * mem::size_of::<O>())` of memory, and `iters` is not under the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15480,"byte_end":15579,"line_start":409,"line_end":409,"column_start":5,"column_end":104}},{"value":"/ control of the caller. If this causes out-of-memory errors, use `iter_batched` instead.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15584,"byte_end":15675,"line_start":410,"line_end":410,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15680,"byte_end":15683,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15688,"byte_end":15706,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15711,"byte_end":15714,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ``` text","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15719,"byte_end":15731,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/ elapsed = Instant::now + iters * (routine) + Iterator::collect::<Vec<_>>","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15736,"byte_end":15812,"line_start":415,"line_end":415,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15817,"byte_end":15824,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15829,"byte_end":15832,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15837,"byte_end":15850,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15855,"byte_end":15858,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15863,"byte_end":15874,"line_start":420,"line_end":420,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15879,"byte_end":15919,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15924,"byte_end":15927,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15932,"byte_end":15953,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15958,"byte_end":15961,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ fn create_vector() -> Vec<u64> {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":15966,"byte_end":16002,"line_start":425,"line_end":425,"column_start":5,"column_end":41}},{"value":"/     # vec![]","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16007,"byte_end":16023,"line_start":426,"line_end":426,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16028,"byte_end":16042,"line_start":427,"line_end":427,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16047,"byte_end":16052,"line_start":428,"line_end":428,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16057,"byte_end":16060,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16065,"byte_end":16098,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"with_drop\", move |b| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16103,"byte_end":16151,"line_start":431,"line_end":431,"column_start":5,"column_end":53}},{"value":"/         // This will avoid timing the Vec::drop.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16156,"byte_end":16208,"line_start":432,"line_end":432,"column_start":5,"column_end":57}},{"value":"/         b.iter_with_large_drop(|| create_vector())","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16213,"byte_end":16267,"line_start":433,"line_end":433,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16272,"byte_end":16283,"line_start":434,"line_end":434,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16288,"byte_end":16293,"line_start":435,"line_end":435,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16298,"byte_end":16301,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16306,"byte_end":16343,"line_start":437,"line_end":437,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16348,"byte_end":16377,"line_start":438,"line_end":438,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16382,"byte_end":16389,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16394,"byte_end":16397,"line_start":440,"line_end":440,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16613,"byte_end":16634,"line_start":449,"line_end":449,"column_start":12,"column_end":33},"name":"iter_with_large_setup","qualname":"<Bencher>::iter_with_large_setup","value":"pub fn iter_with_large_setup<I, O, S, R>(&mut Self, S, R) where S: FnMut() ->\nI, R: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":18234,"byte_end":18246,"line_start":501,"line_end":501,"column_start":12,"column_end":24},"name":"iter_batched","qualname":"<Bencher>::iter_batched","value":"pub fn iter_batched<I, O, S, R>(&mut Self, S, R, BatchSize) where S: FnMut()\n-> I, R: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` that requires some input by generating a batch of input, then timing the\n iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for\n details on choosing the batch size. Use this when the routine must consume its input.","sig":null,"attributes":[{"value":"/ Times a `routine` that requires some input by generating a batch of input, then timing the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16827,"byte_end":16921,"line_start":457,"line_end":457,"column_start":5,"column_end":99}},{"value":"/ iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":16926,"byte_end":17015,"line_start":458,"line_end":458,"column_start":5,"column_end":94}},{"value":"/ details on choosing the batch size. Use this when the routine must consume its input.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17020,"byte_end":17109,"line_start":459,"line_end":459,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17114,"byte_end":17117,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ For example, use this loop to benchmark sorting algorithms, because they require unsorted","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17122,"byte_end":17215,"line_start":461,"line_end":461,"column_start":5,"column_end":98}},{"value":"/ data on each iteration.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17220,"byte_end":17247,"line_start":462,"line_end":462,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17252,"byte_end":17255,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17260,"byte_end":17278,"line_start":464,"line_end":464,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17283,"byte_end":17286,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17291,"byte_end":17302,"line_start":466,"line_end":466,"column_start":5,"column_end":16}},{"value":"/ elapsed = (Instant::now * num_batches) + (iters * (routine + O::drop)) + Vec::extend","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17307,"byte_end":17395,"line_start":467,"line_end":467,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17400,"byte_end":17407,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17412,"byte_end":17415,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17420,"byte_end":17433,"line_start":470,"line_end":470,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17438,"byte_end":17441,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17446,"byte_end":17457,"line_start":472,"line_end":472,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17462,"byte_end":17502,"line_start":473,"line_end":473,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17507,"byte_end":17510,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17515,"byte_end":17536,"line_start":475,"line_end":475,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17541,"byte_end":17544,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ fn create_scrambled_data() -> Vec<u64> {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17549,"byte_end":17593,"line_start":477,"line_end":477,"column_start":5,"column_end":49}},{"value":"/     # vec![]","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17598,"byte_end":17614,"line_start":478,"line_end":478,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17619,"byte_end":17633,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17638,"byte_end":17643,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17648,"byte_end":17651,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ // The sorting algorithm to test","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17656,"byte_end":17692,"line_start":482,"line_end":482,"column_start":5,"column_end":41}},{"value":"/ fn sort(data: &mut [u64]) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17697,"byte_end":17728,"line_start":483,"line_end":483,"column_start":5,"column_end":36}},{"value":"/     // ...","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17733,"byte_end":17747,"line_start":484,"line_end":484,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17752,"byte_end":17757,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17762,"byte_end":17765,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17770,"byte_end":17803,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/     let data = create_scrambled_data();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17808,"byte_end":17851,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17856,"byte_end":17859,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/     c.bench_function(\"with_setup\", move |b| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17864,"byte_end":17913,"line_start":490,"line_end":490,"column_start":5,"column_end":54}},{"value":"/         // This will avoid timing the to_vec call.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17918,"byte_end":17972,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/         b.iter_batched(|| data.clone(), |mut data| sort(&mut data), BatchSize::SmallInput)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":17977,"byte_end":18071,"line_start":492,"line_end":492,"column_start":5,"column_end":99}},{"value":"/     });","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":18076,"byte_end":18087,"line_start":493,"line_end":493,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":18092,"byte_end":18097,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":18102,"byte_end":18105,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":18110,"byte_end":18147,"line_start":496,"line_end":496,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":18152,"byte_end":18181,"line_start":497,"line_end":497,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":18186,"byte_end":18193,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":18198,"byte_end":18201,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":18206,"byte_end":18222,"line_start":500,"line_end":500,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":21246,"byte_end":21262,"line_start":591,"line_end":591,"column_start":12,"column_end":28},"name":"iter_batched_ref","qualname":"<Bencher>::iter_batched_ref","value":"pub fn iter_batched_ref<I, O, S, R>(&mut Self, S, R, BatchSize) where\nS: FnMut() -> I, R: FnMut(&mut I) -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` that requires some input by generating a batch of input, then timing the\n iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for\n details on choosing the batch size. Use this when the routine should accept the input by\n mutable reference.","sig":null,"attributes":[{"value":"/ Times a `routine` that requires some input by generating a batch of input, then timing the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":19821,"byte_end":19915,"line_start":546,"line_end":546,"column_start":5,"column_end":99}},{"value":"/ iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":19920,"byte_end":20009,"line_start":547,"line_end":547,"column_start":5,"column_end":94}},{"value":"/ details on choosing the batch size. Use this when the routine should accept the input by","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20014,"byte_end":20106,"line_start":548,"line_end":548,"column_start":5,"column_end":97}},{"value":"/ mutable reference.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20111,"byte_end":20133,"line_start":549,"line_end":549,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20138,"byte_end":20141,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ For example, use this loop to benchmark sorting algorithms, because they require unsorted","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20146,"byte_end":20239,"line_start":551,"line_end":551,"column_start":5,"column_end":98}},{"value":"/ data on each iteration.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20244,"byte_end":20271,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20276,"byte_end":20279,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20284,"byte_end":20302,"line_start":554,"line_end":554,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20307,"byte_end":20310,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20315,"byte_end":20326,"line_start":556,"line_end":556,"column_start":5,"column_end":16}},{"value":"/ elapsed = (Instant::now * num_batches) + (iters * routine) + Vec::extend","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20331,"byte_end":20407,"line_start":557,"line_end":557,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20412,"byte_end":20419,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20424,"byte_end":20427,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20432,"byte_end":20445,"line_start":560,"line_end":560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20450,"byte_end":20453,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20458,"byte_end":20469,"line_start":562,"line_end":562,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20474,"byte_end":20514,"line_start":563,"line_end":563,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20519,"byte_end":20522,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20527,"byte_end":20548,"line_start":565,"line_end":565,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20553,"byte_end":20556,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ fn create_scrambled_data() -> Vec<u64> {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20561,"byte_end":20605,"line_start":567,"line_end":567,"column_start":5,"column_end":49}},{"value":"/     # vec![]","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20610,"byte_end":20626,"line_start":568,"line_end":568,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20631,"byte_end":20645,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20650,"byte_end":20655,"line_start":570,"line_end":570,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20660,"byte_end":20663,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ // The sorting algorithm to test","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20668,"byte_end":20704,"line_start":572,"line_end":572,"column_start":5,"column_end":41}},{"value":"/ fn sort(data: &mut [u64]) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20709,"byte_end":20740,"line_start":573,"line_end":573,"column_start":5,"column_end":36}},{"value":"/     // ...","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20745,"byte_end":20759,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20764,"byte_end":20769,"line_start":575,"line_end":575,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20774,"byte_end":20777,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20782,"byte_end":20815,"line_start":577,"line_end":577,"column_start":5,"column_end":38}},{"value":"/     let data = create_scrambled_data();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20820,"byte_end":20863,"line_start":578,"line_end":578,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20868,"byte_end":20871,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/     c.bench_function(\"with_setup\", move |b| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20876,"byte_end":20925,"line_start":580,"line_end":580,"column_start":5,"column_end":54}},{"value":"/         // This will avoid timing the to_vec call.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20930,"byte_end":20984,"line_start":581,"line_end":581,"column_start":5,"column_end":59}},{"value":"/         b.iter_batched(|| data.clone(), |mut data| sort(&mut data), BatchSize::SmallInput)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":20989,"byte_end":21083,"line_start":582,"line_end":582,"column_start":5,"column_end":99}},{"value":"/     });","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":21088,"byte_end":21099,"line_start":583,"line_end":583,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":21104,"byte_end":21109,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":21114,"byte_end":21117,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":21122,"byte_end":21159,"line_start":586,"line_end":586,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":21164,"byte_end":21193,"line_start":587,"line_end":587,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":21198,"byte_end":21205,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":21210,"byte_end":21213,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":21218,"byte_end":21234,"line_start":590,"line_end":590,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3183},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23440,"byte_end":23447,"line_start":651,"line_end":651,"column_start":5,"column_end":12},"name":"Compare","qualname":"::Baseline::Compare","value":"Baseline::Compare","parent":{"krate":0,"index":3182},"children":[],"decl_id":null,"docs":" Compare ensures a previous saved version of the baseline\n exists and runs comparison against that.\n","sig":null,"attributes":[{"value":"/ Compare ensures a previous saved version of the baseline","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23326,"byte_end":23386,"line_start":649,"line_end":649,"column_start":5,"column_end":65}},{"value":"/ exists and runs comparison against that.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23391,"byte_end":23435,"line_start":650,"line_end":650,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3185},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23582,"byte_end":23586,"line_start":654,"line_end":654,"column_start":5,"column_end":9},"name":"Save","qualname":"::Baseline::Save","value":"Baseline::Save","parent":{"krate":0,"index":3182},"children":[],"decl_id":null,"docs":" Save writes the benchmark results to the baseline directory,\n overwriting any results that were previously there.\n","sig":null,"attributes":[{"value":"/ Save writes the benchmark results to the baseline directory,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23453,"byte_end":23517,"line_start":652,"line_end":652,"column_start":5,"column_end":69}},{"value":"/ overwriting any results that were previously there.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23522,"byte_end":23577,"line_start":653,"line_end":653,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":3182},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23311,"byte_end":23319,"line_start":648,"line_end":648,"column_start":10,"column_end":18},"name":"Baseline","qualname":"::Baseline","value":"pub enum Baseline {\n\n    /// Compare ensures a previous saved version of the baseline\n    /// exists and runs comparison against that.\n    Compare,\n\n    /// Save writes the benchmark results to the baseline directory,\n    /// overwriting any results that were previously there.\n    Save,\n}","parent":null,"children":[{"krate":0,"index":3183},{"krate":0,"index":3185}],"decl_id":null,"docs":" Baseline describes how the baseline_directory is handled.\n","sig":null,"attributes":[{"value":"/ Baseline describes how the baseline_directory is handled.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23210,"byte_end":23271,"line_start":646,"line_end":646,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3193},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23849,"byte_end":23856,"line_start":662,"line_end":662,"column_start":5,"column_end":12},"name":"Gnuplot","qualname":"::PlottingBackend::Gnuplot","value":"PlottingBackend::Gnuplot","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" Plotting backend which uses the external `gnuplot` command to render plots. This is the\n default if the `gnuplot` command is installed.\n","sig":null,"attributes":[{"value":"/ Plotting backend which uses the external `gnuplot` command to render plots. This is the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23698,"byte_end":23789,"line_start":660,"line_end":660,"column_start":5,"column_end":96}},{"value":"/ default if the `gnuplot` command is installed.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23794,"byte_end":23844,"line_start":661,"line_end":661,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3195},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23986,"byte_end":23994,"line_start":665,"line_end":665,"column_start":5,"column_end":13},"name":"Plotters","qualname":"::PlottingBackend::Plotters","value":"PlottingBackend::Plotters","parent":{"krate":0,"index":3192},"children":[],"decl_id":null,"docs":" Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`\n is not installed.\n","sig":null,"attributes":[{"value":"/ Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23862,"byte_end":23955,"line_start":663,"line_end":663,"column_start":5,"column_end":98}},{"value":"/ is not installed.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23960,"byte_end":23981,"line_start":664,"line_end":664,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3192},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23676,"byte_end":23691,"line_start":659,"line_end":659,"column_start":10,"column_end":25},"name":"PlottingBackend","qualname":"::PlottingBackend","value":"pub enum PlottingBackend {\n\n    /// Plotting backend which uses the external `gnuplot` command to render plots. This is the\n    /// default if the `gnuplot` command is installed.\n    Gnuplot,\n\n    /// Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`\n    /// is not installed.\n    Plotters,\n}","parent":null,"children":[{"krate":0,"index":3193},{"krate":0,"index":3195}],"decl_id":null,"docs":" Enum used to select the plotting backend.\n","sig":null,"attributes":[{"value":"/ Enum used to select the plotting backend.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":23591,"byte_end":23636,"line_start":657,"line_end":657,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1862},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":25198,"byte_end":25207,"line_start":703,"line_end":703,"column_start":12,"column_end":21},"name":"Criterion","qualname":"::Criterion","value":"Criterion {  }","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878}],"decl_id":null,"docs":" The benchmark manager","sig":null,"attributes":[{"value":"/ The benchmark manager","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24565,"byte_end":24590,"line_start":689,"line_end":689,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24591,"byte_end":24594,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ `Criterion` lets you configure and execute benchmarks","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24595,"byte_end":24652,"line_start":691,"line_end":691,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24653,"byte_end":24656,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/ Each benchmark consists of four phases:","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24657,"byte_end":24700,"line_start":693,"line_end":693,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24701,"byte_end":24704,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ - **Warm-up**: The routine is repeatedly executed, to let the CPU/OS/JIT/interpreter adapt to","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24705,"byte_end":24802,"line_start":695,"line_end":695,"column_start":1,"column_end":98}},{"value":"/ the new load","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24803,"byte_end":24819,"line_start":696,"line_end":696,"column_start":1,"column_end":17}},{"value":"/ - **Measurement**: The routine is repeatedly executed, and timing information is collected into","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24820,"byte_end":24919,"line_start":697,"line_end":697,"column_start":1,"column_end":100}},{"value":"/ a sample","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24920,"byte_end":24932,"line_start":698,"line_end":698,"column_start":1,"column_end":13}},{"value":"/ - **Analysis**: The sample is analyzed and distiled into meaningful statistics that get","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24933,"byte_end":25024,"line_start":699,"line_end":699,"column_start":1,"column_end":92}},{"value":"/ reported to stdout, stored in files, and plotted","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":25025,"byte_end":25077,"line_start":700,"line_end":700,"column_start":1,"column_end":53}},{"value":"/ - **Comparison**: The current sample is compared with the sample obtained in the previous","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":25078,"byte_end":25171,"line_start":701,"line_end":701,"column_start":1,"column_end":94}},{"value":"/ benchmark.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":25172,"byte_end":25186,"line_start":702,"line_end":702,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":28299,"byte_end":28315,"line_start":786,"line_end":786,"column_start":12,"column_end":28},"name":"with_measurement","qualname":"<Criterion<M>>::with_measurement","value":"pub fn with_measurement<M2: Measurement>(Self, M2) -> Criterion<M2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the measurement for the benchmarks run with this runner. See the\n Measurement trait for more details\n","sig":null,"attributes":[{"value":"/ Changes the measurement for the benchmarks run with this runner. See the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":28168,"byte_end":28244,"line_start":784,"line_end":784,"column_start":5,"column_end":81}},{"value":"/ Measurement trait for more details","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":28249,"byte_end":28287,"line_start":785,"line_end":785,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":29255,"byte_end":29268,"line_start":809,"line_end":809,"column_start":12,"column_end":25},"name":"with_profiler","qualname":"<Criterion<M>>::with_profiler","value":"pub fn with_profiler<P: Profiler + 'static>(Self, P) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the internal profiler for benchmarks run with this runner. See\n the Profiler trait for more details.\n","sig":null,"attributes":[{"value":"/ Changes the internal profiler for benchmarks run with this runner. See","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":29124,"byte_end":29198,"line_start":807,"line_end":807,"column_start":5,"column_end":79}},{"value":"/ the Profiler trait for more details.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":29203,"byte_end":29243,"line_start":808,"line_end":808,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":29649,"byte_end":29665,"line_start":820,"line_end":820,"column_start":12,"column_end":28},"name":"plotting_backend","qualname":"<Criterion<M>>::plotting_backend","value":"pub fn plotting_backend(Self, PlottingBackend) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the plotting backend. By default, Criterion will use gnuplot if available, or plotters\n if not.","sig":null,"attributes":[{"value":"/ Set the plotting backend. By default, Criterion will use gnuplot if available, or plotters","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":29431,"byte_end":29525,"line_start":816,"line_end":816,"column_start":5,"column_end":99}},{"value":"/ if not.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":29530,"byte_end":29541,"line_start":817,"line_end":817,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":29546,"byte_end":29549,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Panics if `backend` is `PlottingBackend::Gnuplot` and gnuplot is not available.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":29554,"byte_end":29637,"line_start":819,"line_end":819,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30448,"byte_end":30459,"line_start":843,"line_end":843,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<Criterion<M>>::sample_size","value":"pub fn sample_size(Self, usize) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default size of the sample for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default size of the sample for benchmarks run with this runner.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30121,"byte_end":30200,"line_start":833,"line_end":833,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30205,"byte_end":30208,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ A bigger sample should yield more accurate results if paired with a sufficiently large","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30213,"byte_end":30303,"line_start":835,"line_end":835,"column_start":5,"column_end":95}},{"value":"/ measurement time.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30308,"byte_end":30329,"line_start":836,"line_end":836,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30334,"byte_end":30337,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ Sample size must be at least 10.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30342,"byte_end":30378,"line_start":838,"line_end":838,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30383,"byte_end":30386,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30391,"byte_end":30403,"line_start":840,"line_end":840,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30408,"byte_end":30411,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ Panics if n < 10","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30416,"byte_end":30436,"line_start":842,"line_end":842,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30749,"byte_end":30761,"line_start":855,"line_end":855,"column_start":12,"column_end":24},"name":"warm_up_time","qualname":"<Criterion<M>>::warm_up_time","value":"pub fn warm_up_time(Self, Duration) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default warm up time for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default warm up time for benchmarks run with this runner.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30586,"byte_end":30659,"line_start":850,"line_end":850,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30664,"byte_end":30667,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30672,"byte_end":30684,"line_start":852,"line_end":852,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30689,"byte_end":30692,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30697,"byte_end":30737,"line_start":854,"line_end":854,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31319,"byte_end":31335,"line_start":872,"line_end":872,"column_start":12,"column_end":28},"name":"measurement_time","qualname":"<Criterion<M>>::measurement_time","value":"pub fn measurement_time(Self, Duration) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default measurement time for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default measurement time for benchmarks run with this runner.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30907,"byte_end":30984,"line_start":862,"line_end":862,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30989,"byte_end":30992,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ With a longer time, the measurement will become more resilient to transitory peak loads","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":30997,"byte_end":31088,"line_start":864,"line_end":864,"column_start":5,"column_end":96}},{"value":"/ caused by external programs","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31093,"byte_end":31124,"line_start":865,"line_end":865,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31129,"byte_end":31132,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ **Note**: If the measurement time is too \"low\", Criterion will automatically increase it","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31137,"byte_end":31229,"line_start":867,"line_end":867,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31234,"byte_end":31237,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31242,"byte_end":31254,"line_start":869,"line_end":869,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31259,"byte_end":31262,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration in zero","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31267,"byte_end":31307,"line_start":871,"line_end":871,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31981,"byte_end":31991,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"nresamples","qualname":"<Criterion<M>>::nresamples","value":"pub fn nresamples(Self, usize) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default number of resamples for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default number of resamples for benchmarks run with this runner.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31485,"byte_end":31565,"line_start":879,"line_end":879,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31570,"byte_end":31573,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ Number of resamples to use for the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31578,"byte_end":31616,"line_start":881,"line_end":881,"column_start":5,"column_end":43}},{"value":"/ [bootstrap](http://en.wikipedia.org/wiki/Bootstrapping_(statistics)#Case_resampling)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31621,"byte_end":31709,"line_start":882,"line_end":882,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31714,"byte_end":31717,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ A larger number of resamples reduces the random sampling errors, which are inherent to the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31722,"byte_end":31816,"line_start":884,"line_end":884,"column_start":5,"column_end":99}},{"value":"/ bootstrap method, but also increases the analysis time","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31821,"byte_end":31879,"line_start":885,"line_end":885,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31884,"byte_end":31887,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31892,"byte_end":31904,"line_start":887,"line_end":887,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31909,"byte_end":31912,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Panics if the number of resamples is set to zero","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":31917,"byte_end":31969,"line_start":889,"line_end":889,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32959,"byte_end":32974,"line_start":912,"line_end":912,"column_start":12,"column_end":27},"name":"noise_threshold","qualname":"<Criterion<M>>::noise_threshold","value":"pub fn noise_threshold(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default noise threshold for benchmarks run with this runner. The noise threshold\n is used to filter out small changes in performance, even if they are statistically\n significant. Sometimes benchmarking the same code twice will result in small but\n statistically significant differences solely because of noise. This provides a way to filter\n out some of these false positives at the cost of making it harder to detect small changes\n to the true performance of the benchmark.","sig":null,"attributes":[{"value":"/ Changes the default noise threshold for benchmarks run with this runner. The noise threshold","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32239,"byte_end":32335,"line_start":900,"line_end":900,"column_start":5,"column_end":101}},{"value":"/ is used to filter out small changes in performance, even if they are statistically","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32340,"byte_end":32426,"line_start":901,"line_end":901,"column_start":5,"column_end":91}},{"value":"/ significant. Sometimes benchmarking the same code twice will result in small but","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32431,"byte_end":32515,"line_start":902,"line_end":902,"column_start":5,"column_end":89}},{"value":"/ statistically significant differences solely because of noise. This provides a way to filter","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32520,"byte_end":32616,"line_start":903,"line_end":903,"column_start":5,"column_end":101}},{"value":"/ out some of these false positives at the cost of making it harder to detect small changes","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32621,"byte_end":32714,"line_start":904,"line_end":904,"column_start":5,"column_end":98}},{"value":"/ to the true performance of the benchmark.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32719,"byte_end":32764,"line_start":905,"line_end":905,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32769,"byte_end":32772,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ The default is 0.01, meaning that changes smaller than 1% will be ignored.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32777,"byte_end":32855,"line_start":907,"line_end":907,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32860,"byte_end":32863,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32868,"byte_end":32880,"line_start":909,"line_end":909,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32885,"byte_end":32888,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ Panics if the threshold is set to a negative value","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":32893,"byte_end":32947,"line_start":911,"line_end":911,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":33633,"byte_end":33649,"line_start":927,"line_end":927,"column_start":12,"column_end":28},"name":"confidence_level","qualname":"<Criterion<M>>::confidence_level","value":"pub fn confidence_level(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default confidence level for benchmarks run with this runner. The confidence\n level is the desired probability that the true runtime lies within the estimated\n [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is\n 0.95, meaning that the confidence interval should capture the true value 95% of the time.","sig":null,"attributes":[{"value":"/ Changes the default confidence level for benchmarks run with this runner. The confidence","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":33128,"byte_end":33220,"line_start":919,"line_end":919,"column_start":5,"column_end":97}},{"value":"/ level is the desired probability that the true runtime lies within the estimated","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":33225,"byte_end":33309,"line_start":920,"line_end":920,"column_start":5,"column_end":89}},{"value":"/ [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":33314,"byte_end":33406,"line_start":921,"line_end":921,"column_start":5,"column_end":97}},{"value":"/ 0.95, meaning that the confidence interval should capture the true value 95% of the time.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":33411,"byte_end":33504,"line_start":922,"line_end":922,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":33509,"byte_end":33512,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":33517,"byte_end":33529,"line_start":924,"line_end":924,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":33534,"byte_end":33537,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ Panics if the confidence level is set to a value outside the `(0, 1)` range","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":33542,"byte_end":33621,"line_start":926,"line_end":926,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":35222,"byte_end":35240,"line_start":957,"line_end":957,"column_start":12,"column_end":30},"name":"significance_level","qualname":"<Criterion<M>>::significance_level","value":"pub fn significance_level(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default [significance level](https://en.wikipedia.org/wiki/Statistical_significance)\n for benchmarks run with this runner. This is used to perform a\n [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if\n the measurements from this run are different from the measured performance of the last run.\n The significance level is the desired probability that two measurements of identical code\n will be considered 'different' due to noise in the measurements. The default value is 0.05,\n meaning that approximately 5% of identical benchmarks will register as different due to\n noise.","sig":null,"attributes":[{"value":"/ Changes the default [significance level](https://en.wikipedia.org/wiki/Statistical_significance)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":33922,"byte_end":34022,"line_start":937,"line_end":937,"column_start":5,"column_end":105}},{"value":"/ for benchmarks run with this runner. This is used to perform a","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34027,"byte_end":34093,"line_start":938,"line_end":938,"column_start":5,"column_end":71}},{"value":"/ [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34098,"byte_end":34191,"line_start":939,"line_end":939,"column_start":5,"column_end":98}},{"value":"/ the measurements from this run are different from the measured performance of the last run.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34196,"byte_end":34291,"line_start":940,"line_end":940,"column_start":5,"column_end":100}},{"value":"/ The significance level is the desired probability that two measurements of identical code","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34296,"byte_end":34389,"line_start":941,"line_end":941,"column_start":5,"column_end":98}},{"value":"/ will be considered 'different' due to noise in the measurements. The default value is 0.05,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34394,"byte_end":34489,"line_start":942,"line_end":942,"column_start":5,"column_end":100}},{"value":"/ meaning that approximately 5% of identical benchmarks will register as different due to","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34494,"byte_end":34585,"line_start":943,"line_end":943,"column_start":5,"column_end":96}},{"value":"/ noise.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34590,"byte_end":34600,"line_start":944,"line_end":944,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34605,"byte_end":34608,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ This presents a trade-off. By setting the significance level closer to 0.0, you can increase","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34613,"byte_end":34709,"line_start":946,"line_end":946,"column_start":5,"column_end":101}},{"value":"/ the statistical robustness against noise, but it also weaken's Criterion.rs' ability to","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34714,"byte_end":34805,"line_start":947,"line_end":947,"column_start":5,"column_end":96}},{"value":"/ detect small but real changes in the performance. By setting the significance level","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34810,"byte_end":34897,"line_start":948,"line_end":948,"column_start":5,"column_end":92}},{"value":"/ closer to 1.0, Criterion.rs will be more able to detect small true changes, but will also","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":34902,"byte_end":34995,"line_start":949,"line_end":949,"column_start":5,"column_end":98}},{"value":"/ report more spurious differences.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":35000,"byte_end":35037,"line_start":950,"line_end":950,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":35042,"byte_end":35045,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ See also the noise threshold setting.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":35050,"byte_end":35091,"line_start":952,"line_end":952,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":35096,"byte_end":35099,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":35104,"byte_end":35116,"line_start":954,"line_end":954,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":35121,"byte_end":35124,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ Panics if the significance level is set to a value outside the `(0, 1)` range","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":35129,"byte_end":35210,"line_start":956,"line_end":956,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":35674,"byte_end":35684,"line_start":972,"line_end":972,"column_start":12,"column_end":22},"name":"with_plots","qualname":"<Criterion<M>>::with_plots","value":"pub fn with_plots(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Enables plotting\n","sig":null,"attributes":[{"value":"/ Enables plotting","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":35642,"byte_end":35662,"line_start":971,"line_end":971,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":36155,"byte_end":36168,"line_start":986,"line_end":986,"column_start":12,"column_end":25},"name":"without_plots","qualname":"<Criterion<M>>::without_plots","value":"pub fn without_plots(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Disables plotting\n","sig":null,"attributes":[{"value":"/ Disables plotting","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":36122,"byte_end":36143,"line_start":985,"line_end":985,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":36607,"byte_end":36615,"line_start":998,"line_end":998,"column_start":12,"column_end":20},"name":"can_plot","qualname":"<Criterion<M>>::can_plot","value":"pub fn can_plot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if generation of the plots is possible.\n","sig":null,"attributes":[{"value":"/ Return true if generation of the plots is possible.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":36540,"byte_end":36595,"line_start":997,"line_end":997,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":36842,"byte_end":36855,"line_start":1005,"line_end":1005,"column_start":12,"column_end":25},"name":"save_baseline","qualname":"<Criterion<M>>::save_baseline","value":"pub fn save_baseline(Self, String) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Names an explicit baseline and enables overwriting the previous results.\n","sig":null,"attributes":[{"value":"/ Names an explicit baseline and enables overwriting the previous results.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":36754,"byte_end":36830,"line_start":1004,"line_end":1004,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":37099,"byte_end":37114,"line_start":1012,"line_end":1012,"column_start":12,"column_end":27},"name":"retain_baseline","qualname":"<Criterion<M>>::retain_baseline","value":"pub fn retain_baseline(Self, String) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Names an explicit baseline and disables overwriting the previous results.\n","sig":null,"attributes":[{"value":"/ Names an explicit baseline and disables overwriting the previous results.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":37010,"byte_end":37087,"line_start":1011,"line_end":1011,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":37394,"byte_end":37405,"line_start":1020,"line_end":1020,"column_start":12,"column_end":23},"name":"with_filter","qualname":"<Criterion<M>>::with_filter","value":"pub fn with_filter<S: Into<String>>(Self, S) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Filters the benchmarks. Only benchmarks with names that contain the\n given string will be executed.\n","sig":null,"attributes":[{"value":"/ Filters the benchmarks. Only benchmarks with names that contain the","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":37272,"byte_end":37343,"line_start":1018,"line_end":1018,"column_start":5,"column_end":76}},{"value":"/ given string will be executed.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":37348,"byte_end":37382,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":37868,"byte_end":37884,"line_start":1035,"line_end":1035,"column_start":12,"column_end":28},"name":"output_directory","qualname":"<Criterion<M>>::output_directory","value":"pub fn output_directory(Self, &Path) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the output directory (currently for testing only)\n","sig":null,"attributes":[{"value":"/ Set the output directory (currently for testing only)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":37780,"byte_end":37837,"line_start":1033,"line_end":1033,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":38084,"byte_end":38096,"line_start":1043,"line_end":1043,"column_start":12,"column_end":24},"name":"profile_time","qualname":"<Criterion<M>>::profile_time","value":"pub fn profile_time(Self, Option<Duration>) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the profile time (currently for testing only)\n","sig":null,"attributes":[{"value":"/ Set the profile time (currently for testing only)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":38000,"byte_end":38053,"line_start":1041,"line_end":1041,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":38411,"byte_end":38424,"line_start":1054,"line_end":1054,"column_start":12,"column_end":25},"name":"final_summary","qualname":"<Criterion<M>>::final_summary","value":"pub fn final_summary(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Generate the final summary at the end of a run.\n","sig":null,"attributes":[{"value":"/ Generate the final summary at the end of a run.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":38329,"byte_end":38380,"line_start":1052,"line_end":1052,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":38927,"byte_end":38946,"line_start":1070,"line_end":1070,"column_start":12,"column_end":31},"name":"configure_from_args","qualname":"<Criterion<M>>::configure_from_args","value":"pub fn configure_from_args(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Configure this criterion struct based on the command-line arguments to\n this process.\n","sig":null,"attributes":[{"value":"/ Configure this criterion struct based on the command-line arguments to","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":38740,"byte_end":38814,"line_start":1067,"line_end":1067,"column_start":5,"column_end":79}},{"value":"/ this process.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":38819,"byte_end":38836,"line_start":1068,"line_end":1068,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54749,"byte_end":54764,"line_start":1430,"line_end":1430,"column_start":12,"column_end":27},"name":"benchmark_group","qualname":"<Criterion<M>>::benchmark_group","value":"pub fn benchmark_group<S: Into<String>>(&mut Self, S) -> BenchmarkGroup<, M>","parent":null,"children":[],"decl_id":null,"docs":" Return a benchmark group. All benchmarks performed using a benchmark group will be\n grouped together in the final report.","sig":null,"attributes":[{"value":"/ Return a benchmark group. All benchmarks performed using a benchmark group will be","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":53962,"byte_end":54048,"line_start":1407,"line_end":1407,"column_start":5,"column_end":91}},{"value":"/ grouped together in the final report.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54053,"byte_end":54094,"line_start":1408,"line_end":1408,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54099,"byte_end":54102,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54107,"byte_end":54122,"line_start":1410,"line_end":1410,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54127,"byte_end":54130,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54135,"byte_end":54146,"line_start":1412,"line_end":1412,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54151,"byte_end":54191,"line_start":1413,"line_end":1413,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54196,"byte_end":54223,"line_start":1414,"line_end":1414,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54228,"byte_end":54231,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ fn bench_simple(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54236,"byte_end":54276,"line_start":1416,"line_end":1416,"column_start":5,"column_end":45}},{"value":"/     let mut group = c.benchmark_group(\"My Group\");","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54281,"byte_end":54335,"line_start":1417,"line_end":1417,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54340,"byte_end":54343,"line_start":1418,"line_end":1418,"column_start":5,"column_end":8}},{"value":"/     // Now we can perform benchmarks with this group","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54348,"byte_end":54404,"line_start":1419,"line_end":1419,"column_start":5,"column_end":61}},{"value":"/     group.bench_function(\"Bench 1\", |b| b.iter(|| 1 ));","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54409,"byte_end":54468,"line_start":1420,"line_end":1420,"column_start":5,"column_end":64}},{"value":"/     group.bench_function(\"Bench 2\", |b| b.iter(|| 2 ));","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54473,"byte_end":54532,"line_start":1421,"line_end":1421,"column_start":5,"column_end":64}},{"value":"/    ","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54537,"byte_end":54544,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/     group.finish();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54549,"byte_end":54572,"line_start":1423,"line_end":1423,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54577,"byte_end":54582,"line_start":1424,"line_end":1424,"column_start":5,"column_end":10}},{"value":"/ criterion_group!(benches, bench_simple);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54587,"byte_end":54631,"line_start":1425,"line_end":1425,"column_start":5,"column_end":49}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54636,"byte_end":54665,"line_start":1426,"line_end":1426,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54670,"byte_end":54677,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ # Panics:","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54682,"byte_end":54695,"line_start":1428,"line_end":1428,"column_start":5,"column_end":18}},{"value":"/ Panics if the group name is empty","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":54700,"byte_end":54737,"line_start":1429,"line_end":1429,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55883,"byte_end":55897,"line_start":1469,"line_end":1469,"column_start":12,"column_end":26},"name":"bench_function","qualname":"<Criterion<M>>::bench_function","value":"pub fn bench_function<F>(&mut Self, &str, F) -> &mut Criterion<M> where\nF: FnMut(&mut Bencher<, M>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function. For comparing multiple functions, see `benchmark_group`.","sig":null,"attributes":[{"value":"/ Benchmarks a function. For comparing multiple functions, see `benchmark_group`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55268,"byte_end":55351,"line_start":1448,"line_end":1448,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55356,"byte_end":55359,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55364,"byte_end":55377,"line_start":1450,"line_end":1450,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55382,"byte_end":55385,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55390,"byte_end":55401,"line_start":1452,"line_end":1452,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55406,"byte_end":55446,"line_start":1453,"line_end":1453,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55451,"byte_end":55478,"line_start":1454,"line_end":1454,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55483,"byte_end":55486,"line_start":1455,"line_end":1455,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55491,"byte_end":55524,"line_start":1456,"line_end":1456,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55529,"byte_end":55584,"line_start":1457,"line_end":1457,"column_start":5,"column_end":60}},{"value":"/     c.bench_function(","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55589,"byte_end":55614,"line_start":1458,"line_end":1458,"column_start":5,"column_end":30}},{"value":"/         \"function_name\",","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55619,"byte_end":55647,"line_start":1459,"line_end":1459,"column_start":5,"column_end":33}},{"value":"/         |b| b.iter(|| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55652,"byte_end":55679,"line_start":1460,"line_end":1460,"column_start":5,"column_end":32}},{"value":"/             // Code to benchmark goes here","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55684,"byte_end":55730,"line_start":1461,"line_end":1461,"column_start":5,"column_end":51}},{"value":"/         }),","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55735,"byte_end":55750,"line_start":1462,"line_end":1462,"column_start":5,"column_end":20}},{"value":"/     );","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55755,"byte_end":55765,"line_start":1463,"line_end":1463,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55770,"byte_end":55775,"line_start":1464,"line_end":1464,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55780,"byte_end":55783,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55788,"byte_end":55825,"line_start":1466,"line_end":1466,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55830,"byte_end":55859,"line_start":1467,"line_end":1467,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55864,"byte_end":55871,"line_start":1468,"line_end":1468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56861,"byte_end":56877,"line_start":1501,"line_end":1501,"column_start":12,"column_end":28},"name":"bench_with_input","qualname":"<Criterion<M>>::bench_with_input","value":"pub fn bench_with_input<F, I>(&mut Self, BenchmarkId, &I, F)\n-> &mut Criterion<M> where F: FnMut(&mut Bencher<, M>, &I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function with an input. For comparing multiple functions or multiple inputs,\n see `benchmark_group`.","sig":null,"attributes":[{"value":"/ Benchmarks a function with an input. For comparing multiple functions or multiple inputs,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56121,"byte_end":56214,"line_start":1478,"line_end":1478,"column_start":5,"column_end":98}},{"value":"/ see `benchmark_group`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56219,"byte_end":56245,"line_start":1479,"line_end":1479,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56250,"byte_end":56253,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56258,"byte_end":56271,"line_start":1481,"line_end":1481,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56276,"byte_end":56279,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56284,"byte_end":56295,"line_start":1483,"line_end":1483,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56300,"byte_end":56340,"line_start":1484,"line_end":1484,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56345,"byte_end":56372,"line_start":1485,"line_end":1485,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56377,"byte_end":56380,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56385,"byte_end":56418,"line_start":1487,"line_end":1487,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56423,"byte_end":56478,"line_start":1488,"line_end":1488,"column_start":5,"column_end":60}},{"value":"/     let input = 5u64;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56483,"byte_end":56508,"line_start":1489,"line_end":1489,"column_start":5,"column_end":30}},{"value":"/     c.bench_with_input(","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56513,"byte_end":56540,"line_start":1490,"line_end":1490,"column_start":5,"column_end":32}},{"value":"/         BenchmarkId::new(\"function_name\", input), &input,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56545,"byte_end":56606,"line_start":1491,"line_end":1491,"column_start":5,"column_end":66}},{"value":"/         |b, i| b.iter(|| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56611,"byte_end":56641,"line_start":1492,"line_end":1492,"column_start":5,"column_end":35}},{"value":"/             // Code to benchmark using input `i` goes here","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56646,"byte_end":56708,"line_start":1493,"line_end":1493,"column_start":5,"column_end":67}},{"value":"/         }),","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56713,"byte_end":56728,"line_start":1494,"line_end":1494,"column_start":5,"column_end":20}},{"value":"/     );","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56733,"byte_end":56743,"line_start":1495,"line_end":1495,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56748,"byte_end":56753,"line_start":1496,"line_end":1496,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56758,"byte_end":56761,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56766,"byte_end":56803,"line_start":1498,"line_end":1498,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56808,"byte_end":56837,"line_start":1499,"line_end":1499,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":56842,"byte_end":56849,"line_start":1500,"line_end":1500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58204,"byte_end":58230,"line_start":1541,"line_end":1541,"column_start":12,"column_end":38},"name":"bench_function_over_inputs","qualname":"<Criterion<M>>::bench_function_over_inputs","value":"pub fn bench_function_over_inputs<I, F>(&mut Self, &str, F, I)\n-> &mut Criterion<M> where I: IntoIterator, I::Item: fmt::Debug + 'static,\nF: FnMut(&mut Bencher<, M>, &I::Item) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function under various inputs","sig":null,"attributes":[{"value":"/ Benchmarks a function under various inputs","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57423,"byte_end":57469,"line_start":1517,"line_end":1517,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57474,"byte_end":57477,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method to execute several related benchmarks. Each benchmark will","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57482,"byte_end":57573,"line_start":1519,"line_end":1519,"column_start":5,"column_end":96}},{"value":"/ receive the id: `${id}/${input}`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57578,"byte_end":57615,"line_start":1520,"line_end":1520,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57620,"byte_end":57623,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57628,"byte_end":57641,"line_start":1522,"line_end":1522,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57646,"byte_end":57649,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57654,"byte_end":57665,"line_start":1524,"line_end":1524,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57670,"byte_end":57712,"line_start":1525,"line_end":1525,"column_start":5,"column_end":47}},{"value":"/ # use self::criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57717,"byte_end":57746,"line_start":1526,"line_end":1526,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57751,"byte_end":57754,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57759,"byte_end":57792,"line_start":1528,"line_end":1528,"column_start":5,"column_end":38}},{"value":"/     c.bench_function_over_inputs(\"from_elem\",","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57797,"byte_end":57846,"line_start":1529,"line_end":1529,"column_start":5,"column_end":54}},{"value":"/         |b: &mut Bencher, size: &usize| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57851,"byte_end":57896,"line_start":1530,"line_end":1530,"column_start":5,"column_end":50}},{"value":"/             b.iter(|| vec![0u8; *size]);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57901,"byte_end":57945,"line_start":1531,"line_end":1531,"column_start":5,"column_end":49}},{"value":"/         },","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57950,"byte_end":57964,"line_start":1532,"line_end":1532,"column_start":5,"column_end":19}},{"value":"/         vec![1024, 2048, 4096]","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":57969,"byte_end":58003,"line_start":1533,"line_end":1533,"column_start":5,"column_end":39}},{"value":"/     );","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58008,"byte_end":58018,"line_start":1534,"line_end":1534,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58023,"byte_end":58028,"line_start":1535,"line_end":1535,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58033,"byte_end":58036,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58041,"byte_end":58078,"line_start":1537,"line_end":1537,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58083,"byte_end":58112,"line_start":1538,"line_end":1538,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58117,"byte_end":58124,"line_start":1539,"line_end":1539,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59724,"byte_end":59739,"line_start":1592,"line_end":1592,"column_start":12,"column_end":27},"name":"bench_functions","qualname":"<Criterion<M>>::bench_functions","value":"pub fn bench_functions<I>(&mut Self, &str, Vec<Fun<I, M>>, I)\n-> &mut Criterion<M> where I: fmt::Debug + 'static","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks multiple functions","sig":null,"attributes":[{"value":"/ Benchmarks multiple functions","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58552,"byte_end":58585,"line_start":1555,"line_end":1555,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58590,"byte_end":58593,"line_start":1556,"line_end":1556,"column_start":5,"column_end":8}},{"value":"/ All functions get the same input and are compared with the other implementations.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58598,"byte_end":58683,"line_start":1557,"line_end":1557,"column_start":5,"column_end":90}},{"value":"/ Works similar to `bench_function`, but with multiple functions.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58688,"byte_end":58755,"line_start":1558,"line_end":1558,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58760,"byte_end":58763,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58768,"byte_end":58781,"line_start":1560,"line_end":1560,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58786,"byte_end":58789,"line_start":1561,"line_end":1561,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58794,"byte_end":58806,"line_start":1562,"line_end":1562,"column_start":5,"column_end":17}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58811,"byte_end":58853,"line_start":1563,"line_end":1563,"column_start":5,"column_end":47}},{"value":"/ # use self::criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58858,"byte_end":58887,"line_start":1564,"line_end":1564,"column_start":5,"column_end":34}},{"value":"/ # fn seq_fib(i: &u32) {}","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58892,"byte_end":58920,"line_start":1565,"line_end":1565,"column_start":5,"column_end":33}},{"value":"/ # fn par_fib(i: &u32) {}","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58925,"byte_end":58953,"line_start":1566,"line_end":1566,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58958,"byte_end":58961,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ fn bench_seq_fib(b: &mut Bencher, i: &u32) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":58966,"byte_end":59014,"line_start":1568,"line_end":1568,"column_start":5,"column_end":53}},{"value":"/     b.iter(|| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59019,"byte_end":59038,"line_start":1569,"line_end":1569,"column_start":5,"column_end":24}},{"value":"/         seq_fib(i);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59043,"byte_end":59066,"line_start":1570,"line_end":1570,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59071,"byte_end":59082,"line_start":1571,"line_end":1571,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59087,"byte_end":59092,"line_start":1572,"line_end":1572,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59097,"byte_end":59100,"line_start":1573,"line_end":1573,"column_start":5,"column_end":8}},{"value":"/ fn bench_par_fib(b: &mut Bencher, i: &u32) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59105,"byte_end":59153,"line_start":1574,"line_end":1574,"column_start":5,"column_end":53}},{"value":"/     b.iter(|| {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59158,"byte_end":59177,"line_start":1575,"line_end":1575,"column_start":5,"column_end":24}},{"value":"/         par_fib(i);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59182,"byte_end":59205,"line_start":1576,"line_end":1576,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59210,"byte_end":59221,"line_start":1577,"line_end":1577,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59226,"byte_end":59231,"line_start":1578,"line_end":1578,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59236,"byte_end":59239,"line_start":1579,"line_end":1579,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59244,"byte_end":59277,"line_start":1580,"line_end":1580,"column_start":5,"column_end":38}},{"value":"/     let sequential_fib = Fun::new(\"Sequential\", bench_seq_fib);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59282,"byte_end":59349,"line_start":1581,"line_end":1581,"column_start":5,"column_end":72}},{"value":"/     let parallel_fib = Fun::new(\"Parallel\", bench_par_fib);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59354,"byte_end":59417,"line_start":1582,"line_end":1582,"column_start":5,"column_end":68}},{"value":"/     let funs = vec![sequential_fib, parallel_fib];","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59422,"byte_end":59476,"line_start":1583,"line_end":1583,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59481,"byte_end":59484,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/     c.bench_functions(\"Fibonacci\", funs, 14);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59489,"byte_end":59538,"line_start":1585,"line_end":1585,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59543,"byte_end":59548,"line_start":1586,"line_end":1586,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59553,"byte_end":59556,"line_start":1587,"line_end":1587,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59561,"byte_end":59598,"line_start":1588,"line_end":1588,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59603,"byte_end":59632,"line_start":1589,"line_end":1589,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":59637,"byte_end":59644,"line_start":1590,"line_end":1590,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":61123,"byte_end":61128,"line_start":1635,"line_end":1635,"column_start":12,"column_end":17},"name":"bench","qualname":"<Criterion<M>>::bench","value":"pub fn bench<B: BenchmarkDefinition<M>>(&mut Self, &str, B)\n-> &mut Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Executes the given benchmark. Use this variant to execute benchmarks\n with complex configuration. This can be used to compare multiple\n functions, execute benchmarks with custom configuration settings and\n more. See the Benchmark and ParameterizedBenchmark structs for more\n information.","sig":null,"attributes":[{"value":"/ Executes the given benchmark. Use this variant to execute benchmarks","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60108,"byte_end":60180,"line_start":1609,"line_end":1609,"column_start":5,"column_end":77}},{"value":"/ with complex configuration. This can be used to compare multiple","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60185,"byte_end":60253,"line_start":1610,"line_end":1610,"column_start":5,"column_end":73}},{"value":"/ functions, execute benchmarks with custom configuration settings and","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60258,"byte_end":60330,"line_start":1611,"line_end":1611,"column_start":5,"column_end":77}},{"value":"/ more. See the Benchmark and ParameterizedBenchmark structs for more","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60335,"byte_end":60406,"line_start":1612,"line_end":1612,"column_start":5,"column_end":76}},{"value":"/ information.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60411,"byte_end":60427,"line_start":1613,"line_end":1613,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60432,"byte_end":60435,"line_start":1614,"line_end":1614,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60440,"byte_end":60451,"line_start":1615,"line_end":1615,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60456,"byte_end":60498,"line_start":1616,"line_end":1616,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60503,"byte_end":60526,"line_start":1617,"line_end":1617,"column_start":5,"column_end":28}},{"value":"/ # fn routine_1() {}","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60531,"byte_end":60554,"line_start":1618,"line_end":1618,"column_start":5,"column_end":28}},{"value":"/ # fn routine_2() {}","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60559,"byte_end":60582,"line_start":1619,"line_end":1619,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60587,"byte_end":60590,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60595,"byte_end":60628,"line_start":1621,"line_end":1621,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60633,"byte_end":60688,"line_start":1622,"line_end":1622,"column_start":5,"column_end":60}},{"value":"/     c.bench(","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60693,"byte_end":60709,"line_start":1623,"line_end":1623,"column_start":5,"column_end":21}},{"value":"/         \"routines\",","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60714,"byte_end":60737,"line_start":1624,"line_end":1624,"column_start":5,"column_end":28}},{"value":"/         Benchmark::new(\"routine_1\", |b| b.iter(|| routine_1()))","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60742,"byte_end":60809,"line_start":1625,"line_end":1625,"column_start":5,"column_end":72}},{"value":"/             .with_function(\"routine_2\", |b| b.iter(|| routine_2()))","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60814,"byte_end":60885,"line_start":1626,"line_end":1626,"column_start":5,"column_end":76}},{"value":"/             .sample_size(50)","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60890,"byte_end":60922,"line_start":1627,"line_end":1627,"column_start":5,"column_end":37}},{"value":"/     );","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60927,"byte_end":60937,"line_start":1628,"line_end":1628,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60942,"byte_end":60947,"line_start":1629,"line_end":1629,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60952,"byte_end":60955,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":60960,"byte_end":60997,"line_start":1631,"line_end":1631,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":61002,"byte_end":61031,"line_start":1632,"line_end":1632,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":61036,"byte_end":61043,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3217},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62158,"byte_end":62163,"line_start":1666,"line_end":1666,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::Throughput::Bytes","value":"Throughput::Bytes(u64)","parent":{"krate":0,"index":3216},"children":[],"decl_id":null,"docs":" Measure throughput in terms of bytes/second. The value should be the number of bytes\n processed by one iteration of the benchmarked code. Typically, this would be the length of\n an input string or `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Measure throughput in terms of bytes/second. The value should be the number of bytes","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":61930,"byte_end":62018,"line_start":1663,"line_end":1663,"column_start":5,"column_end":93}},{"value":"/ processed by one iteration of the benchmarked code. Typically, this would be the length of","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62023,"byte_end":62117,"line_start":1664,"line_end":1664,"column_start":5,"column_end":99}},{"value":"/ an input string or `&[u8]`.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62122,"byte_end":62153,"line_start":1665,"line_end":1665,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3220},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62487,"byte_end":62495,"line_start":1672,"line_end":1672,"column_start":5,"column_end":13},"name":"Elements","qualname":"::Throughput::Elements","value":"Throughput::Elements(u64)","parent":{"krate":0,"index":3216},"children":[],"decl_id":null,"docs":" Measure throughput in terms of elements/second. The value should be the number of elements\n processed by one iteration of the benchmarked code. Typically, this would be the size of a\n collection, but could also be the number of lines of input text or the number of values to\n parse.\n","sig":null,"attributes":[{"value":"/ Measure throughput in terms of elements/second. The value should be the number of elements","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62175,"byte_end":62269,"line_start":1668,"line_end":1668,"column_start":5,"column_end":99}},{"value":"/ processed by one iteration of the benchmarked code. Typically, this would be the size of a","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62274,"byte_end":62368,"line_start":1669,"line_end":1669,"column_start":5,"column_end":99}},{"value":"/ collection, but could also be the number of lines of input text or the number of values to","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62373,"byte_end":62467,"line_start":1670,"line_end":1670,"column_start":5,"column_end":99}},{"value":"/ parse.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62472,"byte_end":62482,"line_start":1671,"line_end":1671,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":3216},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":61913,"byte_end":61923,"line_start":1662,"line_end":1662,"column_start":10,"column_end":20},"name":"Throughput","qualname":"::Throughput","value":"pub enum Throughput {\n\n    /// Measure throughput in terms of bytes/second. The value should be the number of bytes\n    /// processed by one iteration of the benchmarked code. Typically, this would be the length of\n    /// an input string or `&[u8]`.\n    Bytes(u64),\n\n    /// Measure throughput in terms of elements/second. The value should be the number of elements\n    /// processed by one iteration of the benchmarked code. Typically, this would be the size of a\n    /// collection, but could also be the number of lines of input text or the number of values to\n    /// parse.\n    Elements(u64),\n}","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3220}],"decl_id":null,"docs":" Enum representing different ways of measuring the throughput of benchmarked code.\n If the throughput setting is configured for a benchmark then the estimated throughput will\n be reported as well as the time per iteration.\n","sig":null,"attributes":[{"value":"/ Enum representing different ways of measuring the throughput of benchmarked code.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":61554,"byte_end":61639,"line_start":1657,"line_end":1657,"column_start":1,"column_end":86}},{"value":"/ If the throughput setting is configured for a benchmark then the estimated throughput will","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":61640,"byte_end":61734,"line_start":1658,"line_end":1658,"column_start":1,"column_end":95}},{"value":"/ be reported as well as the time per iteration.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":61735,"byte_end":61785,"line_start":1659,"line_end":1659,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3277},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62610,"byte_end":62616,"line_start":1679,"line_end":1679,"column_start":5,"column_end":11},"name":"Linear","qualname":"::AxisScale::Linear","value":"AxisScale::Linear","parent":{"krate":0,"index":3276},"children":[],"decl_id":null,"docs":" Axes scale linearly\n","sig":null,"attributes":[{"value":"/ Axes scale linearly","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62582,"byte_end":62605,"line_start":1678,"line_end":1678,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3279},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62658,"byte_end":62669,"line_start":1682,"line_end":1682,"column_start":5,"column_end":16},"name":"Logarithmic","qualname":"::AxisScale::Logarithmic","value":"AxisScale::Logarithmic","parent":{"krate":0,"index":3276},"children":[],"decl_id":null,"docs":" Axes scale logarithmically\n","sig":null,"attributes":[{"value":"/ Axes scale logarithmically","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62623,"byte_end":62653,"line_start":1681,"line_end":1681,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3276},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62566,"byte_end":62575,"line_start":1677,"line_end":1677,"column_start":10,"column_end":19},"name":"AxisScale","qualname":"::AxisScale","value":"pub enum AxisScale {\n\n    /// Axes scale linearly\n    Linear,\n\n    /// Axes scale logarithmically\n    Logarithmic,\n}","parent":null,"children":[{"krate":0,"index":3277},{"krate":0,"index":3279}],"decl_id":null,"docs":" Axis scaling type\n","sig":null,"attributes":[{"value":"/ Axis scaling type","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62505,"byte_end":62526,"line_start":1675,"line_end":1675,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3286},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63312,"byte_end":63329,"line_start":1701,"line_end":1701,"column_start":12,"column_end":29},"name":"PlotConfiguration","qualname":"::PlotConfiguration","value":"PlotConfiguration {  }","parent":null,"children":[{"krate":0,"index":3287}],"decl_id":null,"docs":" Contains the configuration options for the plots generated by a particular benchmark\n or benchmark group.","sig":null,"attributes":[{"value":"/ Contains the configuration options for the plots generated by a particular benchmark","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62674,"byte_end":62762,"line_start":1685,"line_end":1685,"column_start":1,"column_end":89}},{"value":"/ or benchmark group.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62763,"byte_end":62786,"line_start":1686,"line_end":1686,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62787,"byte_end":62790,"line_start":1687,"line_end":1687,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62791,"byte_end":62802,"line_start":1688,"line_end":1688,"column_start":1,"column_end":12}},{"value":"/ use self::criterion::{Bencher, Criterion, Benchmark, PlotConfiguration, AxisScale};","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62803,"byte_end":62890,"line_start":1689,"line_end":1689,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62891,"byte_end":62894,"line_start":1690,"line_end":1690,"column_start":1,"column_end":4}},{"value":"/ let plot_config = PlotConfiguration::default()","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62895,"byte_end":62945,"line_start":1691,"line_end":1691,"column_start":1,"column_end":51}},{"value":"/     .summary_scale(AxisScale::Logarithmic);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62946,"byte_end":62993,"line_start":1692,"line_end":1692,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62994,"byte_end":62997,"line_start":1693,"line_end":1693,"column_start":1,"column_end":4}},{"value":"/ // Using Criterion::default() for simplicity; normally you'd use the macros.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":62998,"byte_end":63078,"line_start":1694,"line_end":1694,"column_start":1,"column_end":81}},{"value":"/ let mut criterion = Criterion::default();","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63079,"byte_end":63124,"line_start":1695,"line_end":1695,"column_start":1,"column_end":46}},{"value":"/ let mut benchmark_group = criterion.benchmark_group(\"Group name\");","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63125,"byte_end":63195,"line_start":1696,"line_end":1696,"column_start":1,"column_end":71}},{"value":"/ benchmark_group.plot_config(plot_config);","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63196,"byte_end":63241,"line_start":1697,"line_end":1697,"column_start":1,"column_end":46}},{"value":"/ // Use benchmark group","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63242,"byte_end":63268,"line_start":1698,"line_end":1698,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63269,"byte_end":63276,"line_start":1699,"line_end":1699,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63792,"byte_end":63805,"line_start":1717,"line_end":1717,"column_start":12,"column_end":25},"name":"summary_scale","qualname":"<PlotConfiguration>::summary_scale","value":"pub fn summary_scale(Self, AxisScale) -> PlotConfiguration","parent":null,"children":[],"decl_id":null,"docs":" Set the axis scale (linear or logarithmic) for the summary plots. Typically, you would\n set this to logarithmic if benchmarking over a range of inputs which scale exponentially.\n Defaults to linear.\n","sig":null,"attributes":[{"value":"/ Set the axis scale (linear or logarithmic) for the summary plots. Typically, you would","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63564,"byte_end":63654,"line_start":1714,"line_end":1714,"column_start":5,"column_end":95}},{"value":"/ set this to logarithmic if benchmarking over a range of inputs which scale exponentially.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63659,"byte_end":63752,"line_start":1715,"line_end":1715,"column_start":5,"column_end":98}},{"value":"/ Defaults to linear.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63757,"byte_end":63780,"line_start":1716,"line_end":1716,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3293},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64358,"byte_end":64362,"line_start":1730,"line_end":1730,"column_start":5,"column_end":9},"name":"Auto","qualname":"::SamplingMode::Auto","value":"SamplingMode::Auto","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Criterion.rs should choose a sampling method automatically. This is the default, and is\n recommended for most users and most benchmarks.\n","sig":null,"attributes":[{"value":"/ Criterion.rs should choose a sampling method automatically. This is the default, and is","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64206,"byte_end":64297,"line_start":1728,"line_end":1728,"column_start":5,"column_end":96}},{"value":"/ recommended for most users and most benchmarks.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64302,"byte_end":64353,"line_start":1729,"line_end":1729,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3295},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64568,"byte_end":64574,"line_start":1734,"line_end":1734,"column_start":5,"column_end":11},"name":"Linear","qualname":"::SamplingMode::Linear","value":"SamplingMode::Linear","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Scale the iteration count in each sample linearly. This is suitable for most benchmarks,\n but it tends to require many iterations which can make it very slow for very long benchmarks.\n","sig":null,"attributes":[{"value":"/ Scale the iteration count in each sample linearly. This is suitable for most benchmarks,","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64369,"byte_end":64461,"line_start":1732,"line_end":1732,"column_start":5,"column_end":97}},{"value":"/ but it tends to require many iterations which can make it very slow for very long benchmarks.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64466,"byte_end":64563,"line_start":1733,"line_end":1733,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3297},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64971,"byte_end":64975,"line_start":1740,"line_end":1740,"column_start":5,"column_end":9},"name":"Flat","qualname":"::SamplingMode::Flat","value":"SamplingMode::Flat","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Keep the iteration count the same for all samples. This is not recommended, as it affects\n the statistics that Criterion.rs can compute. However, it requires fewer iterations than\n the Linear method and therefore is more suitable for very long-running benchmarks where\n benchmark execution time is more of a problem and statistical precision is less important.\n","sig":null,"attributes":[{"value":"/ Keep the iteration count the same for all samples. This is not recommended, as it affects","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64581,"byte_end":64674,"line_start":1736,"line_end":1736,"column_start":5,"column_end":98}},{"value":"/ the statistics that Criterion.rs can compute. However, it requires fewer iterations than","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64679,"byte_end":64771,"line_start":1737,"line_end":1737,"column_start":5,"column_end":97}},{"value":"/ the Linear method and therefore is more suitable for very long-running benchmarks where","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64776,"byte_end":64867,"line_start":1738,"line_end":1738,"column_start":5,"column_end":96}},{"value":"/ benchmark execution time is more of a problem and statistical precision is less important.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64872,"byte_end":64966,"line_start":1739,"line_end":1739,"column_start":5,"column_end":99}}]},{"kind":"Enum","id":{"krate":0,"index":3292},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64187,"byte_end":64199,"line_start":1727,"line_end":1727,"column_start":10,"column_end":22},"name":"SamplingMode","qualname":"::SamplingMode","value":"pub enum SamplingMode {\n\n    /// Criterion.rs should choose a sampling method automatically. This is the default, and is\n    /// recommended for most users and most benchmarks.\n    Auto,\n\n    /// Scale the iteration count in each sample linearly. This is suitable for most benchmarks,\n    /// but it tends to require many iterations which can make it very slow for very long benchmarks.\n    Linear,\n\n    /// Keep the iteration count the same for all samples. This is not recommended, as it affects\n    /// the statistics that Criterion.rs can compute. However, it requires fewer iterations than\n    /// the Linear method and therefore is more suitable for very long-running benchmarks where\n    /// benchmark execution time is more of a problem and statistical precision is less important.\n    Flat,\n}","parent":null,"children":[{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3297}],"decl_id":null,"docs":" This enum allows the user to control how Criterion.rs chooses the iteration count when sampling.\n The default is Auto, which will choose a method automatically based on the iteration time during\n the warm-up phase.\n","sig":null,"attributes":[{"value":"/ This enum allows the user to control how Criterion.rs chooses the iteration count when sampling.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63923,"byte_end":64023,"line_start":1723,"line_end":1723,"column_start":1,"column_end":101}},{"value":"/ The default is Auto, which will choose a method automatically based on the iteration time during","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64024,"byte_end":64124,"line_start":1724,"line_end":1724,"column_start":1,"column_end":101}},{"value":"/ the warm-up phase.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64125,"byte_end":64147,"line_start":1725,"line_end":1725,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1956},"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":71043,"byte_end":71049,"line_start":1894,"line_end":1894,"column_start":8,"column_end":14},"name":"runner","qualname":"::runner","value":"pub fn runner(&[&Fn() -> ()])","parent":null,"children":[],"decl_id":null,"docs":" Custom-test-framework runner. Should not be called directly.\n","sig":null,"attributes":[{"value":"/ Custom-test-framework runner. Should not be called directly.","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":70956,"byte_end":71020,"line_start":1892,"line_end":1892,"column_start":1,"column_end":65}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":89396,"byte_end":89418,"line_start":40,"line_end":40,"column_start":18,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":89831,"byte_end":89853,"line_start":56,"line_end":56,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":97769,"byte_end":97778,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":99463,"byte_end":99472,"line_start":312,"line_end":312,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":101643,"byte_end":101665,"line_start":383,"line_end":383,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":104219,"byte_end":104241,"line_start":469,"line_end":469,"column_start":39,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112033,"byte_end":112047,"line_start":85,"line_end":85,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":122566,"byte_end":122580,"line_start":367,"line_end":367,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":123962,"byte_end":123973,"line_start":406,"line_end":406,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126483,"byte_end":126494,"line_start":472,"line_end":472,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126535,"byte_end":126536,"line_start":473,"line_end":473,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126749,"byte_end":126760,"line_start":480,"line_end":480,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126874,"byte_end":126875,"line_start":485,"line_end":485,"column_start":43,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":127544,"byte_end":127556,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":127693,"byte_end":127705,"line_start":19,"line_end":19,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":127825,"byte_end":127837,"line_start":24,"line_end":24,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":128381,"byte_end":128393,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":129351,"byte_end":129366,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":131852,"byte_end":131862,"line_start":133,"line_end":133,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":136159,"byte_end":136173,"line_start":282,"line_end":282,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":136607,"byte_end":136616,"line_start":298,"line_end":298,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":136967,"byte_end":136984,"line_start":311,"line_end":311,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":137259,"byte_end":137267,"line_start":324,"line_end":324,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":137732,"byte_end":137747,"line_start":343,"line_end":343,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":138455,"byte_end":138469,"line_start":363,"line_end":363,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","byte_start":139658,"byte_end":139673,"line_start":24,"line_end":24,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","byte_start":141048,"byte_end":141061,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","byte_start":141448,"byte_end":141461,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/error.rs","byte_start":142373,"byte_end":142378,"line_start":25,"line_end":25,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/error.rs","byte_start":143067,"byte_end":143072,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/error.rs","byte_start":143698,"byte_end":143703,"line_start":62,"line_end":62,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/estimate.rs","byte_start":144165,"byte_end":144174,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/estimate.rs","byte_start":147007,"byte_end":147016,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/estimate.rs","byte_start":147773,"byte_end":147786,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/estimate.rs","byte_start":148549,"byte_end":148564,"line_start":162,"line_end":162,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/estimate.rs","byte_start":148908,"byte_end":148927,"line_start":176,"line_end":176,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":156016,"byte_end":156035,"line_start":59,"line_end":59,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":157028,"byte_end":157032,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":157832,"byte_end":157842,"line_start":137,"line_end":137,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":159513,"byte_end":159527,"line_start":192,"line_end":192,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":162342,"byte_end":162346,"line_start":275,"line_end":275,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":163199,"byte_end":163203,"line_start":295,"line_end":295,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":172929,"byte_end":172933,"line_start":570,"line_end":570,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":193054,"byte_end":193071,"line_start":107,"line_end":107,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":194460,"byte_end":194477,"line_start":148,"line_end":148,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":195716,"byte_end":195724,"line_start":190,"line_end":190,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/gnuplot_backend/summary.rs","byte_start":243849,"byte_end":243858,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/gnuplot_backend/mod.rs","byte_start":200737,"byte_end":200740,"line_start":62,"line_end":62,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/gnuplot_backend/mod.rs","byte_start":200936,"byte_end":200943,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/plotters_backend/mod.rs","byte_start":252880,"byte_end":252895,"line_start":37,"line_end":37,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/mod.rs","byte_start":197127,"byte_end":197138,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/mod.rs","byte_start":198153,"byte_end":198161,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":302143,"byte_end":302159,"line_start":25,"line_end":25,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":303694,"byte_end":303709,"line_start":44,"line_end":44,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":305567,"byte_end":305578,"line_start":108,"line_end":108,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1177},{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":309172,"byte_end":309183,"line_start":225,"line_end":225,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":309314,"byte_end":309325,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":310002,"byte_end":310015,"line_start":254,"line_end":254,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":311586,"byte_end":311593,"line_start":304,"line_end":304,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":311707,"byte_end":311714,"line_start":309,"line_end":309,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":314311,"byte_end":314320,"line_start":406,"line_end":406,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":317022,"byte_end":317031,"line_start":516,"line_end":516,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":326184,"byte_end":326197,"line_start":764,"line_end":764,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/routine.rs","byte_start":335488,"byte_end":335496,"line_start":173,"line_end":173,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/routine.rs","byte_start":335781,"byte_end":335789,"line_start":187,"line_end":187,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/regression.rs","byte_start":346730,"byte_end":346735,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/resamples.rs","byte_start":348138,"byte_end":348147,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","byte_start":340265,"byte_end":340269,"line_start":21,"line_end":21,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","byte_start":340387,"byte_end":340391,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","byte_start":340482,"byte_end":340486,"line_start":30,"line_end":30,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","byte_start":340778,"byte_end":340782,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","byte_start":342655,"byte_end":342660,"line_start":115,"line_end":115,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":364128,"byte_end":364139,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/resamples.rs","byte_start":366326,"byte_end":366335,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369772,"byte_end":369778,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":376582,"byte_end":376588,"line_start":249,"line_end":249,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/kde/kernel.rs","byte_start":380828,"byte_end":380836,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/kde/mod.rs","byte_start":377024,"byte_end":377027,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/kde/mod.rs","byte_start":378317,"byte_end":378326,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386474,"byte_end":386487,"line_start":66,"line_end":66,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":387685,"byte_end":387698,"line_start":114,"line_end":114,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":387886,"byte_end":387899,"line_start":126,"line_end":126,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389030,"byte_end":389034,"line_start":178,"line_end":178,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390102,"byte_end":390107,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":337756,"byte_end":337768,"line_start":28,"line_end":28,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":339184,"byte_end":339196,"line_start":78,"line_end":78,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5045,"byte_end":5048,"line_start":168,"line_end":168,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9665,"byte_end":9674,"line_start":256,"line_end":256,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12115,"byte_end":12122,"line_start":298,"line_end":298,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1837},{"krate":0,"index":1842},{"krate":0,"index":1847},{"krate":0,"index":1853},{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24416,"byte_end":24420,"line_start":680,"line_end":680,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":25737,"byte_end":25746,"line_start":721,"line_end":721,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":28149,"byte_end":28158,"line_start":783,"line_end":783,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1921},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55213,"byte_end":55222,"line_start":1444,"line_end":1444,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":61430,"byte_end":61438,"line_start":1651,"line_end":1651,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63382,"byte_end":63399,"line_start":1705,"line_end":1705,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63540,"byte_end":63557,"line_start":1713,"line_end":1713,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64984,"byte_end":64996,"line_start":1742,"line_end":1742,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":66108,"byte_end":66126,"line_start":1775,"line_end":1775,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":1667,"byte_end":1678,"line_start":66,"line_end":66,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":538}},{"kind":"Mod","span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":1698,"byte_end":1706,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1103}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":89396,"byte_end":89418,"line_start":40,"line_end":40,"column_start":18,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1977},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":89831,"byte_end":89853,"line_start":56,"line_end":56,"column_start":6,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":91626,"byte_end":91631,"line_start":100,"line_end":100,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":97769,"byte_end":97778,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":99463,"byte_end":99472,"line_start":312,"line_end":312,"column_start":49,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":128},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":101643,"byte_end":101665,"line_start":383,"line_end":383,"column_start":12,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark.rs","byte_start":104219,"byte_end":104241,"line_start":469,"line_end":469,"column_start":39,"column_end":61},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":121},"to":{"krate":0,"index":133}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":112033,"byte_end":112047,"line_start":85,"line_end":85,"column_start":26,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":122566,"byte_end":122580,"line_start":367,"line_end":367,"column_start":35,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":190},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":123962,"byte_end":123973,"line_start":406,"line_end":406,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126483,"byte_end":126494,"line_start":472,"line_end":472,"column_start":28,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2007},"to":{"krate":0,"index":239}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126535,"byte_end":126536,"line_start":473,"line_end":473,"column_start":38,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":242},"to":{"krate":0,"index":239}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126666,"byte_end":126672,"line_start":477,"line_end":477,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":239},"to":{"krate":0,"index":243}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126749,"byte_end":126760,"line_start":480,"line_end":480,"column_start":26,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2007},"to":{"krate":0,"index":243}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/benchmark_group.rs","byte_start":126874,"byte_end":126875,"line_start":485,"line_end":485,"column_start":43,"column_end":44},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":248},"to":{"krate":0,"index":243}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":127544,"byte_end":127556,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":127693,"byte_end":127705,"line_start":19,"line_end":19,"column_start":31,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":127825,"byte_end":127837,"line_start":24,"line_end":24,"column_start":28,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2022},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":128381,"byte_end":128393,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2022},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":129351,"byte_end":129366,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":131852,"byte_end":131862,"line_start":133,"line_end":133,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":136159,"byte_end":136173,"line_start":282,"line_end":282,"column_start":37,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2331},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":136607,"byte_end":136616,"line_start":298,"line_end":298,"column_start":33,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2344},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":136967,"byte_end":136984,"line_start":311,"line_end":311,"column_start":42,"column_end":59},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2357},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":137259,"byte_end":137267,"line_start":324,"line_end":324,"column_start":36,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2367},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":137732,"byte_end":137747,"line_start":343,"line_end":343,"column_start":51,"column_end":66},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2378},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/connection.rs","byte_start":138455,"byte_end":138469,"line_start":363,"line_end":363,"column_start":42,"column_end":56},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2394},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","byte_start":139658,"byte_end":139673,"line_start":24,"line_end":24,"column_start":16,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","byte_start":141048,"byte_end":141061,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/csv_report.rs","byte_start":141448,"byte_end":141461,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":316},"to":{"krate":0,"index":1190}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/error.rs","byte_start":142373,"byte_end":142378,"line_start":25,"line_end":25,"column_start":23,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2470},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/error.rs","byte_start":143067,"byte_end":143072,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2470},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/error.rs","byte_start":143698,"byte_end":143703,"line_start":62,"line_end":62,"column_start":25,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2470},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/estimate.rs","byte_start":144165,"byte_end":144174,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2486},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/estimate.rs","byte_start":147007,"byte_end":147016,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/estimate.rs","byte_start":147773,"byte_end":147786,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/estimate.rs","byte_start":148549,"byte_end":148564,"line_start":162,"line_end":162,"column_start":6,"column_end":21},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/estimate.rs","byte_start":148908,"byte_end":148927,"line_start":176,"line_end":176,"column_start":6,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":156016,"byte_end":156035,"line_start":59,"line_end":59,"column_start":6,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":157028,"byte_end":157032,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":157832,"byte_end":157842,"line_start":137,"line_end":137,"column_start":10,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":159513,"byte_end":159527,"line_start":192,"line_end":192,"column_start":10,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":162342,"byte_end":162346,"line_start":275,"line_end":275,"column_start":6,"column_end":10},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":163199,"byte_end":163203,"line_start":295,"line_end":295,"column_start":17,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":478},"to":{"krate":0,"index":1190}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/html/mod.rs","byte_start":172929,"byte_end":172933,"line_start":570,"line_end":570,"column_start":6,"column_end":10},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":193054,"byte_end":193071,"line_start":107,"line_end":107,"column_start":6,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":194460,"byte_end":194477,"line_start":148,"line_end":148,"column_start":25,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":560},"to":{"krate":0,"index":545}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/measurement.rs","byte_start":195716,"byte_end":195724,"line_start":190,"line_end":190,"column_start":22,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":569},"to":{"krate":0,"index":551}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/gnuplot_backend/summary.rs","byte_start":243849,"byte_end":243858,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/gnuplot_backend/mod.rs","byte_start":200737,"byte_end":200740,"line_start":62,"line_end":62,"column_start":23,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":855}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/gnuplot_backend/mod.rs","byte_start":200936,"byte_end":200943,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2948},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/plotters_backend/mod.rs","byte_start":252880,"byte_end":252895,"line_start":37,"line_end":37,"column_start":18,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2952},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/mod.rs","byte_start":197127,"byte_end":197138,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/plot/mod.rs","byte_start":198153,"byte_end":198161,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/profiler.rs","byte_start":302143,"byte_end":302159,"line_start":25,"line_end":25,"column_start":19,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1108},"to":{"krate":0,"index":1105}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":303694,"byte_end":303709,"line_start":44,"line_end":44,"column_start":10,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":305567,"byte_end":305578,"line_start":108,"line_end":108,"column_start":6,"column_end":17},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":309172,"byte_end":309183,"line_start":225,"line_end":225,"column_start":23,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":309314,"byte_end":309325,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":310002,"byte_end":310015,"line_start":254,"line_end":254,"column_start":6,"column_end":19},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":311586,"byte_end":311593,"line_start":304,"line_end":304,"column_start":6,"column_end":13},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":311707,"byte_end":311714,"line_start":309,"line_end":309,"column_start":17,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1203},"to":{"krate":0,"index":1190}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":314311,"byte_end":314320,"line_start":406,"line_end":406,"column_start":6,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":317022,"byte_end":317031,"line_start":516,"line_end":516,"column_start":17,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1220},"to":{"krate":0,"index":1190}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/report.rs","byte_start":326184,"byte_end":326197,"line_start":764,"line_end":764,"column_start":17,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1250},"to":{"krate":0,"index":1190}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/routine.rs","byte_start":335488,"byte_end":335496,"line_start":173,"line_end":173,"column_start":28,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/routine.rs","byte_start":335781,"byte_end":335789,"line_start":187,"line_end":187,"column_start":46,"column_end":54},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1288},"to":{"krate":0,"index":1278}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/regression.rs","byte_start":346730,"byte_end":346735,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/resamples.rs","byte_start":348138,"byte_end":348147,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","byte_start":340265,"byte_end":340269,"line_start":21,"line_end":21,"column_start":25,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":1937}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","byte_start":340387,"byte_end":340391,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1345},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","byte_start":340482,"byte_end":340486,"line_start":30,"line_end":30,"column_start":16,"column_end":20},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","byte_start":340778,"byte_end":340782,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/bivariate/mod.rs","byte_start":342655,"byte_end":342660,"line_start":115,"line_end":115,"column_start":29,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1383},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349469,"byte_end":349474,"line_start":6,"line_end":6,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":1397}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":349814,"byte_end":349819,"line_start":15,"line_end":15,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":1400}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/tuple.rs","byte_start":350030,"byte_end":350035,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":1402}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/percentiles.rs","byte_start":364128,"byte_end":364139,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/resamples.rs","byte_start":366326,"byte_end":366335,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":369772,"byte_end":369778,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/sample.rs","byte_start":376582,"byte_end":376588,"line_start":249,"line_end":249,"column_start":24,"column_end":30},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1529},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/kde/kernel.rs","byte_start":380613,"byte_end":380617,"line_start":6,"line_end":6,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1937},"to":{"krate":0,"index":1573}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/kde/kernel.rs","byte_start":380620,"byte_end":380624,"line_start":6,"line_end":6,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1939},"to":{"krate":0,"index":1573}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/kde/kernel.rs","byte_start":380828,"byte_end":380836,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3080},"to":{"krate":0,"index":1573}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/kde/mod.rs","byte_start":377024,"byte_end":377027,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/kde/mod.rs","byte_start":378317,"byte_end":378326,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":386474,"byte_end":386487,"line_start":66,"line_end":66,"column_start":13,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":387685,"byte_end":387698,"line_start":114,"line_end":114,"column_start":23,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":387886,"byte_end":387899,"line_start":126,"line_end":126,"column_start":30,"column_end":43},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":389030,"byte_end":389034,"line_start":178,"line_end":178,"column_start":26,"column_end":30},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/univariate/outliers/tukey.rs","byte_start":390102,"byte_end":390107,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/float.rs","byte_start":391974,"byte_end":391979,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":41,"index":234},"to":{"krate":0,"index":1715}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/float.rs","byte_start":391982,"byte_end":391986,"line_start":10,"line_end":10,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":36,"index":12},"to":{"krate":0,"index":1715}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/float.rs","byte_start":392011,"byte_end":392015,"line_start":10,"line_end":10,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":36,"index":12},"to":{"krate":0,"index":1715}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/float.rs","byte_start":392038,"byte_end":392042,"line_start":10,"line_end":10,"column_start":76,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":1939},"to":{"krate":0,"index":1715}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/float.rs","byte_start":392045,"byte_end":392049,"line_start":10,"line_end":10,"column_start":83,"column_end":87},"kind":"SuperTrait","from":{"krate":2,"index":1927},"to":{"krate":0,"index":1715}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":337756,"byte_end":337768,"line_start":28,"line_end":28,"column_start":9,"column_end":21},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/stats/mod.rs","byte_start":339184,"byte_end":339196,"line_start":78,"line_end":78,"column_start":19,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3101},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":5045,"byte_end":5048,"line_start":168,"line_end":168,"column_start":25,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":9665,"byte_end":9674,"line_start":256,"line_end":256,"column_start":6,"column_end":15},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":12115,"byte_end":12122,"line_start":298,"line_end":298,"column_start":26,"column_end":33},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":24416,"byte_end":24420,"line_start":680,"line_end":680,"column_start":6,"column_end":10},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":25737,"byte_end":25746,"line_start":721,"line_end":721,"column_start":18,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1862},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":28149,"byte_end":28158,"line_start":783,"line_end":783,"column_start":22,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":55213,"byte_end":55222,"line_start":1444,"line_end":1444,"column_start":9,"column_end":18},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":61430,"byte_end":61438,"line_start":1651,"line_end":1651,"column_start":22,"column_end":30},"kind":{"Impl":{"id":127}},"from":{"krate":2,"index":32407},"to":{"krate":0,"index":1939}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63382,"byte_end":63399,"line_start":1705,"line_end":1705,"column_start":18,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3286},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":63540,"byte_end":63557,"line_start":1713,"line_end":1713,"column_start":6,"column_end":23},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":64984,"byte_end":64996,"line_start":1742,"line_end":1742,"column_start":6,"column_end":18},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/essamgouda97/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.3/src/lib.rs","byte_start":66108,"byte_end":66126,"line_start":1775,"line_end":1775,"column_start":6,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3304},"to":{"krate":4294967295,"index":4294967295}}]}